/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 746.0, "series": [{"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 2.0], [92.1, 2.0], [92.2, 2.0], [92.3, 2.0], [92.4, 2.0], [92.5, 2.0], [92.6, 2.0], [92.7, 2.0], [92.8, 2.0], [92.9, 2.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 2.0], [95.1, 2.0], [95.2, 2.0], [95.3, 2.0], [95.4, 2.0], [95.5, 2.0], [95.6, 2.0], [95.7, 2.0], [95.8, 2.0], [95.9, 2.0], [96.0, 2.0], [96.1, 2.0], [96.2, 2.0], [96.3, 2.0], [96.4, 2.0], [96.5, 2.0], [96.6, 2.0], [96.7, 2.0], [96.8, 2.0], [96.9, 2.0], [97.0, 2.0], [97.1, 2.0], [97.2, 2.0], [97.3, 2.0], [97.4, 2.0], [97.5, 2.0], [97.6, 2.0], [97.7, 2.0], [97.8, 2.0], [97.9, 2.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 2.0], [98.6, 2.0], [98.7, 2.0], [98.8, 2.0], [98.9, 2.0], [99.0, 2.0], [99.1, 2.0], [99.2, 2.0], [99.3, 2.0], [99.4, 2.0], [99.5, 2.0], [99.6, 2.0], [99.7, 2.0], [99.8, 2.0], [99.9, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[0.0, 199.0], [0.1, 199.0], [0.2, 199.0], [0.3, 199.0], [0.4, 199.0], [0.5, 199.0], [0.6, 199.0], [0.7, 199.0], [0.8, 199.0], [0.9, 199.0], [1.0, 199.0], [1.1, 199.0], [1.2, 199.0], [1.3, 199.0], [1.4, 199.0], [1.5, 199.0], [1.6, 199.0], [1.7, 199.0], [1.8, 199.0], [1.9, 199.0], [2.0, 199.0], [2.1, 199.0], [2.2, 199.0], [2.3, 199.0], [2.4, 199.0], [2.5, 199.0], [2.6, 199.0], [2.7, 199.0], [2.8, 199.0], [2.9, 199.0], [3.0, 199.0], [3.1, 199.0], [3.2, 199.0], [3.3, 199.0], [3.4, 199.0], [3.5, 199.0], [3.6, 199.0], [3.7, 199.0], [3.8, 199.0], [3.9, 199.0], [4.0, 199.0], [4.1, 199.0], [4.2, 199.0], [4.3, 199.0], [4.4, 199.0], [4.5, 199.0], [4.6, 199.0], [4.7, 199.0], [4.8, 199.0], [4.9, 199.0], [5.0, 199.0], [5.1, 199.0], [5.2, 199.0], [5.3, 199.0], [5.4, 199.0], [5.5, 199.0], [5.6, 199.0], [5.7, 199.0], [5.8, 199.0], [5.9, 199.0], [6.0, 199.0], [6.1, 199.0], [6.2, 199.0], [6.3, 199.0], [6.4, 199.0], [6.5, 199.0], [6.6, 199.0], [6.7, 199.0], [6.8, 199.0], [6.9, 199.0], [7.0, 199.0], [7.1, 199.0], [7.2, 199.0], [7.3, 199.0], [7.4, 199.0], [7.5, 199.0], [7.6, 199.0], [7.7, 199.0], [7.8, 199.0], [7.9, 199.0], [8.0, 199.0], [8.1, 199.0], [8.2, 199.0], [8.3, 199.0], [8.4, 199.0], [8.5, 199.0], [8.6, 199.0], [8.7, 199.0], [8.8, 199.0], [8.9, 199.0], [9.0, 199.0], [9.1, 199.0], [9.2, 199.0], [9.3, 199.0], [9.4, 199.0], [9.5, 199.0], [9.6, 199.0], [9.7, 199.0], [9.8, 199.0], [9.9, 199.0], [10.0, 199.0], [10.1, 199.0], [10.2, 199.0], [10.3, 199.0], [10.4, 199.0], [10.5, 199.0], [10.6, 199.0], [10.7, 199.0], [10.8, 199.0], [10.9, 199.0], [11.0, 199.0], [11.1, 199.0], [11.2, 199.0], [11.3, 199.0], [11.4, 199.0], [11.5, 199.0], [11.6, 199.0], [11.7, 199.0], [11.8, 199.0], [11.9, 199.0], [12.0, 199.0], [12.1, 199.0], [12.2, 199.0], [12.3, 199.0], [12.4, 199.0], [12.5, 199.0], [12.6, 199.0], [12.7, 199.0], [12.8, 199.0], [12.9, 199.0], [13.0, 199.0], [13.1, 199.0], [13.2, 199.0], [13.3, 199.0], [13.4, 199.0], [13.5, 199.0], [13.6, 199.0], [13.7, 199.0], [13.8, 199.0], [13.9, 199.0], [14.0, 199.0], [14.1, 199.0], [14.2, 199.0], [14.3, 199.0], [14.4, 199.0], [14.5, 199.0], [14.6, 199.0], [14.7, 199.0], [14.8, 199.0], [14.9, 199.0], [15.0, 199.0], [15.1, 199.0], [15.2, 199.0], [15.3, 199.0], [15.4, 199.0], [15.5, 199.0], [15.6, 199.0], [15.7, 199.0], [15.8, 199.0], [15.9, 199.0], [16.0, 199.0], [16.1, 199.0], [16.2, 199.0], [16.3, 199.0], [16.4, 199.0], [16.5, 199.0], [16.6, 199.0], [16.7, 199.0], [16.8, 199.0], [16.9, 199.0], [17.0, 199.0], [17.1, 199.0], [17.2, 199.0], [17.3, 199.0], [17.4, 199.0], [17.5, 199.0], [17.6, 199.0], [17.7, 199.0], [17.8, 199.0], [17.9, 199.0], [18.0, 199.0], [18.1, 199.0], [18.2, 199.0], [18.3, 199.0], [18.4, 199.0], [18.5, 199.0], [18.6, 199.0], [18.7, 199.0], [18.8, 199.0], [18.9, 199.0], [19.0, 199.0], [19.1, 199.0], [19.2, 199.0], [19.3, 199.0], [19.4, 199.0], [19.5, 199.0], [19.6, 199.0], [19.7, 199.0], [19.8, 199.0], [19.9, 199.0], [20.0, 199.0], [20.1, 199.0], [20.2, 199.0], [20.3, 199.0], [20.4, 199.0], [20.5, 199.0], [20.6, 199.0], [20.7, 199.0], [20.8, 199.0], [20.9, 199.0], [21.0, 199.0], [21.1, 199.0], [21.2, 199.0], [21.3, 199.0], [21.4, 199.0], [21.5, 199.0], [21.6, 199.0], [21.7, 199.0], [21.8, 199.0], [21.9, 199.0], [22.0, 199.0], [22.1, 199.0], [22.2, 199.0], [22.3, 199.0], [22.4, 199.0], [22.5, 199.0], [22.6, 199.0], [22.7, 199.0], [22.8, 199.0], [22.9, 199.0], [23.0, 199.0], [23.1, 199.0], [23.2, 199.0], [23.3, 199.0], [23.4, 199.0], [23.5, 199.0], [23.6, 199.0], [23.7, 199.0], [23.8, 199.0], [23.9, 199.0], [24.0, 199.0], [24.1, 199.0], [24.2, 199.0], [24.3, 199.0], [24.4, 199.0], [24.5, 199.0], [24.6, 199.0], [24.7, 199.0], [24.8, 199.0], [24.9, 199.0], [25.0, 199.0], [25.1, 199.0], [25.2, 199.0], [25.3, 199.0], [25.4, 199.0], [25.5, 199.0], [25.6, 199.0], [25.7, 199.0], [25.8, 199.0], [25.9, 199.0], [26.0, 199.0], [26.1, 199.0], [26.2, 199.0], [26.3, 199.0], [26.4, 199.0], [26.5, 199.0], [26.6, 199.0], [26.7, 199.0], [26.8, 199.0], [26.9, 199.0], [27.0, 199.0], [27.1, 199.0], [27.2, 199.0], [27.3, 199.0], [27.4, 199.0], [27.5, 199.0], [27.6, 199.0], [27.7, 199.0], [27.8, 199.0], [27.9, 199.0], [28.0, 199.0], [28.1, 199.0], [28.2, 199.0], [28.3, 199.0], [28.4, 199.0], [28.5, 199.0], [28.6, 199.0], [28.7, 199.0], [28.8, 199.0], [28.9, 199.0], [29.0, 199.0], [29.1, 199.0], [29.2, 199.0], [29.3, 199.0], [29.4, 199.0], [29.5, 199.0], [29.6, 199.0], [29.7, 199.0], [29.8, 199.0], [29.9, 199.0], [30.0, 199.0], [30.1, 199.0], [30.2, 199.0], [30.3, 199.0], [30.4, 199.0], [30.5, 199.0], [30.6, 199.0], [30.7, 199.0], [30.8, 199.0], [30.9, 199.0], [31.0, 199.0], [31.1, 199.0], [31.2, 199.0], [31.3, 199.0], [31.4, 199.0], [31.5, 199.0], [31.6, 199.0], [31.7, 199.0], [31.8, 199.0], [31.9, 199.0], [32.0, 199.0], [32.1, 199.0], [32.2, 199.0], [32.3, 199.0], [32.4, 199.0], [32.5, 199.0], [32.6, 199.0], [32.7, 199.0], [32.8, 199.0], [32.9, 199.0], [33.0, 199.0], [33.1, 199.0], [33.2, 199.0], [33.3, 199.0], [33.4, 199.0], [33.5, 199.0], [33.6, 199.0], [33.7, 199.0], [33.8, 199.0], [33.9, 199.0], [34.0, 199.0], [34.1, 199.0], [34.2, 199.0], [34.3, 199.0], [34.4, 199.0], [34.5, 199.0], [34.6, 199.0], [34.7, 199.0], [34.8, 199.0], [34.9, 199.0], [35.0, 199.0], [35.1, 199.0], [35.2, 199.0], [35.3, 199.0], [35.4, 199.0], [35.5, 199.0], [35.6, 199.0], [35.7, 199.0], [35.8, 199.0], [35.9, 199.0], [36.0, 199.0], [36.1, 199.0], [36.2, 199.0], [36.3, 199.0], [36.4, 199.0], [36.5, 199.0], [36.6, 199.0], [36.7, 199.0], [36.8, 199.0], [36.9, 199.0], [37.0, 199.0], [37.1, 199.0], [37.2, 199.0], [37.3, 199.0], [37.4, 199.0], [37.5, 199.0], [37.6, 199.0], [37.7, 199.0], [37.8, 199.0], [37.9, 199.0], [38.0, 199.0], [38.1, 199.0], [38.2, 199.0], [38.3, 199.0], [38.4, 199.0], [38.5, 199.0], [38.6, 199.0], [38.7, 199.0], [38.8, 199.0], [38.9, 199.0], [39.0, 199.0], [39.1, 199.0], [39.2, 199.0], [39.3, 199.0], [39.4, 199.0], [39.5, 199.0], [39.6, 199.0], [39.7, 199.0], [39.8, 199.0], [39.9, 199.0], [40.0, 199.0], [40.1, 199.0], [40.2, 199.0], [40.3, 199.0], [40.4, 199.0], [40.5, 199.0], [40.6, 199.0], [40.7, 199.0], [40.8, 199.0], [40.9, 199.0], [41.0, 199.0], [41.1, 199.0], [41.2, 199.0], [41.3, 199.0], [41.4, 199.0], [41.5, 199.0], [41.6, 199.0], [41.7, 199.0], [41.8, 199.0], [41.9, 199.0], [42.0, 199.0], [42.1, 199.0], [42.2, 199.0], [42.3, 199.0], [42.4, 199.0], [42.5, 199.0], [42.6, 199.0], [42.7, 199.0], [42.8, 199.0], [42.9, 199.0], [43.0, 199.0], [43.1, 199.0], [43.2, 199.0], [43.3, 199.0], [43.4, 199.0], [43.5, 199.0], [43.6, 199.0], [43.7, 199.0], [43.8, 199.0], [43.9, 199.0], [44.0, 199.0], [44.1, 199.0], [44.2, 199.0], [44.3, 199.0], [44.4, 199.0], [44.5, 199.0], [44.6, 199.0], [44.7, 199.0], [44.8, 199.0], [44.9, 199.0], [45.0, 199.0], [45.1, 199.0], [45.2, 199.0], [45.3, 199.0], [45.4, 199.0], [45.5, 199.0], [45.6, 199.0], [45.7, 199.0], [45.8, 199.0], [45.9, 199.0], [46.0, 199.0], [46.1, 199.0], [46.2, 199.0], [46.3, 199.0], [46.4, 199.0], [46.5, 199.0], [46.6, 199.0], [46.7, 199.0], [46.8, 199.0], [46.9, 199.0], [47.0, 199.0], [47.1, 199.0], [47.2, 199.0], [47.3, 199.0], [47.4, 199.0], [47.5, 199.0], [47.6, 199.0], [47.7, 199.0], [47.8, 199.0], [47.9, 199.0], [48.0, 199.0], [48.1, 199.0], [48.2, 199.0], [48.3, 199.0], [48.4, 199.0], [48.5, 199.0], [48.6, 199.0], [48.7, 199.0], [48.8, 199.0], [48.9, 199.0], [49.0, 199.0], [49.1, 199.0], [49.2, 199.0], [49.3, 199.0], [49.4, 199.0], [49.5, 199.0], [49.6, 199.0], [49.7, 199.0], [49.8, 199.0], [49.9, 199.0], [50.0, 199.0], [50.1, 199.0], [50.2, 199.0], [50.3, 199.0], [50.4, 199.0], [50.5, 199.0], [50.6, 199.0], [50.7, 199.0], [50.8, 199.0], [50.9, 199.0], [51.0, 199.0], [51.1, 199.0], [51.2, 199.0], [51.3, 199.0], [51.4, 199.0], [51.5, 199.0], [51.6, 199.0], [51.7, 199.0], [51.8, 199.0], [51.9, 199.0], [52.0, 199.0], [52.1, 199.0], [52.2, 199.0], [52.3, 199.0], [52.4, 199.0], [52.5, 199.0], [52.6, 199.0], [52.7, 199.0], [52.8, 199.0], [52.9, 199.0], [53.0, 199.0], [53.1, 199.0], [53.2, 199.0], [53.3, 199.0], [53.4, 199.0], [53.5, 199.0], [53.6, 199.0], [53.7, 199.0], [53.8, 199.0], [53.9, 199.0], [54.0, 199.0], [54.1, 199.0], [54.2, 199.0], [54.3, 199.0], [54.4, 199.0], [54.5, 199.0], [54.6, 199.0], [54.7, 199.0], [54.8, 199.0], [54.9, 199.0], [55.0, 199.0], [55.1, 199.0], [55.2, 199.0], [55.3, 199.0], [55.4, 199.0], [55.5, 199.0], [55.6, 199.0], [55.7, 199.0], [55.8, 199.0], [55.9, 199.0], [56.0, 199.0], [56.1, 199.0], [56.2, 199.0], [56.3, 199.0], [56.4, 199.0], [56.5, 199.0], [56.6, 199.0], [56.7, 199.0], [56.8, 199.0], [56.9, 199.0], [57.0, 199.0], [57.1, 199.0], [57.2, 199.0], [57.3, 199.0], [57.4, 199.0], [57.5, 199.0], [57.6, 199.0], [57.7, 199.0], [57.8, 199.0], [57.9, 199.0], [58.0, 199.0], [58.1, 199.0], [58.2, 199.0], [58.3, 199.0], [58.4, 199.0], [58.5, 199.0], [58.6, 199.0], [58.7, 199.0], [58.8, 199.0], [58.9, 199.0], [59.0, 199.0], [59.1, 199.0], [59.2, 199.0], [59.3, 199.0], [59.4, 199.0], [59.5, 199.0], [59.6, 199.0], [59.7, 199.0], [59.8, 199.0], [59.9, 199.0], [60.0, 199.0], [60.1, 199.0], [60.2, 199.0], [60.3, 199.0], [60.4, 199.0], [60.5, 199.0], [60.6, 199.0], [60.7, 199.0], [60.8, 199.0], [60.9, 199.0], [61.0, 199.0], [61.1, 199.0], [61.2, 199.0], [61.3, 199.0], [61.4, 199.0], [61.5, 199.0], [61.6, 199.0], [61.7, 199.0], [61.8, 199.0], [61.9, 199.0], [62.0, 199.0], [62.1, 199.0], [62.2, 199.0], [62.3, 199.0], [62.4, 199.0], [62.5, 199.0], [62.6, 199.0], [62.7, 199.0], [62.8, 199.0], [62.9, 199.0], [63.0, 199.0], [63.1, 199.0], [63.2, 199.0], [63.3, 199.0], [63.4, 199.0], [63.5, 199.0], [63.6, 199.0], [63.7, 199.0], [63.8, 199.0], [63.9, 199.0], [64.0, 199.0], [64.1, 199.0], [64.2, 199.0], [64.3, 199.0], [64.4, 199.0], [64.5, 199.0], [64.6, 199.0], [64.7, 199.0], [64.8, 199.0], [64.9, 199.0], [65.0, 199.0], [65.1, 199.0], [65.2, 199.0], [65.3, 199.0], [65.4, 199.0], [65.5, 199.0], [65.6, 199.0], [65.7, 199.0], [65.8, 199.0], [65.9, 199.0], [66.0, 199.0], [66.1, 199.0], [66.2, 199.0], [66.3, 199.0], [66.4, 199.0], [66.5, 199.0], [66.6, 199.0], [66.7, 199.0], [66.8, 199.0], [66.9, 199.0], [67.0, 199.0], [67.1, 199.0], [67.2, 199.0], [67.3, 199.0], [67.4, 199.0], [67.5, 199.0], [67.6, 199.0], [67.7, 199.0], [67.8, 199.0], [67.9, 199.0], [68.0, 199.0], [68.1, 199.0], [68.2, 199.0], [68.3, 199.0], [68.4, 199.0], [68.5, 199.0], [68.6, 199.0], [68.7, 199.0], [68.8, 199.0], [68.9, 199.0], [69.0, 199.0], [69.1, 199.0], [69.2, 199.0], [69.3, 199.0], [69.4, 199.0], [69.5, 199.0], [69.6, 199.0], [69.7, 199.0], [69.8, 199.0], [69.9, 199.0], [70.0, 199.0], [70.1, 199.0], [70.2, 199.0], [70.3, 199.0], [70.4, 199.0], [70.5, 199.0], [70.6, 199.0], [70.7, 199.0], [70.8, 199.0], [70.9, 199.0], [71.0, 199.0], [71.1, 199.0], [71.2, 199.0], [71.3, 199.0], [71.4, 199.0], [71.5, 199.0], [71.6, 199.0], [71.7, 199.0], [71.8, 199.0], [71.9, 199.0], [72.0, 199.0], [72.1, 199.0], [72.2, 199.0], [72.3, 199.0], [72.4, 199.0], [72.5, 199.0], [72.6, 199.0], [72.7, 199.0], [72.8, 199.0], [72.9, 199.0], [73.0, 199.0], [73.1, 199.0], [73.2, 199.0], [73.3, 199.0], [73.4, 199.0], [73.5, 199.0], [73.6, 199.0], [73.7, 199.0], [73.8, 199.0], [73.9, 199.0], [74.0, 199.0], [74.1, 199.0], [74.2, 199.0], [74.3, 199.0], [74.4, 199.0], [74.5, 199.0], [74.6, 199.0], [74.7, 199.0], [74.8, 199.0], [74.9, 199.0], [75.0, 199.0], [75.1, 199.0], [75.2, 199.0], [75.3, 199.0], [75.4, 199.0], [75.5, 199.0], [75.6, 199.0], [75.7, 199.0], [75.8, 199.0], [75.9, 199.0], [76.0, 199.0], [76.1, 199.0], [76.2, 199.0], [76.3, 199.0], [76.4, 199.0], [76.5, 199.0], [76.6, 199.0], [76.7, 199.0], [76.8, 199.0], [76.9, 199.0], [77.0, 199.0], [77.1, 199.0], [77.2, 199.0], [77.3, 199.0], [77.4, 199.0], [77.5, 199.0], [77.6, 199.0], [77.7, 199.0], [77.8, 199.0], [77.9, 199.0], [78.0, 199.0], [78.1, 199.0], [78.2, 199.0], [78.3, 199.0], [78.4, 199.0], [78.5, 199.0], [78.6, 199.0], [78.7, 199.0], [78.8, 199.0], [78.9, 199.0], [79.0, 199.0], [79.1, 199.0], [79.2, 199.0], [79.3, 199.0], [79.4, 199.0], [79.5, 199.0], [79.6, 199.0], [79.7, 199.0], [79.8, 199.0], [79.9, 199.0], [80.0, 199.0], [80.1, 199.0], [80.2, 199.0], [80.3, 199.0], [80.4, 199.0], [80.5, 199.0], [80.6, 199.0], [80.7, 199.0], [80.8, 199.0], [80.9, 199.0], [81.0, 199.0], [81.1, 199.0], [81.2, 199.0], [81.3, 199.0], [81.4, 199.0], [81.5, 199.0], [81.6, 199.0], [81.7, 199.0], [81.8, 199.0], [81.9, 199.0], [82.0, 199.0], [82.1, 199.0], [82.2, 199.0], [82.3, 199.0], [82.4, 199.0], [82.5, 199.0], [82.6, 199.0], [82.7, 199.0], [82.8, 199.0], [82.9, 199.0], [83.0, 199.0], [83.1, 199.0], [83.2, 199.0], [83.3, 199.0], [83.4, 199.0], [83.5, 199.0], [83.6, 199.0], [83.7, 199.0], [83.8, 199.0], [83.9, 199.0], [84.0, 199.0], [84.1, 199.0], [84.2, 199.0], [84.3, 199.0], [84.4, 199.0], [84.5, 199.0], [84.6, 199.0], [84.7, 199.0], [84.8, 199.0], [84.9, 199.0], [85.0, 199.0], [85.1, 199.0], [85.2, 199.0], [85.3, 199.0], [85.4, 199.0], [85.5, 199.0], [85.6, 199.0], [85.7, 199.0], [85.8, 199.0], [85.9, 199.0], [86.0, 199.0], [86.1, 199.0], [86.2, 199.0], [86.3, 199.0], [86.4, 199.0], [86.5, 199.0], [86.6, 199.0], [86.7, 199.0], [86.8, 199.0], [86.9, 199.0], [87.0, 199.0], [87.1, 199.0], [87.2, 199.0], [87.3, 199.0], [87.4, 199.0], [87.5, 199.0], [87.6, 199.0], [87.7, 199.0], [87.8, 199.0], [87.9, 199.0], [88.0, 199.0], [88.1, 199.0], [88.2, 199.0], [88.3, 199.0], [88.4, 199.0], [88.5, 199.0], [88.6, 199.0], [88.7, 199.0], [88.8, 199.0], [88.9, 199.0], [89.0, 199.0], [89.1, 199.0], [89.2, 199.0], [89.3, 199.0], [89.4, 199.0], [89.5, 199.0], [89.6, 199.0], [89.7, 199.0], [89.8, 199.0], [89.9, 199.0], [90.0, 199.0], [90.1, 199.0], [90.2, 199.0], [90.3, 199.0], [90.4, 199.0], [90.5, 199.0], [90.6, 199.0], [90.7, 199.0], [90.8, 199.0], [90.9, 199.0], [91.0, 199.0], [91.1, 199.0], [91.2, 199.0], [91.3, 199.0], [91.4, 199.0], [91.5, 199.0], [91.6, 199.0], [91.7, 199.0], [91.8, 199.0], [91.9, 199.0], [92.0, 199.0], [92.1, 199.0], [92.2, 199.0], [92.3, 199.0], [92.4, 199.0], [92.5, 199.0], [92.6, 199.0], [92.7, 199.0], [92.8, 199.0], [92.9, 199.0], [93.0, 199.0], [93.1, 199.0], [93.2, 199.0], [93.3, 199.0], [93.4, 199.0], [93.5, 199.0], [93.6, 199.0], [93.7, 199.0], [93.8, 199.0], [93.9, 199.0], [94.0, 199.0], [94.1, 199.0], [94.2, 199.0], [94.3, 199.0], [94.4, 199.0], [94.5, 199.0], [94.6, 199.0], [94.7, 199.0], [94.8, 199.0], [94.9, 199.0], [95.0, 199.0], [95.1, 199.0], [95.2, 199.0], [95.3, 199.0], [95.4, 199.0], [95.5, 199.0], [95.6, 199.0], [95.7, 199.0], [95.8, 199.0], [95.9, 199.0], [96.0, 199.0], [96.1, 199.0], [96.2, 199.0], [96.3, 199.0], [96.4, 199.0], [96.5, 199.0], [96.6, 199.0], [96.7, 199.0], [96.8, 199.0], [96.9, 199.0], [97.0, 199.0], [97.1, 199.0], [97.2, 199.0], [97.3, 199.0], [97.4, 199.0], [97.5, 199.0], [97.6, 199.0], [97.7, 199.0], [97.8, 199.0], [97.9, 199.0], [98.0, 199.0], [98.1, 199.0], [98.2, 199.0], [98.3, 199.0], [98.4, 199.0], [98.5, 199.0], [98.6, 199.0], [98.7, 199.0], [98.8, 199.0], [98.9, 199.0], [99.0, 199.0], [99.1, 199.0], [99.2, 199.0], [99.3, 199.0], [99.4, 199.0], [99.5, 199.0], [99.6, 199.0], [99.7, 199.0], [99.8, 199.0], [99.9, 199.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[0.0, 172.0], [0.1, 172.0], [0.2, 172.0], [0.3, 172.0], [0.4, 172.0], [0.5, 172.0], [0.6, 172.0], [0.7, 172.0], [0.8, 172.0], [0.9, 172.0], [1.0, 172.0], [1.1, 172.0], [1.2, 172.0], [1.3, 172.0], [1.4, 172.0], [1.5, 172.0], [1.6, 172.0], [1.7, 172.0], [1.8, 172.0], [1.9, 172.0], [2.0, 172.0], [2.1, 172.0], [2.2, 172.0], [2.3, 172.0], [2.4, 172.0], [2.5, 172.0], [2.6, 172.0], [2.7, 172.0], [2.8, 172.0], [2.9, 172.0], [3.0, 172.0], [3.1, 172.0], [3.2, 172.0], [3.3, 172.0], [3.4, 172.0], [3.5, 172.0], [3.6, 172.0], [3.7, 172.0], [3.8, 172.0], [3.9, 172.0], [4.0, 172.0], [4.1, 172.0], [4.2, 172.0], [4.3, 172.0], [4.4, 172.0], [4.5, 172.0], [4.6, 172.0], [4.7, 172.0], [4.8, 172.0], [4.9, 172.0], [5.0, 172.0], [5.1, 172.0], [5.2, 172.0], [5.3, 172.0], [5.4, 172.0], [5.5, 172.0], [5.6, 172.0], [5.7, 172.0], [5.8, 172.0], [5.9, 172.0], [6.0, 172.0], [6.1, 172.0], [6.2, 172.0], [6.3, 172.0], [6.4, 172.0], [6.5, 172.0], [6.6, 172.0], [6.7, 172.0], [6.8, 172.0], [6.9, 172.0], [7.0, 172.0], [7.1, 172.0], [7.2, 172.0], [7.3, 172.0], [7.4, 172.0], [7.5, 172.0], [7.6, 172.0], [7.7, 172.0], [7.8, 172.0], [7.9, 172.0], [8.0, 172.0], [8.1, 172.0], [8.2, 172.0], [8.3, 172.0], [8.4, 172.0], [8.5, 172.0], [8.6, 172.0], [8.7, 172.0], [8.8, 172.0], [8.9, 172.0], [9.0, 172.0], [9.1, 172.0], [9.2, 172.0], [9.3, 172.0], [9.4, 172.0], [9.5, 172.0], [9.6, 172.0], [9.7, 172.0], [9.8, 172.0], [9.9, 172.0], [10.0, 172.0], [10.1, 172.0], [10.2, 172.0], [10.3, 172.0], [10.4, 172.0], [10.5, 172.0], [10.6, 172.0], [10.7, 172.0], [10.8, 172.0], [10.9, 172.0], [11.0, 172.0], [11.1, 172.0], [11.2, 172.0], [11.3, 172.0], [11.4, 172.0], [11.5, 172.0], [11.6, 172.0], [11.7, 172.0], [11.8, 172.0], [11.9, 172.0], [12.0, 172.0], [12.1, 172.0], [12.2, 172.0], [12.3, 172.0], [12.4, 172.0], [12.5, 172.0], [12.6, 172.0], [12.7, 172.0], [12.8, 172.0], [12.9, 172.0], [13.0, 172.0], [13.1, 172.0], [13.2, 172.0], [13.3, 172.0], [13.4, 172.0], [13.5, 172.0], [13.6, 172.0], [13.7, 172.0], [13.8, 172.0], [13.9, 172.0], [14.0, 172.0], [14.1, 172.0], [14.2, 172.0], [14.3, 172.0], [14.4, 172.0], [14.5, 172.0], [14.6, 172.0], [14.7, 172.0], [14.8, 172.0], [14.9, 172.0], [15.0, 172.0], [15.1, 172.0], [15.2, 172.0], [15.3, 172.0], [15.4, 172.0], [15.5, 172.0], [15.6, 172.0], [15.7, 172.0], [15.8, 172.0], [15.9, 172.0], [16.0, 172.0], [16.1, 172.0], [16.2, 172.0], [16.3, 172.0], [16.4, 172.0], [16.5, 172.0], [16.6, 172.0], [16.7, 172.0], [16.8, 172.0], [16.9, 172.0], [17.0, 172.0], [17.1, 172.0], [17.2, 172.0], [17.3, 172.0], [17.4, 172.0], [17.5, 172.0], [17.6, 172.0], [17.7, 172.0], [17.8, 172.0], [17.9, 172.0], [18.0, 172.0], [18.1, 172.0], [18.2, 172.0], [18.3, 172.0], [18.4, 172.0], [18.5, 172.0], [18.6, 172.0], [18.7, 172.0], [18.8, 172.0], [18.9, 172.0], [19.0, 172.0], [19.1, 172.0], [19.2, 172.0], [19.3, 172.0], [19.4, 172.0], [19.5, 172.0], [19.6, 172.0], [19.7, 172.0], [19.8, 172.0], [19.9, 172.0], [20.0, 172.0], [20.1, 172.0], [20.2, 172.0], [20.3, 172.0], [20.4, 172.0], [20.5, 172.0], [20.6, 172.0], [20.7, 172.0], [20.8, 172.0], [20.9, 172.0], [21.0, 172.0], [21.1, 172.0], [21.2, 172.0], [21.3, 172.0], [21.4, 172.0], [21.5, 172.0], [21.6, 172.0], [21.7, 172.0], [21.8, 172.0], [21.9, 172.0], [22.0, 172.0], [22.1, 172.0], [22.2, 172.0], [22.3, 172.0], [22.4, 172.0], [22.5, 172.0], [22.6, 172.0], [22.7, 172.0], [22.8, 172.0], [22.9, 172.0], [23.0, 172.0], [23.1, 172.0], [23.2, 172.0], [23.3, 172.0], [23.4, 172.0], [23.5, 172.0], [23.6, 172.0], [23.7, 172.0], [23.8, 172.0], [23.9, 172.0], [24.0, 172.0], [24.1, 172.0], [24.2, 172.0], [24.3, 172.0], [24.4, 172.0], [24.5, 172.0], [24.6, 172.0], [24.7, 172.0], [24.8, 172.0], [24.9, 172.0], [25.0, 172.0], [25.1, 172.0], [25.2, 172.0], [25.3, 172.0], [25.4, 172.0], [25.5, 172.0], [25.6, 172.0], [25.7, 172.0], [25.8, 172.0], [25.9, 172.0], [26.0, 172.0], [26.1, 172.0], [26.2, 172.0], [26.3, 172.0], [26.4, 172.0], [26.5, 172.0], [26.6, 172.0], [26.7, 172.0], [26.8, 172.0], [26.9, 172.0], [27.0, 172.0], [27.1, 172.0], [27.2, 172.0], [27.3, 172.0], [27.4, 172.0], [27.5, 172.0], [27.6, 172.0], [27.7, 172.0], [27.8, 172.0], [27.9, 172.0], [28.0, 172.0], [28.1, 172.0], [28.2, 172.0], [28.3, 172.0], [28.4, 172.0], [28.5, 172.0], [28.6, 172.0], [28.7, 172.0], [28.8, 172.0], [28.9, 172.0], [29.0, 172.0], [29.1, 172.0], [29.2, 172.0], [29.3, 172.0], [29.4, 172.0], [29.5, 172.0], [29.6, 172.0], [29.7, 172.0], [29.8, 172.0], [29.9, 172.0], [30.0, 172.0], [30.1, 172.0], [30.2, 172.0], [30.3, 172.0], [30.4, 172.0], [30.5, 172.0], [30.6, 172.0], [30.7, 172.0], [30.8, 172.0], [30.9, 172.0], [31.0, 172.0], [31.1, 172.0], [31.2, 172.0], [31.3, 172.0], [31.4, 172.0], [31.5, 172.0], [31.6, 172.0], [31.7, 172.0], [31.8, 172.0], [31.9, 172.0], [32.0, 172.0], [32.1, 172.0], [32.2, 172.0], [32.3, 172.0], [32.4, 172.0], [32.5, 172.0], [32.6, 172.0], [32.7, 172.0], [32.8, 172.0], [32.9, 172.0], [33.0, 172.0], [33.1, 172.0], [33.2, 172.0], [33.3, 172.0], [33.4, 172.0], [33.5, 172.0], [33.6, 172.0], [33.7, 172.0], [33.8, 172.0], [33.9, 172.0], [34.0, 172.0], [34.1, 172.0], [34.2, 172.0], [34.3, 172.0], [34.4, 172.0], [34.5, 172.0], [34.6, 172.0], [34.7, 172.0], [34.8, 172.0], [34.9, 172.0], [35.0, 172.0], [35.1, 172.0], [35.2, 172.0], [35.3, 172.0], [35.4, 172.0], [35.5, 172.0], [35.6, 172.0], [35.7, 172.0], [35.8, 172.0], [35.9, 172.0], [36.0, 172.0], [36.1, 172.0], [36.2, 172.0], [36.3, 172.0], [36.4, 172.0], [36.5, 172.0], [36.6, 172.0], [36.7, 172.0], [36.8, 172.0], [36.9, 172.0], [37.0, 172.0], [37.1, 172.0], [37.2, 172.0], [37.3, 172.0], [37.4, 172.0], [37.5, 172.0], [37.6, 172.0], [37.7, 172.0], [37.8, 172.0], [37.9, 172.0], [38.0, 172.0], [38.1, 172.0], [38.2, 172.0], [38.3, 172.0], [38.4, 172.0], [38.5, 172.0], [38.6, 172.0], [38.7, 172.0], [38.8, 172.0], [38.9, 172.0], [39.0, 172.0], [39.1, 172.0], [39.2, 172.0], [39.3, 172.0], [39.4, 172.0], [39.5, 172.0], [39.6, 172.0], [39.7, 172.0], [39.8, 172.0], [39.9, 172.0], [40.0, 172.0], [40.1, 172.0], [40.2, 172.0], [40.3, 172.0], [40.4, 172.0], [40.5, 172.0], [40.6, 172.0], [40.7, 172.0], [40.8, 172.0], [40.9, 172.0], [41.0, 172.0], [41.1, 172.0], [41.2, 172.0], [41.3, 172.0], [41.4, 172.0], [41.5, 172.0], [41.6, 172.0], [41.7, 172.0], [41.8, 172.0], [41.9, 172.0], [42.0, 172.0], [42.1, 172.0], [42.2, 172.0], [42.3, 172.0], [42.4, 172.0], [42.5, 172.0], [42.6, 172.0], [42.7, 172.0], [42.8, 172.0], [42.9, 172.0], [43.0, 172.0], [43.1, 172.0], [43.2, 172.0], [43.3, 172.0], [43.4, 172.0], [43.5, 172.0], [43.6, 172.0], [43.7, 172.0], [43.8, 172.0], [43.9, 172.0], [44.0, 172.0], [44.1, 172.0], [44.2, 172.0], [44.3, 172.0], [44.4, 172.0], [44.5, 172.0], [44.6, 172.0], [44.7, 172.0], [44.8, 172.0], [44.9, 172.0], [45.0, 172.0], [45.1, 172.0], [45.2, 172.0], [45.3, 172.0], [45.4, 172.0], [45.5, 172.0], [45.6, 172.0], [45.7, 172.0], [45.8, 172.0], [45.9, 172.0], [46.0, 172.0], [46.1, 172.0], [46.2, 172.0], [46.3, 172.0], [46.4, 172.0], [46.5, 172.0], [46.6, 172.0], [46.7, 172.0], [46.8, 172.0], [46.9, 172.0], [47.0, 172.0], [47.1, 172.0], [47.2, 172.0], [47.3, 172.0], [47.4, 172.0], [47.5, 172.0], [47.6, 172.0], [47.7, 172.0], [47.8, 172.0], [47.9, 172.0], [48.0, 172.0], [48.1, 172.0], [48.2, 172.0], [48.3, 172.0], [48.4, 172.0], [48.5, 172.0], [48.6, 172.0], [48.7, 172.0], [48.8, 172.0], [48.9, 172.0], [49.0, 172.0], [49.1, 172.0], [49.2, 172.0], [49.3, 172.0], [49.4, 172.0], [49.5, 172.0], [49.6, 172.0], [49.7, 172.0], [49.8, 172.0], [49.9, 172.0], [50.0, 172.0], [50.1, 172.0], [50.2, 172.0], [50.3, 172.0], [50.4, 172.0], [50.5, 172.0], [50.6, 172.0], [50.7, 172.0], [50.8, 172.0], [50.9, 172.0], [51.0, 172.0], [51.1, 172.0], [51.2, 172.0], [51.3, 172.0], [51.4, 172.0], [51.5, 172.0], [51.6, 172.0], [51.7, 172.0], [51.8, 172.0], [51.9, 172.0], [52.0, 172.0], [52.1, 172.0], [52.2, 172.0], [52.3, 172.0], [52.4, 172.0], [52.5, 172.0], [52.6, 172.0], [52.7, 172.0], [52.8, 172.0], [52.9, 172.0], [53.0, 172.0], [53.1, 172.0], [53.2, 172.0], [53.3, 172.0], [53.4, 172.0], [53.5, 172.0], [53.6, 172.0], [53.7, 172.0], [53.8, 172.0], [53.9, 172.0], [54.0, 172.0], [54.1, 172.0], [54.2, 172.0], [54.3, 172.0], [54.4, 172.0], [54.5, 172.0], [54.6, 172.0], [54.7, 172.0], [54.8, 172.0], [54.9, 172.0], [55.0, 172.0], [55.1, 172.0], [55.2, 172.0], [55.3, 172.0], [55.4, 172.0], [55.5, 172.0], [55.6, 172.0], [55.7, 172.0], [55.8, 172.0], [55.9, 172.0], [56.0, 172.0], [56.1, 172.0], [56.2, 172.0], [56.3, 172.0], [56.4, 172.0], [56.5, 172.0], [56.6, 172.0], [56.7, 172.0], [56.8, 172.0], [56.9, 172.0], [57.0, 172.0], [57.1, 172.0], [57.2, 172.0], [57.3, 172.0], [57.4, 172.0], [57.5, 172.0], [57.6, 172.0], [57.7, 172.0], [57.8, 172.0], [57.9, 172.0], [58.0, 172.0], [58.1, 172.0], [58.2, 172.0], [58.3, 172.0], [58.4, 172.0], [58.5, 172.0], [58.6, 172.0], [58.7, 172.0], [58.8, 172.0], [58.9, 172.0], [59.0, 172.0], [59.1, 172.0], [59.2, 172.0], [59.3, 172.0], [59.4, 172.0], [59.5, 172.0], [59.6, 172.0], [59.7, 172.0], [59.8, 172.0], [59.9, 172.0], [60.0, 172.0], [60.1, 172.0], [60.2, 172.0], [60.3, 172.0], [60.4, 172.0], [60.5, 172.0], [60.6, 172.0], [60.7, 172.0], [60.8, 172.0], [60.9, 172.0], [61.0, 172.0], [61.1, 172.0], [61.2, 172.0], [61.3, 172.0], [61.4, 172.0], [61.5, 172.0], [61.6, 172.0], [61.7, 172.0], [61.8, 172.0], [61.9, 172.0], [62.0, 172.0], [62.1, 172.0], [62.2, 172.0], [62.3, 172.0], [62.4, 172.0], [62.5, 172.0], [62.6, 172.0], [62.7, 172.0], [62.8, 172.0], [62.9, 172.0], [63.0, 172.0], [63.1, 172.0], [63.2, 172.0], [63.3, 172.0], [63.4, 172.0], [63.5, 172.0], [63.6, 172.0], [63.7, 172.0], [63.8, 172.0], [63.9, 172.0], [64.0, 172.0], [64.1, 172.0], [64.2, 172.0], [64.3, 172.0], [64.4, 172.0], [64.5, 172.0], [64.6, 172.0], [64.7, 172.0], [64.8, 172.0], [64.9, 172.0], [65.0, 172.0], [65.1, 172.0], [65.2, 172.0], [65.3, 172.0], [65.4, 172.0], [65.5, 172.0], [65.6, 172.0], [65.7, 172.0], [65.8, 172.0], [65.9, 172.0], [66.0, 172.0], [66.1, 172.0], [66.2, 172.0], [66.3, 172.0], [66.4, 172.0], [66.5, 172.0], [66.6, 172.0], [66.7, 172.0], [66.8, 172.0], [66.9, 172.0], [67.0, 172.0], [67.1, 172.0], [67.2, 172.0], [67.3, 172.0], [67.4, 172.0], [67.5, 172.0], [67.6, 172.0], [67.7, 172.0], [67.8, 172.0], [67.9, 172.0], [68.0, 172.0], [68.1, 172.0], [68.2, 172.0], [68.3, 172.0], [68.4, 172.0], [68.5, 172.0], [68.6, 172.0], [68.7, 172.0], [68.8, 172.0], [68.9, 172.0], [69.0, 172.0], [69.1, 172.0], [69.2, 172.0], [69.3, 172.0], [69.4, 172.0], [69.5, 172.0], [69.6, 172.0], [69.7, 172.0], [69.8, 172.0], [69.9, 172.0], [70.0, 172.0], [70.1, 172.0], [70.2, 172.0], [70.3, 172.0], [70.4, 172.0], [70.5, 172.0], [70.6, 172.0], [70.7, 172.0], [70.8, 172.0], [70.9, 172.0], [71.0, 172.0], [71.1, 172.0], [71.2, 172.0], [71.3, 172.0], [71.4, 172.0], [71.5, 172.0], [71.6, 172.0], [71.7, 172.0], [71.8, 172.0], [71.9, 172.0], [72.0, 172.0], [72.1, 172.0], [72.2, 172.0], [72.3, 172.0], [72.4, 172.0], [72.5, 172.0], [72.6, 172.0], [72.7, 172.0], [72.8, 172.0], [72.9, 172.0], [73.0, 172.0], [73.1, 172.0], [73.2, 172.0], [73.3, 172.0], [73.4, 172.0], [73.5, 172.0], [73.6, 172.0], [73.7, 172.0], [73.8, 172.0], [73.9, 172.0], [74.0, 172.0], [74.1, 172.0], [74.2, 172.0], [74.3, 172.0], [74.4, 172.0], [74.5, 172.0], [74.6, 172.0], [74.7, 172.0], [74.8, 172.0], [74.9, 172.0], [75.0, 172.0], [75.1, 172.0], [75.2, 172.0], [75.3, 172.0], [75.4, 172.0], [75.5, 172.0], [75.6, 172.0], [75.7, 172.0], [75.8, 172.0], [75.9, 172.0], [76.0, 172.0], [76.1, 172.0], [76.2, 172.0], [76.3, 172.0], [76.4, 172.0], [76.5, 172.0], [76.6, 172.0], [76.7, 172.0], [76.8, 172.0], [76.9, 172.0], [77.0, 172.0], [77.1, 172.0], [77.2, 172.0], [77.3, 172.0], [77.4, 172.0], [77.5, 172.0], [77.6, 172.0], [77.7, 172.0], [77.8, 172.0], [77.9, 172.0], [78.0, 172.0], [78.1, 172.0], [78.2, 172.0], [78.3, 172.0], [78.4, 172.0], [78.5, 172.0], [78.6, 172.0], [78.7, 172.0], [78.8, 172.0], [78.9, 172.0], [79.0, 172.0], [79.1, 172.0], [79.2, 172.0], [79.3, 172.0], [79.4, 172.0], [79.5, 172.0], [79.6, 172.0], [79.7, 172.0], [79.8, 172.0], [79.9, 172.0], [80.0, 172.0], [80.1, 172.0], [80.2, 172.0], [80.3, 172.0], [80.4, 172.0], [80.5, 172.0], [80.6, 172.0], [80.7, 172.0], [80.8, 172.0], [80.9, 172.0], [81.0, 172.0], [81.1, 172.0], [81.2, 172.0], [81.3, 172.0], [81.4, 172.0], [81.5, 172.0], [81.6, 172.0], [81.7, 172.0], [81.8, 172.0], [81.9, 172.0], [82.0, 172.0], [82.1, 172.0], [82.2, 172.0], [82.3, 172.0], [82.4, 172.0], [82.5, 172.0], [82.6, 172.0], [82.7, 172.0], [82.8, 172.0], [82.9, 172.0], [83.0, 172.0], [83.1, 172.0], [83.2, 172.0], [83.3, 172.0], [83.4, 172.0], [83.5, 172.0], [83.6, 172.0], [83.7, 172.0], [83.8, 172.0], [83.9, 172.0], [84.0, 172.0], [84.1, 172.0], [84.2, 172.0], [84.3, 172.0], [84.4, 172.0], [84.5, 172.0], [84.6, 172.0], [84.7, 172.0], [84.8, 172.0], [84.9, 172.0], [85.0, 172.0], [85.1, 172.0], [85.2, 172.0], [85.3, 172.0], [85.4, 172.0], [85.5, 172.0], [85.6, 172.0], [85.7, 172.0], [85.8, 172.0], [85.9, 172.0], [86.0, 172.0], [86.1, 172.0], [86.2, 172.0], [86.3, 172.0], [86.4, 172.0], [86.5, 172.0], [86.6, 172.0], [86.7, 172.0], [86.8, 172.0], [86.9, 172.0], [87.0, 172.0], [87.1, 172.0], [87.2, 172.0], [87.3, 172.0], [87.4, 172.0], [87.5, 172.0], [87.6, 172.0], [87.7, 172.0], [87.8, 172.0], [87.9, 172.0], [88.0, 172.0], [88.1, 172.0], [88.2, 172.0], [88.3, 172.0], [88.4, 172.0], [88.5, 172.0], [88.6, 172.0], [88.7, 172.0], [88.8, 172.0], [88.9, 172.0], [89.0, 172.0], [89.1, 172.0], [89.2, 172.0], [89.3, 172.0], [89.4, 172.0], [89.5, 172.0], [89.6, 172.0], [89.7, 172.0], [89.8, 172.0], [89.9, 172.0], [90.0, 172.0], [90.1, 172.0], [90.2, 172.0], [90.3, 172.0], [90.4, 172.0], [90.5, 172.0], [90.6, 172.0], [90.7, 172.0], [90.8, 172.0], [90.9, 172.0], [91.0, 172.0], [91.1, 172.0], [91.2, 172.0], [91.3, 172.0], [91.4, 172.0], [91.5, 172.0], [91.6, 172.0], [91.7, 172.0], [91.8, 172.0], [91.9, 172.0], [92.0, 172.0], [92.1, 172.0], [92.2, 172.0], [92.3, 172.0], [92.4, 172.0], [92.5, 172.0], [92.6, 172.0], [92.7, 172.0], [92.8, 172.0], [92.9, 172.0], [93.0, 172.0], [93.1, 172.0], [93.2, 172.0], [93.3, 172.0], [93.4, 172.0], [93.5, 172.0], [93.6, 172.0], [93.7, 172.0], [93.8, 172.0], [93.9, 172.0], [94.0, 172.0], [94.1, 172.0], [94.2, 172.0], [94.3, 172.0], [94.4, 172.0], [94.5, 172.0], [94.6, 172.0], [94.7, 172.0], [94.8, 172.0], [94.9, 172.0], [95.0, 172.0], [95.1, 172.0], [95.2, 172.0], [95.3, 172.0], [95.4, 172.0], [95.5, 172.0], [95.6, 172.0], [95.7, 172.0], [95.8, 172.0], [95.9, 172.0], [96.0, 172.0], [96.1, 172.0], [96.2, 172.0], [96.3, 172.0], [96.4, 172.0], [96.5, 172.0], [96.6, 172.0], [96.7, 172.0], [96.8, 172.0], [96.9, 172.0], [97.0, 172.0], [97.1, 172.0], [97.2, 172.0], [97.3, 172.0], [97.4, 172.0], [97.5, 172.0], [97.6, 172.0], [97.7, 172.0], [97.8, 172.0], [97.9, 172.0], [98.0, 172.0], [98.1, 172.0], [98.2, 172.0], [98.3, 172.0], [98.4, 172.0], [98.5, 172.0], [98.6, 172.0], [98.7, 172.0], [98.8, 172.0], [98.9, 172.0], [99.0, 172.0], [99.1, 172.0], [99.2, 172.0], [99.3, 172.0], [99.4, 172.0], [99.5, 172.0], [99.6, 172.0], [99.7, 172.0], [99.8, 172.0], [99.9, 172.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 68.0], [0.1, 73.0], [0.2, 75.0], [0.3, 78.0], [0.4, 81.0], [0.5, 82.0], [0.6, 82.0], [0.7, 82.0], [0.8, 83.0], [0.9, 83.0], [1.0, 83.0], [1.1, 83.0], [1.2, 83.0], [1.3, 83.0], [1.4, 83.0], [1.5, 83.0], [1.6, 83.0], [1.7, 83.0], [1.8, 84.0], [1.9, 84.0], [2.0, 84.0], [2.1, 84.0], [2.2, 84.0], [2.3, 84.0], [2.4, 84.0], [2.5, 84.0], [2.6, 84.0], [2.7, 84.0], [2.8, 84.0], [2.9, 84.0], [3.0, 84.0], [3.1, 84.0], [3.2, 85.0], [3.3, 85.0], [3.4, 85.0], [3.5, 85.0], [3.6, 85.0], [3.7, 85.0], [3.8, 85.0], [3.9, 85.0], [4.0, 85.0], [4.1, 86.0], [4.2, 86.0], [4.3, 86.0], [4.4, 86.0], [4.5, 86.0], [4.6, 86.0], [4.7, 86.0], [4.8, 86.0], [4.9, 87.0], [5.0, 87.0], [5.1, 87.0], [5.2, 87.0], [5.3, 87.0], [5.4, 87.0], [5.5, 88.0], [5.6, 88.0], [5.7, 88.0], [5.8, 88.0], [5.9, 88.0], [6.0, 89.0], [6.1, 89.0], [6.2, 89.0], [6.3, 90.0], [6.4, 90.0], [6.5, 90.0], [6.6, 91.0], [6.7, 91.0], [6.8, 91.0], [6.9, 92.0], [7.0, 92.0], [7.1, 92.0], [7.2, 93.0], [7.3, 93.0], [7.4, 93.0], [7.5, 94.0], [7.6, 94.0], [7.7, 94.0], [7.8, 95.0], [7.9, 95.0], [8.0, 95.0], [8.1, 96.0], [8.2, 96.0], [8.3, 96.0], [8.4, 96.0], [8.5, 97.0], [8.6, 97.0], [8.7, 97.0], [8.8, 98.0], [8.9, 98.0], [9.0, 98.0], [9.1, 99.0], [9.2, 99.0], [9.3, 99.0], [9.4, 100.0], [9.5, 100.0], [9.6, 101.0], [9.7, 102.0], [9.8, 103.0], [9.9, 104.0], [10.0, 106.0], [10.1, 108.0], [10.2, 108.0], [10.3, 109.0], [10.4, 110.0], [10.5, 111.0], [10.6, 111.0], [10.7, 112.0], [10.8, 112.0], [10.9, 113.0], [11.0, 113.0], [11.1, 114.0], [11.2, 114.0], [11.3, 115.0], [11.4, 116.0], [11.5, 116.0], [11.6, 117.0], [11.7, 117.0], [11.8, 118.0], [11.9, 119.0], [12.0, 120.0], [12.1, 121.0], [12.2, 121.0], [12.3, 122.0], [12.4, 122.0], [12.5, 123.0], [12.6, 124.0], [12.7, 125.0], [12.8, 126.0], [12.9, 127.0], [13.0, 128.0], [13.1, 129.0], [13.2, 130.0], [13.3, 131.0], [13.4, 132.0], [13.5, 133.0], [13.6, 134.0], [13.7, 135.0], [13.8, 135.0], [13.9, 136.0], [14.0, 137.0], [14.1, 137.0], [14.2, 138.0], [14.3, 138.0], [14.4, 139.0], [14.5, 139.0], [14.6, 140.0], [14.7, 141.0], [14.8, 142.0], [14.9, 143.0], [15.0, 144.0], [15.1, 145.0], [15.2, 146.0], [15.3, 147.0], [15.4, 148.0], [15.5, 149.0], [15.6, 150.0], [15.7, 151.0], [15.8, 152.0], [15.9, 153.0], [16.0, 153.0], [16.1, 154.0], [16.2, 155.0], [16.3, 155.0], [16.4, 156.0], [16.5, 157.0], [16.6, 158.0], [16.7, 158.0], [16.8, 159.0], [16.9, 160.0], [17.0, 161.0], [17.1, 161.0], [17.2, 162.0], [17.3, 163.0], [17.4, 163.0], [17.5, 164.0], [17.6, 165.0], [17.7, 165.0], [17.8, 166.0], [17.9, 166.0], [18.0, 167.0], [18.1, 168.0], [18.2, 168.0], [18.3, 169.0], [18.4, 169.0], [18.5, 170.0], [18.6, 170.0], [18.7, 170.0], [18.8, 171.0], [18.9, 172.0], [19.0, 173.0], [19.1, 173.0], [19.2, 174.0], [19.3, 175.0], [19.4, 175.0], [19.5, 176.0], [19.6, 177.0], [19.7, 178.0], [19.8, 179.0], [19.9, 180.0], [20.0, 181.0], [20.1, 182.0], [20.2, 182.0], [20.3, 183.0], [20.4, 183.0], [20.5, 184.0], [20.6, 184.0], [20.7, 185.0], [20.8, 185.0], [20.9, 186.0], [21.0, 186.0], [21.1, 186.0], [21.2, 187.0], [21.3, 187.0], [21.4, 187.0], [21.5, 188.0], [21.6, 188.0], [21.7, 188.0], [21.8, 189.0], [21.9, 189.0], [22.0, 189.0], [22.1, 190.0], [22.2, 190.0], [22.3, 191.0], [22.4, 192.0], [22.5, 192.0], [22.6, 193.0], [22.7, 193.0], [22.8, 194.0], [22.9, 194.0], [23.0, 195.0], [23.1, 195.0], [23.2, 196.0], [23.3, 197.0], [23.4, 198.0], [23.5, 199.0], [23.6, 201.0], [23.7, 203.0], [23.8, 205.0], [23.9, 206.0], [24.0, 208.0], [24.1, 209.0], [24.2, 211.0], [24.3, 213.0], [24.4, 214.0], [24.5, 215.0], [24.6, 215.0], [24.7, 216.0], [24.8, 216.0], [24.9, 217.0], [25.0, 217.0], [25.1, 218.0], [25.2, 218.0], [25.3, 219.0], [25.4, 219.0], [25.5, 220.0], [25.6, 220.0], [25.7, 221.0], [25.8, 222.0], [25.9, 223.0], [26.0, 223.0], [26.1, 224.0], [26.2, 225.0], [26.3, 225.0], [26.4, 226.0], [26.5, 226.0], [26.6, 226.0], [26.7, 227.0], [26.8, 228.0], [26.9, 228.0], [27.0, 229.0], [27.1, 230.0], [27.2, 232.0], [27.3, 236.0], [27.4, 240.0], [27.5, 243.0], [27.6, 253.0], [27.7, 258.0], [27.8, 259.0], [27.9, 260.0], [28.0, 261.0], [28.1, 262.0], [28.2, 263.0], [28.3, 263.0], [28.4, 264.0], [28.5, 264.0], [28.6, 265.0], [28.7, 265.0], [28.8, 266.0], [28.9, 266.0], [29.0, 267.0], [29.1, 267.0], [29.2, 268.0], [29.3, 268.0], [29.4, 268.0], [29.5, 269.0], [29.6, 269.0], [29.7, 269.0], [29.8, 270.0], [29.9, 270.0], [30.0, 271.0], [30.1, 271.0], [30.2, 272.0], [30.3, 272.0], [30.4, 272.0], [30.5, 273.0], [30.6, 273.0], [30.7, 273.0], [30.8, 274.0], [30.9, 274.0], [31.0, 274.0], [31.1, 275.0], [31.2, 275.0], [31.3, 275.0], [31.4, 276.0], [31.5, 276.0], [31.6, 276.0], [31.7, 277.0], [31.8, 277.0], [31.9, 278.0], [32.0, 278.0], [32.1, 278.0], [32.2, 279.0], [32.3, 279.0], [32.4, 279.0], [32.5, 280.0], [32.6, 280.0], [32.7, 281.0], [32.8, 281.0], [32.9, 282.0], [33.0, 282.0], [33.1, 283.0], [33.2, 283.0], [33.3, 284.0], [33.4, 284.0], [33.5, 285.0], [33.6, 285.0], [33.7, 286.0], [33.8, 286.0], [33.9, 287.0], [34.0, 287.0], [34.1, 287.0], [34.2, 288.0], [34.3, 288.0], [34.4, 288.0], [34.5, 289.0], [34.6, 289.0], [34.7, 289.0], [34.8, 289.0], [34.9, 290.0], [35.0, 290.0], [35.1, 290.0], [35.2, 291.0], [35.3, 291.0], [35.4, 291.0], [35.5, 292.0], [35.6, 292.0], [35.7, 292.0], [35.8, 293.0], [35.9, 293.0], [36.0, 293.0], [36.1, 294.0], [36.2, 294.0], [36.3, 295.0], [36.4, 295.0], [36.5, 296.0], [36.6, 297.0], [36.7, 298.0], [36.8, 300.0], [36.9, 301.0], [37.0, 301.0], [37.1, 302.0], [37.2, 303.0], [37.3, 304.0], [37.4, 305.0], [37.5, 306.0], [37.6, 306.0], [37.7, 307.0], [37.8, 308.0], [37.9, 308.0], [38.0, 309.0], [38.1, 310.0], [38.2, 310.0], [38.3, 311.0], [38.4, 311.0], [38.5, 312.0], [38.6, 312.0], [38.7, 312.0], [38.8, 313.0], [38.9, 313.0], [39.0, 314.0], [39.1, 314.0], [39.2, 315.0], [39.3, 315.0], [39.4, 315.0], [39.5, 316.0], [39.6, 316.0], [39.7, 317.0], [39.8, 317.0], [39.9, 317.0], [40.0, 318.0], [40.1, 318.0], [40.2, 319.0], [40.3, 319.0], [40.4, 319.0], [40.5, 320.0], [40.6, 321.0], [40.7, 321.0], [40.8, 322.0], [40.9, 322.0], [41.0, 323.0], [41.1, 323.0], [41.2, 324.0], [41.3, 324.0], [41.4, 325.0], [41.5, 326.0], [41.6, 326.0], [41.7, 327.0], [41.8, 327.0], [41.9, 327.0], [42.0, 328.0], [42.1, 328.0], [42.2, 329.0], [42.3, 329.0], [42.4, 330.0], [42.5, 330.0], [42.6, 330.0], [42.7, 331.0], [42.8, 331.0], [42.9, 332.0], [43.0, 332.0], [43.1, 333.0], [43.2, 333.0], [43.3, 334.0], [43.4, 334.0], [43.5, 335.0], [43.6, 335.0], [43.7, 336.0], [43.8, 337.0], [43.9, 338.0], [44.0, 339.0], [44.1, 339.0], [44.2, 340.0], [44.3, 340.0], [44.4, 341.0], [44.5, 342.0], [44.6, 342.0], [44.7, 343.0], [44.8, 344.0], [44.9, 345.0], [45.0, 347.0], [45.1, 348.0], [45.2, 350.0], [45.3, 351.0], [45.4, 352.0], [45.5, 352.0], [45.6, 353.0], [45.7, 355.0], [45.8, 356.0], [45.9, 356.0], [46.0, 357.0], [46.1, 357.0], [46.2, 358.0], [46.3, 359.0], [46.4, 359.0], [46.5, 360.0], [46.6, 361.0], [46.7, 362.0], [46.8, 363.0], [46.9, 364.0], [47.0, 365.0], [47.1, 365.0], [47.2, 366.0], [47.3, 367.0], [47.4, 367.0], [47.5, 368.0], [47.6, 368.0], [47.7, 369.0], [47.8, 369.0], [47.9, 369.0], [48.0, 370.0], [48.1, 370.0], [48.2, 371.0], [48.3, 371.0], [48.4, 372.0], [48.5, 372.0], [48.6, 373.0], [48.7, 374.0], [48.8, 375.0], [48.9, 376.0], [49.0, 377.0], [49.1, 377.0], [49.2, 378.0], [49.3, 379.0], [49.4, 380.0], [49.5, 380.0], [49.6, 381.0], [49.7, 381.0], [49.8, 382.0], [49.9, 383.0], [50.0, 383.0], [50.1, 384.0], [50.2, 385.0], [50.3, 386.0], [50.4, 387.0], [50.5, 388.0], [50.6, 390.0], [50.7, 391.0], [50.8, 393.0], [50.9, 394.0], [51.0, 396.0], [51.1, 397.0], [51.2, 398.0], [51.3, 398.0], [51.4, 399.0], [51.5, 399.0], [51.6, 400.0], [51.7, 400.0], [51.8, 401.0], [51.9, 401.0], [52.0, 401.0], [52.1, 402.0], [52.2, 402.0], [52.3, 402.0], [52.4, 403.0], [52.5, 403.0], [52.6, 404.0], [52.7, 404.0], [52.8, 404.0], [52.9, 405.0], [53.0, 405.0], [53.1, 405.0], [53.2, 406.0], [53.3, 406.0], [53.4, 407.0], [53.5, 408.0], [53.6, 408.0], [53.7, 409.0], [53.8, 411.0], [53.9, 413.0], [54.0, 414.0], [54.1, 416.0], [54.2, 416.0], [54.3, 417.0], [54.4, 417.0], [54.5, 418.0], [54.6, 418.0], [54.7, 419.0], [54.8, 419.0], [54.9, 420.0], [55.0, 420.0], [55.1, 421.0], [55.2, 421.0], [55.3, 421.0], [55.4, 422.0], [55.5, 422.0], [55.6, 423.0], [55.7, 423.0], [55.8, 423.0], [55.9, 424.0], [56.0, 424.0], [56.1, 425.0], [56.2, 425.0], [56.3, 425.0], [56.4, 426.0], [56.5, 426.0], [56.6, 426.0], [56.7, 427.0], [56.8, 427.0], [56.9, 427.0], [57.0, 427.0], [57.1, 428.0], [57.2, 428.0], [57.3, 428.0], [57.4, 428.0], [57.5, 429.0], [57.6, 429.0], [57.7, 429.0], [57.8, 429.0], [57.9, 430.0], [58.0, 430.0], [58.1, 430.0], [58.2, 431.0], [58.3, 431.0], [58.4, 431.0], [58.5, 431.0], [58.6, 432.0], [58.7, 432.0], [58.8, 432.0], [58.9, 432.0], [59.0, 433.0], [59.1, 433.0], [59.2, 434.0], [59.3, 434.0], [59.4, 435.0], [59.5, 435.0], [59.6, 436.0], [59.7, 436.0], [59.8, 437.0], [59.9, 438.0], [60.0, 439.0], [60.1, 439.0], [60.2, 440.0], [60.3, 441.0], [60.4, 441.0], [60.5, 442.0], [60.6, 442.0], [60.7, 443.0], [60.8, 443.0], [60.9, 444.0], [61.0, 444.0], [61.1, 444.0], [61.2, 445.0], [61.3, 445.0], [61.4, 446.0], [61.5, 447.0], [61.6, 447.0], [61.7, 447.0], [61.8, 448.0], [61.9, 448.0], [62.0, 449.0], [62.1, 450.0], [62.2, 451.0], [62.3, 452.0], [62.4, 453.0], [62.5, 454.0], [62.6, 456.0], [62.7, 457.0], [62.8, 458.0], [62.9, 459.0], [63.0, 459.0], [63.1, 460.0], [63.2, 461.0], [63.3, 462.0], [63.4, 463.0], [63.5, 464.0], [63.6, 465.0], [63.7, 467.0], [63.8, 468.0], [63.9, 469.0], [64.0, 471.0], [64.1, 472.0], [64.2, 473.0], [64.3, 474.0], [64.4, 475.0], [64.5, 476.0], [64.6, 476.0], [64.7, 477.0], [64.8, 477.0], [64.9, 478.0], [65.0, 479.0], [65.1, 479.0], [65.2, 480.0], [65.3, 480.0], [65.4, 481.0], [65.5, 481.0], [65.6, 482.0], [65.7, 482.0], [65.8, 483.0], [65.9, 483.0], [66.0, 484.0], [66.1, 484.0], [66.2, 485.0], [66.3, 485.0], [66.4, 485.0], [66.5, 486.0], [66.6, 486.0], [66.7, 487.0], [66.8, 487.0], [66.9, 488.0], [67.0, 488.0], [67.1, 489.0], [67.2, 489.0], [67.3, 489.0], [67.4, 490.0], [67.5, 490.0], [67.6, 490.0], [67.7, 491.0], [67.8, 491.0], [67.9, 492.0], [68.0, 492.0], [68.1, 493.0], [68.2, 494.0], [68.3, 494.0], [68.4, 495.0], [68.5, 496.0], [68.6, 496.0], [68.7, 497.0], [68.8, 497.0], [68.9, 497.0], [69.0, 498.0], [69.1, 498.0], [69.2, 499.0], [69.3, 499.0], [69.4, 500.0], [69.5, 500.0], [69.6, 501.0], [69.7, 501.0], [69.8, 502.0], [69.9, 502.0], [70.0, 503.0], [70.1, 503.0], [70.2, 504.0], [70.3, 505.0], [70.4, 506.0], [70.5, 507.0], [70.6, 508.0], [70.7, 509.0], [70.8, 510.0], [70.9, 511.0], [71.0, 512.0], [71.1, 512.0], [71.2, 513.0], [71.3, 513.0], [71.4, 514.0], [71.5, 514.0], [71.6, 515.0], [71.7, 515.0], [71.8, 516.0], [71.9, 517.0], [72.0, 517.0], [72.1, 518.0], [72.2, 519.0], [72.3, 519.0], [72.4, 520.0], [72.5, 521.0], [72.6, 521.0], [72.7, 522.0], [72.8, 522.0], [72.9, 523.0], [73.0, 523.0], [73.1, 524.0], [73.2, 525.0], [73.3, 525.0], [73.4, 526.0], [73.5, 527.0], [73.6, 528.0], [73.7, 528.0], [73.8, 529.0], [73.9, 530.0], [74.0, 531.0], [74.1, 532.0], [74.2, 533.0], [74.3, 535.0], [74.4, 535.0], [74.5, 536.0], [74.6, 536.0], [74.7, 537.0], [74.8, 537.0], [74.9, 538.0], [75.0, 539.0], [75.1, 539.0], [75.2, 540.0], [75.3, 540.0], [75.4, 541.0], [75.5, 542.0], [75.6, 543.0], [75.7, 544.0], [75.8, 545.0], [75.9, 545.0], [76.0, 546.0], [76.1, 546.0], [76.2, 547.0], [76.3, 548.0], [76.4, 548.0], [76.5, 549.0], [76.6, 550.0], [76.7, 550.0], [76.8, 551.0], [76.9, 552.0], [77.0, 552.0], [77.1, 552.0], [77.2, 553.0], [77.3, 554.0], [77.4, 554.0], [77.5, 554.0], [77.6, 555.0], [77.7, 555.0], [77.8, 556.0], [77.9, 557.0], [78.0, 557.0], [78.1, 558.0], [78.2, 558.0], [78.3, 559.0], [78.4, 560.0], [78.5, 560.0], [78.6, 561.0], [78.7, 561.0], [78.8, 562.0], [78.9, 563.0], [79.0, 563.0], [79.1, 564.0], [79.2, 565.0], [79.3, 565.0], [79.4, 566.0], [79.5, 566.0], [79.6, 567.0], [79.7, 568.0], [79.8, 569.0], [79.9, 570.0], [80.0, 571.0], [80.1, 572.0], [80.2, 573.0], [80.3, 574.0], [80.4, 574.0], [80.5, 575.0], [80.6, 576.0], [80.7, 577.0], [80.8, 577.0], [80.9, 578.0], [81.0, 578.0], [81.1, 579.0], [81.2, 580.0], [81.3, 580.0], [81.4, 581.0], [81.5, 582.0], [81.6, 582.0], [81.7, 583.0], [81.8, 584.0], [81.9, 584.0], [82.0, 585.0], [82.1, 585.0], [82.2, 585.0], [82.3, 586.0], [82.4, 586.0], [82.5, 586.0], [82.6, 586.0], [82.7, 587.0], [82.8, 587.0], [82.9, 587.0], [83.0, 587.0], [83.1, 588.0], [83.2, 588.0], [83.3, 588.0], [83.4, 588.0], [83.5, 589.0], [83.6, 589.0], [83.7, 589.0], [83.8, 589.0], [83.9, 590.0], [84.0, 590.0], [84.1, 590.0], [84.2, 591.0], [84.3, 591.0], [84.4, 591.0], [84.5, 592.0], [84.6, 592.0], [84.7, 592.0], [84.8, 593.0], [84.9, 593.0], [85.0, 593.0], [85.1, 594.0], [85.2, 594.0], [85.3, 595.0], [85.4, 595.0], [85.5, 596.0], [85.6, 596.0], [85.7, 596.0], [85.8, 597.0], [85.9, 597.0], [86.0, 598.0], [86.1, 598.0], [86.2, 599.0], [86.3, 599.0], [86.4, 600.0], [86.5, 600.0], [86.6, 600.0], [86.7, 601.0], [86.8, 601.0], [86.9, 602.0], [87.0, 602.0], [87.1, 603.0], [87.2, 603.0], [87.3, 603.0], [87.4, 604.0], [87.5, 604.0], [87.6, 604.0], [87.7, 605.0], [87.8, 606.0], [87.9, 606.0], [88.0, 607.0], [88.1, 607.0], [88.2, 608.0], [88.3, 608.0], [88.4, 609.0], [88.5, 609.0], [88.6, 609.0], [88.7, 610.0], [88.8, 610.0], [88.9, 611.0], [89.0, 611.0], [89.1, 612.0], [89.2, 612.0], [89.3, 613.0], [89.4, 613.0], [89.5, 614.0], [89.6, 614.0], [89.7, 615.0], [89.8, 615.0], [89.9, 615.0], [90.0, 616.0], [90.1, 616.0], [90.2, 616.0], [90.3, 617.0], [90.4, 617.0], [90.5, 618.0], [90.6, 618.0], [90.7, 618.0], [90.8, 619.0], [90.9, 619.0], [91.0, 619.0], [91.1, 620.0], [91.2, 620.0], [91.3, 620.0], [91.4, 621.0], [91.5, 621.0], [91.6, 621.0], [91.7, 622.0], [91.8, 622.0], [91.9, 622.0], [92.0, 623.0], [92.1, 623.0], [92.2, 623.0], [92.3, 624.0], [92.4, 624.0], [92.5, 624.0], [92.6, 625.0], [92.7, 625.0], [92.8, 626.0], [92.9, 626.0], [93.0, 626.0], [93.1, 626.0], [93.2, 627.0], [93.3, 627.0], [93.4, 627.0], [93.5, 628.0], [93.6, 628.0], [93.7, 629.0], [93.8, 629.0], [93.9, 629.0], [94.0, 630.0], [94.1, 630.0], [94.2, 631.0], [94.3, 631.0], [94.4, 632.0], [94.5, 633.0], [94.6, 633.0], [94.7, 634.0], [94.8, 635.0], [94.9, 637.0], [95.0, 638.0], [95.1, 639.0], [95.2, 639.0], [95.3, 640.0], [95.4, 641.0], [95.5, 642.0], [95.6, 642.0], [95.7, 643.0], [95.8, 643.0], [95.9, 644.0], [96.0, 644.0], [96.1, 645.0], [96.2, 645.0], [96.3, 646.0], [96.4, 646.0], [96.5, 646.0], [96.6, 647.0], [96.7, 647.0], [96.8, 648.0], [96.9, 648.0], [97.0, 649.0], [97.1, 649.0], [97.2, 650.0], [97.3, 650.0], [97.4, 651.0], [97.5, 651.0], [97.6, 652.0], [97.7, 652.0], [97.8, 653.0], [97.9, 653.0], [98.0, 654.0], [98.1, 654.0], [98.2, 655.0], [98.3, 656.0], [98.4, 656.0], [98.5, 657.0], [98.6, 657.0], [98.7, 658.0], [98.8, 660.0], [98.9, 661.0], [99.0, 662.0], [99.1, 663.0], [99.2, 663.0], [99.3, 664.0], [99.4, 666.0], [99.5, 667.0], [99.6, 668.0], [99.7, 670.0], [99.8, 679.0], [99.9, 712.0], [100.0, 746.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8415.0, "series": [{"data": [[0.0, 1.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[100.0, 1.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[100.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 4390.0], [300.0, 6935.0], [600.0, 6348.0], [700.0, 63.0], [100.0, 6708.0], [200.0, 6239.0], [400.0, 8415.0], [500.0, 8028.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 203.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 32585.0, "series": [{"data": [[0.0, 32585.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 14341.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 203.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68166272E12, "maxY": 400.76876261251107, "series": [{"data": [[1.68166272E12, 1.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166272E12, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166278E12, 400.76876261251107], [1.68166272E12, 132.45659143773213]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166278E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 617.4077669902912, "series": [{"data": [[1.0, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "Imprimir token_response-Aggregated", "isController": false}, {"data": [[1.0, 199.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.0, 199.0]], "isOverall": false, "label": "Signup-Aggregated", "isController": false}, {"data": [[1.0, 172.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.0, 172.0]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 374.0], [3.0, 281.0], [4.0, 230.25], [5.0, 203.8], [6.0, 182.83333333333334], [7.0, 153.33333333333334], [8.0, 97.42857142857143], [9.0, 187.63636363636365], [10.0, 134.58333333333331], [11.0, 141.0], [12.0, 133.46153846153845], [13.0, 126.80000000000001], [14.0, 126.6], [15.0, 121.23529411764706], [16.0, 114.70000000000002], [17.0, 116.52631578947367], [18.0, 113.14285714285714], [19.0, 112.86363636363637], [20.0, 110.78260869565217], [21.0, 110.50000000000001], [22.0, 87.82608695652175], [23.0, 124.7241379310345], [24.0, 87.11538461538464], [25.0, 123.10344827586209], [26.0, 87.18750000000001], [27.0, 90.1290322580645], [28.0, 138.06451612903226], [29.0, 102.66666666666667], [30.0, 87.52941176470588], [31.0, 116.89189189189187], [32.0, 86.40540540540542], [33.0, 116.12820512820511], [34.0, 101.55555555555556], [35.0, 86.425], [36.0, 109.97727272727275], [37.0, 96.3265306122449], [38.0, 98.88095238095237], [39.0, 96.95744680851064], [40.0, 85.88636363636365], [41.0, 108.17021276595746], [42.0, 97.02083333333333], [43.0, 96.72222222222221], [44.0, 96.76363636363632], [45.0, 96.811320754717], [46.0, 98.02083333333336], [47.0, 97.2], [48.0, 94.82758620689653], [49.0, 95.32786885245899], [50.0, 96.19298245614036], [51.0, 87.46666666666664], [52.0, 103.41935483870965], [53.0, 96.7017543859649], [54.0, 93.93333333333332], [55.0, 93.95522388059703], [56.0, 87.78125000000001], [57.0, 101.3235294117647], [58.0, 93.65217391304351], [59.0, 85.91304347826083], [60.0, 101.27536231884058], [61.0, 92.90410958904111], [62.0, 93.21126760563382], [63.0, 93.32876712328768], [64.0, 92.73684210526315], [65.0, 92.51282051282055], [66.0, 93.02702702702706], [67.0, 94.06410256410261], [68.0, 93.94936708860754], [69.0, 88.45569620253167], [70.0, 101.97435897435895], [71.0, 98.1578947368421], [72.0, 99.77499999999999], [73.0, 99.1948051948052], [74.0, 105.987012987013], [75.0, 103.72000000000003], [76.0, 105.83333333333336], [77.0, 95.98000000000002], [78.0, 99.05714285714285], [79.0, 101.32183908045977], [80.0, 92.95180722891568], [81.0, 107.03571428571426], [82.0, 105.03488372093022], [83.0, 102.9761904761905], [84.0, 98.77011494252872], [85.0, 106.88043478260866], [86.0, 97.12345679012346], [87.0, 111.93333333333332], [88.0, 100.64893617021278], [89.0, 102.2659574468085], [90.0, 105.65555555555555], [91.0, 110.641975308642], [92.0, 113.76744186046511], [93.0, 118.62500000000003], [94.0, 117.8076923076923], [95.0, 131.80952380952388], [96.0, 117.175], [97.0, 124.9], [98.0, 117.13953488372093], [99.0, 120.0568181818182], [100.0, 117.42696629213482], [101.0, 119.10465116279069], [102.0, 118.46511627906978], [103.0, 132.41975308641975], [104.0, 135.51249999999996], [105.0, 136.97674418604655], [106.0, 123.50617283950619], [107.0, 134.87234042553192], [108.0, 125.9294117647059], [109.0, 127.8965517241379], [110.0, 135.3820224719101], [111.0, 137.57142857142853], [112.0, 143.8928571428571], [113.0, 144.15662650602414], [114.0, 144.4125], [115.0, 145.7160493827161], [116.0, 155.48648648648648], [117.0, 149.59139784946234], [118.0, 140.06896551724134], [119.0, 143.21249999999992], [120.0, 145.65168539325842], [121.0, 146.89411764705883], [122.0, 150.54117647058828], [123.0, 152.4390243902439], [124.0, 157.22500000000008], [125.0, 157.98795180722894], [126.0, 158.98717948717945], [127.0, 159.63953488372096], [128.0, 163.64102564102566], [129.0, 172.40277777777777], [130.0, 176.14999999999992], [131.0, 168.71604938271602], [132.0, 172.97560975609758], [133.0, 171.64999999999995], [134.0, 175.00000000000003], [135.0, 177.15384615384608], [136.0, 174.6951219512196], [137.0, 173.74698795180717], [138.0, 166.38461538461542], [139.0, 160.92134831460675], [140.0, 163.7441860465116], [141.0, 167.34883720930227], [142.0, 167.2906976744186], [143.0, 179.3076923076923], [144.0, 191.25333333333333], [145.0, 194.7397260273973], [146.0, 194.84337349397595], [147.0, 193.57142857142864], [148.0, 188.81176470588235], [149.0, 179.10227272727275], [150.0, 177.02439024390247], [151.0, 185.80459770114945], [152.0, 177.44047619047618], [153.0, 194.67469879518072], [154.0, 199.74666666666673], [155.0, 199.15116279069767], [156.0, 188.3522727272727], [157.0, 188.7848101265822], [158.0, 199.82278481012665], [159.0, 198.14942528735637], [160.0, 186.87058823529404], [161.0, 202.88607594936713], [162.0, 194.23529411764713], [163.0, 209.02499999999995], [164.0, 214.23376623376632], [165.0, 214.1728395061728], [166.0, 207.57777777777778], [167.0, 194.6086956521739], [168.0, 184.73863636363632], [169.0, 195.65217391304347], [170.0, 191.39999999999995], [171.0, 195.71084337349396], [172.0, 201.59340659340657], [173.0, 212.27631578947373], [174.0, 214.4358974358974], [175.0, 229.81578947368422], [176.0, 229.76543209876542], [177.0, 232.20987654320996], [178.0, 232.28571428571428], [179.0, 224.17441860465115], [180.0, 220.67499999999995], [181.0, 225.90123456790127], [182.0, 231.36249999999995], [183.0, 233.25925925925924], [184.0, 228.4625], [185.0, 236.71764705882353], [186.0, 224.95454545454544], [187.0, 224.90361445783128], [188.0, 221.59999999999997], [189.0, 223.68674698795178], [190.0, 226.78571428571433], [191.0, 239.10126582278482], [192.0, 240.71621621621617], [193.0, 263.68852459016404], [194.0, 310.76744186046506], [195.0, 331.9701492537313], [196.0, 343.91044776119395], [197.0, 318.70000000000005], [198.0, 287.62162162162156], [199.0, 278.657894736842], [200.0, 274.28767123287673], [201.0, 276.5972222222223], [202.0, 273.3648648648649], [203.0, 281.0263157894737], [204.0, 273.63013698630135], [205.0, 284.1038961038962], [206.0, 282.2533333333332], [207.0, 279.75324675324686], [208.0, 275.55844155844164], [209.0, 273.1139240506329], [210.0, 275.1081081081082], [211.0, 282.84], [212.0, 283.08108108108087], [213.0, 294.20547945205493], [214.0, 293.27777777777777], [215.0, 297.9342105263158], [216.0, 292.56], [217.0, 299.24], [218.0, 287.49350649350663], [219.0, 296.55696202531635], [220.0, 286.02499999999986], [221.0, 285.3378378378379], [222.0, 285.85714285714283], [223.0, 280.0987654320989], [224.0, 283.012987012987], [225.0, 286.3333333333332], [226.0, 287.45161290322585], [227.0, 273.6666666666666], [228.0, 266.93258426966287], [229.0, 264.8735632183908], [230.0, 265.41573033707857], [231.0, 265.1058823529412], [232.0, 274.2808988764046], [233.0, 269.71428571428555], [234.0, 271.9767441860466], [235.0, 274.0617283950618], [236.0, 290.21794871794873], [237.0, 299.12345679012344], [238.0, 300.85393258426967], [239.0, 292.280487804878], [240.0, 278.84042553191483], [241.0, 279.2941176470587], [242.0, 286.20253164556954], [243.0, 288.8690476190476], [244.0, 304.0], [245.0, 292.855421686747], [246.0, 294.54216867469887], [247.0, 301.16091954022994], [248.0, 297.37931034482733], [249.0, 293.2643678160919], [250.0, 293.00000000000006], [251.0, 300.8292682926829], [252.0, 303.27500000000003], [253.0, 312.7831325301206], [254.0, 315.21052631578954], [255.0, 325.36000000000007], [257.0, 333.8571428571428], [256.0, 335.54430379746844], [258.0, 329.67499999999995], [259.0, 314.1728395061729], [260.0, 325.69047619047626], [261.0, 317.855421686747], [262.0, 322.48235294117654], [263.0, 309.17391304347825], [264.0, 311.6627906976743], [270.0, 319.4222222222222], [271.0, 313.11904761904776], [268.0, 330.0454545454546], [269.0, 320.2325581395349], [265.0, 307.4634146341465], [266.0, 310.32911392405066], [267.0, 330.1204819277109], [273.0, 322.14117647058833], [272.0, 316.0465116279071], [274.0, 327.86075949367086], [275.0, 331.55952380952385], [276.0, 336.9540229885056], [277.0, 328.96739130434776], [278.0, 319.546511627907], [279.0, 311.9222222222222], [280.0, 323.206896551724], [286.0, 342.89743589743597], [287.0, 343.57954545454544], [284.0, 336.55681818181824], [285.0, 338.22093023255815], [281.0, 317.5777777777777], [282.0, 329.1529411764706], [283.0, 331.3209876543211], [289.0, 341.98863636363654], [288.0, 344.892857142857], [290.0, 333.42857142857133], [291.0, 336.08988764044926], [292.0, 335.8837209302324], [293.0, 342.23376623376623], [294.0, 353.26506024096375], [295.0, 368.34666666666664], [296.0, 380.51315789473676], [302.0, 364.14102564102564], [303.0, 368.2911392405063], [300.0, 361.329411764706], [301.0, 361.79518072289153], [297.0, 385.83116883116895], [298.0, 382.0114942528734], [299.0, 368.2558139534883], [305.0, 381.2682926829269], [304.0, 383.925925925926], [306.0, 380.7558139534885], [307.0, 372.241379310345], [308.0, 362.6896551724139], [309.0, 358.51063829787245], [310.0, 354.9662921348315], [311.0, 347.7282608695654], [312.0, 345.5432098765432], [318.0, 376.05617977528095], [319.0, 369.08045977011494], [316.0, 374.2808988764044], [317.0, 370.639534883721], [313.0, 355.23076923076917], [314.0, 359.69318181818187], [315.0, 369.8461538461538], [321.0, 375.59999999999997], [320.0, 373.9166666666665], [322.0, 382.2439024390242], [323.0, 387.8470588235294], [324.0, 391.97500000000014], [325.0, 399.7349397590361], [326.0, 404.8961038961039], [327.0, 409.280487804878], [328.0, 406.7126436781607], [334.0, 402.722891566265], [335.0, 403.95180722891575], [332.0, 385.09638554216866], [333.0, 397.30864197530866], [329.0, 402.2738095238097], [330.0, 392.21348314606735], [331.0, 386.67058823529425], [337.0, 406.58024691358025], [336.0, 409.78651685393265], [338.0, 405.20731707317066], [339.0, 403.6111111111112], [340.0, 404.19047619047615], [341.0, 407.4000000000001], [342.0, 415.5599999999999], [343.0, 419.12987012987], [344.0, 440.26315789473693], [350.0, 418.12087912087907], [351.0, 405.2962962962964], [348.0, 444.53333333333325], [349.0, 426.24096385542174], [345.0, 447.53246753246754], [346.0, 454.4999999999999], [347.0, 451.71604938271605], [353.0, 409.15294117647045], [352.0, 410.4883720930234], [354.0, 421.26190476190476], [355.0, 422.74999999999994], [356.0, 422.69767441860466], [357.0, 421.27160493827165], [358.0, 423.86046511627893], [359.0, 419.5813953488372], [360.0, 424.8953488372092], [366.0, 446.41379310344837], [367.0, 443.69135802469117], [364.0, 443.0129870129871], [365.0, 446.0], [361.0, 423.5833333333333], [362.0, 430.52500000000015], [363.0, 434.8470588235294], [369.0, 434.9655172413793], [368.0, 446.7738095238095], [370.0, 438.19767441860466], [371.0, 431.4], [372.0, 434.2560975609755], [373.0, 437.8674698795181], [374.0, 447.5641025641026], [375.0, 450.01086956521755], [376.0, 452.8095238095239], [382.0, 427.2527472527472], [383.0, 429.3488372093024], [380.0, 432.42553191489367], [381.0, 426.5116279069767], [377.0, 450.42696629213486], [378.0, 440.1777777777778], [379.0, 431.6395348837209], [385.0, 432.5274725274726], [384.0, 432.29347826086956], [386.0, 431.13829787234044], [387.0, 431.79069767441865], [388.0, 430.6067415730338], [389.0, 433.1630434782608], [390.0, 433.10000000000014], [391.0, 435.6483516483515], [392.0, 438.4470588235296], [398.0, 462.6823529411765], [399.0, 456.264367816092], [396.0, 464.3522727272727], [397.0, 465.2413793103449], [393.0, 447.2073170731707], [394.0, 458.59036144578306], [395.0, 461.46666666666664], [401.0, 470.13095238095235], [400.0, 465.8571428571429], [402.0, 473.42857142857144], [403.0, 478.8461538461538], [404.0, 494.7594936708861], [405.0, 498.9404761904763], [406.0, 497.05952380952374], [407.0, 504.98717948717945], [408.0, 506.98795180722897], [414.0, 495.40860215053766], [415.0, 492.68292682926824], [412.0, 499.5243902439024], [413.0, 499.65384615384625], [409.0, 503.3164556962025], [410.0, 501.1975308641975], [411.0, 504.4222222222223], [417.0, 490.35714285714283], [416.0, 491.8068181818181], [418.0, 484.39325842696627], [419.0, 483.71739130434776], [420.0, 473.6043956043955], [421.0, 480.3294117647059], [422.0, 477.68235294117636], [423.0, 481.03260869565213], [424.0, 483.8823529411765], [430.0, 480.98837209302314], [431.0, 488.22093023255815], [428.0, 486.1935483870968], [429.0, 483.674418604651], [425.0, 491.49425287356325], [426.0, 488.9069767441862], [427.0, 489.25806451612914], [433.0, 503.1807228915663], [432.0, 492.98809523809535], [434.0, 510.70886075949363], [435.0, 519.142857142857], [436.0, 516.5454545454547], [437.0, 512.2359550561798], [438.0, 506.81521739130426], [439.0, 496.0795454545455], [440.0, 488.1041666666668], [446.0, 544.4767441860465], [447.0, 539.2093023255812], [444.0, 522.4125000000003], [445.0, 534.4047619047616], [441.0, 493.40740740740745], [442.0, 499.2409638554217], [443.0, 513.1518987341772], [449.0, 524.9534883720929], [448.0, 533.7692307692306], [450.0, 517.9204545454544], [451.0, 517.0561797752811], [452.0, 514.6067415730339], [453.0, 517.975], [454.0, 528.0952380952382], [455.0, 531.6966292134832], [456.0, 528.3296703296704], [462.0, 535.8051948051949], [463.0, 548.1764705882354], [460.0, 522.4534883720929], [461.0, 525.3820224719101], [457.0, 526.2808988764045], [458.0, 527.8850574712645], [459.0, 523.8705882352938], [465.0, 554.505747126437], [464.0, 547.5357142857142], [466.0, 555.952380952381], [467.0, 555.5888888888886], [468.0, 547.8863636363637], [469.0, 540.9999999999998], [470.0, 505.64130434782606], [471.0, 539.1333333333334], [472.0, 544.4285714285712], [478.0, 567.802197802198], [479.0, 569.5595238095239], [476.0, 566.6781609195399], [477.0, 546.8222222222225], [473.0, 522.1477272727273], [474.0, 562.0769230769229], [475.0, 533.9789473684207], [481.0, 555.9080459770119], [480.0, 522.443298969072], [482.0, 522.8068181818184], [483.0, 558.730769230769], [484.0, 517.2045454545454], [485.0, 589.3], [486.0, 589.4597701149427], [487.0, 565.1630434782609], [488.0, 589.2117647058824], [494.0, 517.0116279069767], [495.0, 567.8214285714286], [492.0, 519.3333333333334], [493.0, 574.162162162162], [489.0, 574.3186813186811], [490.0, 553.4343434343435], [491.0, 564.3111111111111], [496.0, 578.6222222222224], [497.0, 617.4077669902912], [498.0, 566.2352941176473], [499.0, 591.2947368421054], [500.0, 610.3417322834613], [1.0, 580.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}, {"data": [[310.20216016636414, 375.49915121164514]], "isOverall": false, "label": "Upload de archivo-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 126735.56666666667, "minX": 1.68166272E12, "maxY": 264444.85, "series": [{"data": [[1.68166278E12, 264444.85], [1.68166272E12, 132044.01666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68166278E12, 247094.13333333333], [1.68166272E12, 126735.56666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166278E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68166272E12, "maxY": 480.71094525769587, "series": [{"data": [[1.68166272E12, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166272E12, 199.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166272E12, 172.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166278E12, 480.71094525769587], [1.68166272E12, 169.01100144590436]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166278E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68166272E12, "maxY": 480.21583010345853, "series": [{"data": [[1.68166272E12, 0.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166272E12, 197.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166272E12, 172.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166278E12, 480.21583010345853], [1.68166272E12, 169.00628654051786]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166278E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68166272E12, "maxY": 104.0, "series": [{"data": [[1.68166272E12, 0.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166272E12, 104.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166272E12, 82.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166278E12, 1.6274704506870805], [1.68166272E12, 1.5270006915194538]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166278E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68166272E12, "maxY": 746.0, "series": [{"data": [[1.68166278E12, 746.0], [1.68166272E12, 430.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68166278E12, 261.0], [1.68166272E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68166278E12, 643.0], [1.68166272E12, 276.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68166278E12, 668.0], [1.68166272E12, 328.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68166278E12, 562.0], [1.68166272E12, 163.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68166278E12, 653.0], [1.68166272E12, 285.4499999999989]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166278E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 71.0, "minX": 6.0, "maxY": 653.0, "series": [{"data": [[557.0, 85.0], [668.0, 84.0], [678.0, 275.5], [763.0, 224.5], [744.0, 274.0], [765.0, 651.0], [791.0, 158.0], [792.0, 222.0], [779.0, 645.0], [781.0, 653.0], [799.0, 630.0], [825.0, 229.0], [813.0, 95.0], [808.0, 499.0], [811.0, 620.0], [826.0, 163.0], [827.0, 616.0], [806.0, 180.0], [816.0, 191.0], [831.0, 621.0], [819.0, 393.0], [817.0, 403.0], [804.0, 224.0], [829.0, 292.0], [805.0, 317.0], [800.0, 364.0], [815.0, 429.0], [832.0, 280.0], [842.0, 324.5], [848.0, 193.0], [850.0, 524.0], [837.0, 420.0], [858.0, 525.0], [857.0, 546.0], [861.0, 485.0], [841.0, 266.0], [840.0, 395.5], [853.0, 322.0], [846.0, 335.0], [855.0, 357.0], [843.0, 369.0], [864.0, 116.0], [866.0, 433.0], [882.0, 430.0], [865.0, 482.0], [895.0, 589.0], [878.0, 582.0], [6.0, 169.5], [80.0, 86.0], [201.0, 85.0], [318.0, 84.0], [304.0, 605.0], [432.0, 84.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[765.0, 77.0], [779.0, 77.0], [811.0, 77.0], [827.0, 76.5], [825.0, 71.0], [857.0, 75.0], [858.0, 76.0], [840.0, 76.0], [864.0, 76.0], [895.0, 76.0], [878.0, 75.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 895.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 6.0, "maxY": 653.0, "series": [{"data": [[557.0, 85.0], [668.0, 84.0], [678.0, 275.5], [763.0, 224.5], [744.0, 274.0], [765.0, 651.0], [791.0, 157.0], [792.0, 222.0], [779.0, 645.0], [781.0, 653.0], [799.0, 630.0], [825.0, 229.0], [813.0, 95.0], [808.0, 499.0], [811.0, 620.0], [826.0, 163.0], [827.0, 616.0], [806.0, 180.0], [816.0, 191.0], [831.0, 621.0], [819.0, 393.0], [817.0, 403.0], [804.0, 224.0], [829.0, 292.0], [805.0, 317.0], [800.0, 364.0], [815.0, 429.0], [832.0, 280.0], [842.0, 324.5], [848.0, 193.0], [850.0, 524.0], [837.0, 420.0], [858.0, 525.0], [857.0, 546.0], [861.0, 485.0], [841.0, 266.0], [840.0, 395.5], [853.0, 322.0], [846.0, 335.0], [855.0, 357.0], [843.0, 369.0], [864.0, 116.0], [866.0, 433.0], [882.0, 430.0], [865.0, 482.0], [895.0, 589.0], [878.0, 582.0], [6.0, 169.5], [80.0, 86.0], [201.0, 85.0], [318.0, 84.0], [304.0, 605.0], [432.0, 84.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[765.0, 0.0], [779.0, 0.0], [811.0, 0.0], [827.0, 0.0], [825.0, 0.0], [857.0, 0.0], [858.0, 0.0], [840.0, 0.0], [864.0, 0.0], [895.0, 0.0], [878.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 895.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 269.05, "minX": 1.68166272E12, "maxY": 516.4333333333333, "series": [{"data": [[1.68166278E12, 516.4333333333333], [1.68166272E12, 269.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166278E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.68166272E12, "maxY": 516.9333333333333, "series": [{"data": [[1.68166278E12, 516.9333333333333], [1.68166272E12, 265.1666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68166278E12, 3.35]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68166278E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166278E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68166272E12, "maxY": 516.9333333333333, "series": [{"data": [[1.68166272E12, 0.016666666666666666]], "isOverall": false, "label": "Imprimir token_response-success", "isController": false}, {"data": [[1.68166272E12, 0.016666666666666666]], "isOverall": false, "label": "Signup-success", "isController": false}, {"data": [[1.68166278E12, 3.3833333333333333]], "isOverall": false, "label": "Upload de archivo-failure", "isController": false}, {"data": [[1.68166278E12, 516.9333333333333], [1.68166272E12, 265.1166666666667]], "isOverall": false, "label": "Upload de archivo-success", "isController": false}, {"data": [[1.68166272E12, 0.016666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166278E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.3833333333333333, "minX": 1.68166272E12, "maxY": 516.9333333333333, "series": [{"data": [[1.68166278E12, 516.9333333333333], [1.68166272E12, 265.1666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68166278E12, 3.3833333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166278E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

