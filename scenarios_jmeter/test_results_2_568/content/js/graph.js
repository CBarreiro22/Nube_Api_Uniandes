/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 788.0, "series": [{"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 2.0], [92.1, 2.0], [92.2, 2.0], [92.3, 2.0], [92.4, 2.0], [92.5, 2.0], [92.6, 2.0], [92.7, 2.0], [92.8, 2.0], [92.9, 2.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 2.0], [95.1, 2.0], [95.2, 2.0], [95.3, 2.0], [95.4, 2.0], [95.5, 2.0], [95.6, 2.0], [95.7, 2.0], [95.8, 2.0], [95.9, 2.0], [96.0, 2.0], [96.1, 2.0], [96.2, 2.0], [96.3, 2.0], [96.4, 2.0], [96.5, 2.0], [96.6, 2.0], [96.7, 2.0], [96.8, 2.0], [96.9, 2.0], [97.0, 2.0], [97.1, 2.0], [97.2, 2.0], [97.3, 2.0], [97.4, 2.0], [97.5, 2.0], [97.6, 2.0], [97.7, 2.0], [97.8, 2.0], [97.9, 2.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 2.0], [98.6, 2.0], [98.7, 2.0], [98.8, 2.0], [98.9, 2.0], [99.0, 2.0], [99.1, 2.0], [99.2, 2.0], [99.3, 2.0], [99.4, 2.0], [99.5, 2.0], [99.6, 2.0], [99.7, 2.0], [99.8, 2.0], [99.9, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[0.0, 203.0], [0.1, 203.0], [0.2, 203.0], [0.3, 203.0], [0.4, 203.0], [0.5, 203.0], [0.6, 203.0], [0.7, 203.0], [0.8, 203.0], [0.9, 203.0], [1.0, 203.0], [1.1, 203.0], [1.2, 203.0], [1.3, 203.0], [1.4, 203.0], [1.5, 203.0], [1.6, 203.0], [1.7, 203.0], [1.8, 203.0], [1.9, 203.0], [2.0, 203.0], [2.1, 203.0], [2.2, 203.0], [2.3, 203.0], [2.4, 203.0], [2.5, 203.0], [2.6, 203.0], [2.7, 203.0], [2.8, 203.0], [2.9, 203.0], [3.0, 203.0], [3.1, 203.0], [3.2, 203.0], [3.3, 203.0], [3.4, 203.0], [3.5, 203.0], [3.6, 203.0], [3.7, 203.0], [3.8, 203.0], [3.9, 203.0], [4.0, 203.0], [4.1, 203.0], [4.2, 203.0], [4.3, 203.0], [4.4, 203.0], [4.5, 203.0], [4.6, 203.0], [4.7, 203.0], [4.8, 203.0], [4.9, 203.0], [5.0, 203.0], [5.1, 203.0], [5.2, 203.0], [5.3, 203.0], [5.4, 203.0], [5.5, 203.0], [5.6, 203.0], [5.7, 203.0], [5.8, 203.0], [5.9, 203.0], [6.0, 203.0], [6.1, 203.0], [6.2, 203.0], [6.3, 203.0], [6.4, 203.0], [6.5, 203.0], [6.6, 203.0], [6.7, 203.0], [6.8, 203.0], [6.9, 203.0], [7.0, 203.0], [7.1, 203.0], [7.2, 203.0], [7.3, 203.0], [7.4, 203.0], [7.5, 203.0], [7.6, 203.0], [7.7, 203.0], [7.8, 203.0], [7.9, 203.0], [8.0, 203.0], [8.1, 203.0], [8.2, 203.0], [8.3, 203.0], [8.4, 203.0], [8.5, 203.0], [8.6, 203.0], [8.7, 203.0], [8.8, 203.0], [8.9, 203.0], [9.0, 203.0], [9.1, 203.0], [9.2, 203.0], [9.3, 203.0], [9.4, 203.0], [9.5, 203.0], [9.6, 203.0], [9.7, 203.0], [9.8, 203.0], [9.9, 203.0], [10.0, 203.0], [10.1, 203.0], [10.2, 203.0], [10.3, 203.0], [10.4, 203.0], [10.5, 203.0], [10.6, 203.0], [10.7, 203.0], [10.8, 203.0], [10.9, 203.0], [11.0, 203.0], [11.1, 203.0], [11.2, 203.0], [11.3, 203.0], [11.4, 203.0], [11.5, 203.0], [11.6, 203.0], [11.7, 203.0], [11.8, 203.0], [11.9, 203.0], [12.0, 203.0], [12.1, 203.0], [12.2, 203.0], [12.3, 203.0], [12.4, 203.0], [12.5, 203.0], [12.6, 203.0], [12.7, 203.0], [12.8, 203.0], [12.9, 203.0], [13.0, 203.0], [13.1, 203.0], [13.2, 203.0], [13.3, 203.0], [13.4, 203.0], [13.5, 203.0], [13.6, 203.0], [13.7, 203.0], [13.8, 203.0], [13.9, 203.0], [14.0, 203.0], [14.1, 203.0], [14.2, 203.0], [14.3, 203.0], [14.4, 203.0], [14.5, 203.0], [14.6, 203.0], [14.7, 203.0], [14.8, 203.0], [14.9, 203.0], [15.0, 203.0], [15.1, 203.0], [15.2, 203.0], [15.3, 203.0], [15.4, 203.0], [15.5, 203.0], [15.6, 203.0], [15.7, 203.0], [15.8, 203.0], [15.9, 203.0], [16.0, 203.0], [16.1, 203.0], [16.2, 203.0], [16.3, 203.0], [16.4, 203.0], [16.5, 203.0], [16.6, 203.0], [16.7, 203.0], [16.8, 203.0], [16.9, 203.0], [17.0, 203.0], [17.1, 203.0], [17.2, 203.0], [17.3, 203.0], [17.4, 203.0], [17.5, 203.0], [17.6, 203.0], [17.7, 203.0], [17.8, 203.0], [17.9, 203.0], [18.0, 203.0], [18.1, 203.0], [18.2, 203.0], [18.3, 203.0], [18.4, 203.0], [18.5, 203.0], [18.6, 203.0], [18.7, 203.0], [18.8, 203.0], [18.9, 203.0], [19.0, 203.0], [19.1, 203.0], [19.2, 203.0], [19.3, 203.0], [19.4, 203.0], [19.5, 203.0], [19.6, 203.0], [19.7, 203.0], [19.8, 203.0], [19.9, 203.0], [20.0, 203.0], [20.1, 203.0], [20.2, 203.0], [20.3, 203.0], [20.4, 203.0], [20.5, 203.0], [20.6, 203.0], [20.7, 203.0], [20.8, 203.0], [20.9, 203.0], [21.0, 203.0], [21.1, 203.0], [21.2, 203.0], [21.3, 203.0], [21.4, 203.0], [21.5, 203.0], [21.6, 203.0], [21.7, 203.0], [21.8, 203.0], [21.9, 203.0], [22.0, 203.0], [22.1, 203.0], [22.2, 203.0], [22.3, 203.0], [22.4, 203.0], [22.5, 203.0], [22.6, 203.0], [22.7, 203.0], [22.8, 203.0], [22.9, 203.0], [23.0, 203.0], [23.1, 203.0], [23.2, 203.0], [23.3, 203.0], [23.4, 203.0], [23.5, 203.0], [23.6, 203.0], [23.7, 203.0], [23.8, 203.0], [23.9, 203.0], [24.0, 203.0], [24.1, 203.0], [24.2, 203.0], [24.3, 203.0], [24.4, 203.0], [24.5, 203.0], [24.6, 203.0], [24.7, 203.0], [24.8, 203.0], [24.9, 203.0], [25.0, 203.0], [25.1, 203.0], [25.2, 203.0], [25.3, 203.0], [25.4, 203.0], [25.5, 203.0], [25.6, 203.0], [25.7, 203.0], [25.8, 203.0], [25.9, 203.0], [26.0, 203.0], [26.1, 203.0], [26.2, 203.0], [26.3, 203.0], [26.4, 203.0], [26.5, 203.0], [26.6, 203.0], [26.7, 203.0], [26.8, 203.0], [26.9, 203.0], [27.0, 203.0], [27.1, 203.0], [27.2, 203.0], [27.3, 203.0], [27.4, 203.0], [27.5, 203.0], [27.6, 203.0], [27.7, 203.0], [27.8, 203.0], [27.9, 203.0], [28.0, 203.0], [28.1, 203.0], [28.2, 203.0], [28.3, 203.0], [28.4, 203.0], [28.5, 203.0], [28.6, 203.0], [28.7, 203.0], [28.8, 203.0], [28.9, 203.0], [29.0, 203.0], [29.1, 203.0], [29.2, 203.0], [29.3, 203.0], [29.4, 203.0], [29.5, 203.0], [29.6, 203.0], [29.7, 203.0], [29.8, 203.0], [29.9, 203.0], [30.0, 203.0], [30.1, 203.0], [30.2, 203.0], [30.3, 203.0], [30.4, 203.0], [30.5, 203.0], [30.6, 203.0], [30.7, 203.0], [30.8, 203.0], [30.9, 203.0], [31.0, 203.0], [31.1, 203.0], [31.2, 203.0], [31.3, 203.0], [31.4, 203.0], [31.5, 203.0], [31.6, 203.0], [31.7, 203.0], [31.8, 203.0], [31.9, 203.0], [32.0, 203.0], [32.1, 203.0], [32.2, 203.0], [32.3, 203.0], [32.4, 203.0], [32.5, 203.0], [32.6, 203.0], [32.7, 203.0], [32.8, 203.0], [32.9, 203.0], [33.0, 203.0], [33.1, 203.0], [33.2, 203.0], [33.3, 203.0], [33.4, 203.0], [33.5, 203.0], [33.6, 203.0], [33.7, 203.0], [33.8, 203.0], [33.9, 203.0], [34.0, 203.0], [34.1, 203.0], [34.2, 203.0], [34.3, 203.0], [34.4, 203.0], [34.5, 203.0], [34.6, 203.0], [34.7, 203.0], [34.8, 203.0], [34.9, 203.0], [35.0, 203.0], [35.1, 203.0], [35.2, 203.0], [35.3, 203.0], [35.4, 203.0], [35.5, 203.0], [35.6, 203.0], [35.7, 203.0], [35.8, 203.0], [35.9, 203.0], [36.0, 203.0], [36.1, 203.0], [36.2, 203.0], [36.3, 203.0], [36.4, 203.0], [36.5, 203.0], [36.6, 203.0], [36.7, 203.0], [36.8, 203.0], [36.9, 203.0], [37.0, 203.0], [37.1, 203.0], [37.2, 203.0], [37.3, 203.0], [37.4, 203.0], [37.5, 203.0], [37.6, 203.0], [37.7, 203.0], [37.8, 203.0], [37.9, 203.0], [38.0, 203.0], [38.1, 203.0], [38.2, 203.0], [38.3, 203.0], [38.4, 203.0], [38.5, 203.0], [38.6, 203.0], [38.7, 203.0], [38.8, 203.0], [38.9, 203.0], [39.0, 203.0], [39.1, 203.0], [39.2, 203.0], [39.3, 203.0], [39.4, 203.0], [39.5, 203.0], [39.6, 203.0], [39.7, 203.0], [39.8, 203.0], [39.9, 203.0], [40.0, 203.0], [40.1, 203.0], [40.2, 203.0], [40.3, 203.0], [40.4, 203.0], [40.5, 203.0], [40.6, 203.0], [40.7, 203.0], [40.8, 203.0], [40.9, 203.0], [41.0, 203.0], [41.1, 203.0], [41.2, 203.0], [41.3, 203.0], [41.4, 203.0], [41.5, 203.0], [41.6, 203.0], [41.7, 203.0], [41.8, 203.0], [41.9, 203.0], [42.0, 203.0], [42.1, 203.0], [42.2, 203.0], [42.3, 203.0], [42.4, 203.0], [42.5, 203.0], [42.6, 203.0], [42.7, 203.0], [42.8, 203.0], [42.9, 203.0], [43.0, 203.0], [43.1, 203.0], [43.2, 203.0], [43.3, 203.0], [43.4, 203.0], [43.5, 203.0], [43.6, 203.0], [43.7, 203.0], [43.8, 203.0], [43.9, 203.0], [44.0, 203.0], [44.1, 203.0], [44.2, 203.0], [44.3, 203.0], [44.4, 203.0], [44.5, 203.0], [44.6, 203.0], [44.7, 203.0], [44.8, 203.0], [44.9, 203.0], [45.0, 203.0], [45.1, 203.0], [45.2, 203.0], [45.3, 203.0], [45.4, 203.0], [45.5, 203.0], [45.6, 203.0], [45.7, 203.0], [45.8, 203.0], [45.9, 203.0], [46.0, 203.0], [46.1, 203.0], [46.2, 203.0], [46.3, 203.0], [46.4, 203.0], [46.5, 203.0], [46.6, 203.0], [46.7, 203.0], [46.8, 203.0], [46.9, 203.0], [47.0, 203.0], [47.1, 203.0], [47.2, 203.0], [47.3, 203.0], [47.4, 203.0], [47.5, 203.0], [47.6, 203.0], [47.7, 203.0], [47.8, 203.0], [47.9, 203.0], [48.0, 203.0], [48.1, 203.0], [48.2, 203.0], [48.3, 203.0], [48.4, 203.0], [48.5, 203.0], [48.6, 203.0], [48.7, 203.0], [48.8, 203.0], [48.9, 203.0], [49.0, 203.0], [49.1, 203.0], [49.2, 203.0], [49.3, 203.0], [49.4, 203.0], [49.5, 203.0], [49.6, 203.0], [49.7, 203.0], [49.8, 203.0], [49.9, 203.0], [50.0, 203.0], [50.1, 203.0], [50.2, 203.0], [50.3, 203.0], [50.4, 203.0], [50.5, 203.0], [50.6, 203.0], [50.7, 203.0], [50.8, 203.0], [50.9, 203.0], [51.0, 203.0], [51.1, 203.0], [51.2, 203.0], [51.3, 203.0], [51.4, 203.0], [51.5, 203.0], [51.6, 203.0], [51.7, 203.0], [51.8, 203.0], [51.9, 203.0], [52.0, 203.0], [52.1, 203.0], [52.2, 203.0], [52.3, 203.0], [52.4, 203.0], [52.5, 203.0], [52.6, 203.0], [52.7, 203.0], [52.8, 203.0], [52.9, 203.0], [53.0, 203.0], [53.1, 203.0], [53.2, 203.0], [53.3, 203.0], [53.4, 203.0], [53.5, 203.0], [53.6, 203.0], [53.7, 203.0], [53.8, 203.0], [53.9, 203.0], [54.0, 203.0], [54.1, 203.0], [54.2, 203.0], [54.3, 203.0], [54.4, 203.0], [54.5, 203.0], [54.6, 203.0], [54.7, 203.0], [54.8, 203.0], [54.9, 203.0], [55.0, 203.0], [55.1, 203.0], [55.2, 203.0], [55.3, 203.0], [55.4, 203.0], [55.5, 203.0], [55.6, 203.0], [55.7, 203.0], [55.8, 203.0], [55.9, 203.0], [56.0, 203.0], [56.1, 203.0], [56.2, 203.0], [56.3, 203.0], [56.4, 203.0], [56.5, 203.0], [56.6, 203.0], [56.7, 203.0], [56.8, 203.0], [56.9, 203.0], [57.0, 203.0], [57.1, 203.0], [57.2, 203.0], [57.3, 203.0], [57.4, 203.0], [57.5, 203.0], [57.6, 203.0], [57.7, 203.0], [57.8, 203.0], [57.9, 203.0], [58.0, 203.0], [58.1, 203.0], [58.2, 203.0], [58.3, 203.0], [58.4, 203.0], [58.5, 203.0], [58.6, 203.0], [58.7, 203.0], [58.8, 203.0], [58.9, 203.0], [59.0, 203.0], [59.1, 203.0], [59.2, 203.0], [59.3, 203.0], [59.4, 203.0], [59.5, 203.0], [59.6, 203.0], [59.7, 203.0], [59.8, 203.0], [59.9, 203.0], [60.0, 203.0], [60.1, 203.0], [60.2, 203.0], [60.3, 203.0], [60.4, 203.0], [60.5, 203.0], [60.6, 203.0], [60.7, 203.0], [60.8, 203.0], [60.9, 203.0], [61.0, 203.0], [61.1, 203.0], [61.2, 203.0], [61.3, 203.0], [61.4, 203.0], [61.5, 203.0], [61.6, 203.0], [61.7, 203.0], [61.8, 203.0], [61.9, 203.0], [62.0, 203.0], [62.1, 203.0], [62.2, 203.0], [62.3, 203.0], [62.4, 203.0], [62.5, 203.0], [62.6, 203.0], [62.7, 203.0], [62.8, 203.0], [62.9, 203.0], [63.0, 203.0], [63.1, 203.0], [63.2, 203.0], [63.3, 203.0], [63.4, 203.0], [63.5, 203.0], [63.6, 203.0], [63.7, 203.0], [63.8, 203.0], [63.9, 203.0], [64.0, 203.0], [64.1, 203.0], [64.2, 203.0], [64.3, 203.0], [64.4, 203.0], [64.5, 203.0], [64.6, 203.0], [64.7, 203.0], [64.8, 203.0], [64.9, 203.0], [65.0, 203.0], [65.1, 203.0], [65.2, 203.0], [65.3, 203.0], [65.4, 203.0], [65.5, 203.0], [65.6, 203.0], [65.7, 203.0], [65.8, 203.0], [65.9, 203.0], [66.0, 203.0], [66.1, 203.0], [66.2, 203.0], [66.3, 203.0], [66.4, 203.0], [66.5, 203.0], [66.6, 203.0], [66.7, 203.0], [66.8, 203.0], [66.9, 203.0], [67.0, 203.0], [67.1, 203.0], [67.2, 203.0], [67.3, 203.0], [67.4, 203.0], [67.5, 203.0], [67.6, 203.0], [67.7, 203.0], [67.8, 203.0], [67.9, 203.0], [68.0, 203.0], [68.1, 203.0], [68.2, 203.0], [68.3, 203.0], [68.4, 203.0], [68.5, 203.0], [68.6, 203.0], [68.7, 203.0], [68.8, 203.0], [68.9, 203.0], [69.0, 203.0], [69.1, 203.0], [69.2, 203.0], [69.3, 203.0], [69.4, 203.0], [69.5, 203.0], [69.6, 203.0], [69.7, 203.0], [69.8, 203.0], [69.9, 203.0], [70.0, 203.0], [70.1, 203.0], [70.2, 203.0], [70.3, 203.0], [70.4, 203.0], [70.5, 203.0], [70.6, 203.0], [70.7, 203.0], [70.8, 203.0], [70.9, 203.0], [71.0, 203.0], [71.1, 203.0], [71.2, 203.0], [71.3, 203.0], [71.4, 203.0], [71.5, 203.0], [71.6, 203.0], [71.7, 203.0], [71.8, 203.0], [71.9, 203.0], [72.0, 203.0], [72.1, 203.0], [72.2, 203.0], [72.3, 203.0], [72.4, 203.0], [72.5, 203.0], [72.6, 203.0], [72.7, 203.0], [72.8, 203.0], [72.9, 203.0], [73.0, 203.0], [73.1, 203.0], [73.2, 203.0], [73.3, 203.0], [73.4, 203.0], [73.5, 203.0], [73.6, 203.0], [73.7, 203.0], [73.8, 203.0], [73.9, 203.0], [74.0, 203.0], [74.1, 203.0], [74.2, 203.0], [74.3, 203.0], [74.4, 203.0], [74.5, 203.0], [74.6, 203.0], [74.7, 203.0], [74.8, 203.0], [74.9, 203.0], [75.0, 203.0], [75.1, 203.0], [75.2, 203.0], [75.3, 203.0], [75.4, 203.0], [75.5, 203.0], [75.6, 203.0], [75.7, 203.0], [75.8, 203.0], [75.9, 203.0], [76.0, 203.0], [76.1, 203.0], [76.2, 203.0], [76.3, 203.0], [76.4, 203.0], [76.5, 203.0], [76.6, 203.0], [76.7, 203.0], [76.8, 203.0], [76.9, 203.0], [77.0, 203.0], [77.1, 203.0], [77.2, 203.0], [77.3, 203.0], [77.4, 203.0], [77.5, 203.0], [77.6, 203.0], [77.7, 203.0], [77.8, 203.0], [77.9, 203.0], [78.0, 203.0], [78.1, 203.0], [78.2, 203.0], [78.3, 203.0], [78.4, 203.0], [78.5, 203.0], [78.6, 203.0], [78.7, 203.0], [78.8, 203.0], [78.9, 203.0], [79.0, 203.0], [79.1, 203.0], [79.2, 203.0], [79.3, 203.0], [79.4, 203.0], [79.5, 203.0], [79.6, 203.0], [79.7, 203.0], [79.8, 203.0], [79.9, 203.0], [80.0, 203.0], [80.1, 203.0], [80.2, 203.0], [80.3, 203.0], [80.4, 203.0], [80.5, 203.0], [80.6, 203.0], [80.7, 203.0], [80.8, 203.0], [80.9, 203.0], [81.0, 203.0], [81.1, 203.0], [81.2, 203.0], [81.3, 203.0], [81.4, 203.0], [81.5, 203.0], [81.6, 203.0], [81.7, 203.0], [81.8, 203.0], [81.9, 203.0], [82.0, 203.0], [82.1, 203.0], [82.2, 203.0], [82.3, 203.0], [82.4, 203.0], [82.5, 203.0], [82.6, 203.0], [82.7, 203.0], [82.8, 203.0], [82.9, 203.0], [83.0, 203.0], [83.1, 203.0], [83.2, 203.0], [83.3, 203.0], [83.4, 203.0], [83.5, 203.0], [83.6, 203.0], [83.7, 203.0], [83.8, 203.0], [83.9, 203.0], [84.0, 203.0], [84.1, 203.0], [84.2, 203.0], [84.3, 203.0], [84.4, 203.0], [84.5, 203.0], [84.6, 203.0], [84.7, 203.0], [84.8, 203.0], [84.9, 203.0], [85.0, 203.0], [85.1, 203.0], [85.2, 203.0], [85.3, 203.0], [85.4, 203.0], [85.5, 203.0], [85.6, 203.0], [85.7, 203.0], [85.8, 203.0], [85.9, 203.0], [86.0, 203.0], [86.1, 203.0], [86.2, 203.0], [86.3, 203.0], [86.4, 203.0], [86.5, 203.0], [86.6, 203.0], [86.7, 203.0], [86.8, 203.0], [86.9, 203.0], [87.0, 203.0], [87.1, 203.0], [87.2, 203.0], [87.3, 203.0], [87.4, 203.0], [87.5, 203.0], [87.6, 203.0], [87.7, 203.0], [87.8, 203.0], [87.9, 203.0], [88.0, 203.0], [88.1, 203.0], [88.2, 203.0], [88.3, 203.0], [88.4, 203.0], [88.5, 203.0], [88.6, 203.0], [88.7, 203.0], [88.8, 203.0], [88.9, 203.0], [89.0, 203.0], [89.1, 203.0], [89.2, 203.0], [89.3, 203.0], [89.4, 203.0], [89.5, 203.0], [89.6, 203.0], [89.7, 203.0], [89.8, 203.0], [89.9, 203.0], [90.0, 203.0], [90.1, 203.0], [90.2, 203.0], [90.3, 203.0], [90.4, 203.0], [90.5, 203.0], [90.6, 203.0], [90.7, 203.0], [90.8, 203.0], [90.9, 203.0], [91.0, 203.0], [91.1, 203.0], [91.2, 203.0], [91.3, 203.0], [91.4, 203.0], [91.5, 203.0], [91.6, 203.0], [91.7, 203.0], [91.8, 203.0], [91.9, 203.0], [92.0, 203.0], [92.1, 203.0], [92.2, 203.0], [92.3, 203.0], [92.4, 203.0], [92.5, 203.0], [92.6, 203.0], [92.7, 203.0], [92.8, 203.0], [92.9, 203.0], [93.0, 203.0], [93.1, 203.0], [93.2, 203.0], [93.3, 203.0], [93.4, 203.0], [93.5, 203.0], [93.6, 203.0], [93.7, 203.0], [93.8, 203.0], [93.9, 203.0], [94.0, 203.0], [94.1, 203.0], [94.2, 203.0], [94.3, 203.0], [94.4, 203.0], [94.5, 203.0], [94.6, 203.0], [94.7, 203.0], [94.8, 203.0], [94.9, 203.0], [95.0, 203.0], [95.1, 203.0], [95.2, 203.0], [95.3, 203.0], [95.4, 203.0], [95.5, 203.0], [95.6, 203.0], [95.7, 203.0], [95.8, 203.0], [95.9, 203.0], [96.0, 203.0], [96.1, 203.0], [96.2, 203.0], [96.3, 203.0], [96.4, 203.0], [96.5, 203.0], [96.6, 203.0], [96.7, 203.0], [96.8, 203.0], [96.9, 203.0], [97.0, 203.0], [97.1, 203.0], [97.2, 203.0], [97.3, 203.0], [97.4, 203.0], [97.5, 203.0], [97.6, 203.0], [97.7, 203.0], [97.8, 203.0], [97.9, 203.0], [98.0, 203.0], [98.1, 203.0], [98.2, 203.0], [98.3, 203.0], [98.4, 203.0], [98.5, 203.0], [98.6, 203.0], [98.7, 203.0], [98.8, 203.0], [98.9, 203.0], [99.0, 203.0], [99.1, 203.0], [99.2, 203.0], [99.3, 203.0], [99.4, 203.0], [99.5, 203.0], [99.6, 203.0], [99.7, 203.0], [99.8, 203.0], [99.9, 203.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[0.0, 170.0], [0.1, 170.0], [0.2, 170.0], [0.3, 170.0], [0.4, 170.0], [0.5, 170.0], [0.6, 170.0], [0.7, 170.0], [0.8, 170.0], [0.9, 170.0], [1.0, 170.0], [1.1, 170.0], [1.2, 170.0], [1.3, 170.0], [1.4, 170.0], [1.5, 170.0], [1.6, 170.0], [1.7, 170.0], [1.8, 170.0], [1.9, 170.0], [2.0, 170.0], [2.1, 170.0], [2.2, 170.0], [2.3, 170.0], [2.4, 170.0], [2.5, 170.0], [2.6, 170.0], [2.7, 170.0], [2.8, 170.0], [2.9, 170.0], [3.0, 170.0], [3.1, 170.0], [3.2, 170.0], [3.3, 170.0], [3.4, 170.0], [3.5, 170.0], [3.6, 170.0], [3.7, 170.0], [3.8, 170.0], [3.9, 170.0], [4.0, 170.0], [4.1, 170.0], [4.2, 170.0], [4.3, 170.0], [4.4, 170.0], [4.5, 170.0], [4.6, 170.0], [4.7, 170.0], [4.8, 170.0], [4.9, 170.0], [5.0, 170.0], [5.1, 170.0], [5.2, 170.0], [5.3, 170.0], [5.4, 170.0], [5.5, 170.0], [5.6, 170.0], [5.7, 170.0], [5.8, 170.0], [5.9, 170.0], [6.0, 170.0], [6.1, 170.0], [6.2, 170.0], [6.3, 170.0], [6.4, 170.0], [6.5, 170.0], [6.6, 170.0], [6.7, 170.0], [6.8, 170.0], [6.9, 170.0], [7.0, 170.0], [7.1, 170.0], [7.2, 170.0], [7.3, 170.0], [7.4, 170.0], [7.5, 170.0], [7.6, 170.0], [7.7, 170.0], [7.8, 170.0], [7.9, 170.0], [8.0, 170.0], [8.1, 170.0], [8.2, 170.0], [8.3, 170.0], [8.4, 170.0], [8.5, 170.0], [8.6, 170.0], [8.7, 170.0], [8.8, 170.0], [8.9, 170.0], [9.0, 170.0], [9.1, 170.0], [9.2, 170.0], [9.3, 170.0], [9.4, 170.0], [9.5, 170.0], [9.6, 170.0], [9.7, 170.0], [9.8, 170.0], [9.9, 170.0], [10.0, 170.0], [10.1, 170.0], [10.2, 170.0], [10.3, 170.0], [10.4, 170.0], [10.5, 170.0], [10.6, 170.0], [10.7, 170.0], [10.8, 170.0], [10.9, 170.0], [11.0, 170.0], [11.1, 170.0], [11.2, 170.0], [11.3, 170.0], [11.4, 170.0], [11.5, 170.0], [11.6, 170.0], [11.7, 170.0], [11.8, 170.0], [11.9, 170.0], [12.0, 170.0], [12.1, 170.0], [12.2, 170.0], [12.3, 170.0], [12.4, 170.0], [12.5, 170.0], [12.6, 170.0], [12.7, 170.0], [12.8, 170.0], [12.9, 170.0], [13.0, 170.0], [13.1, 170.0], [13.2, 170.0], [13.3, 170.0], [13.4, 170.0], [13.5, 170.0], [13.6, 170.0], [13.7, 170.0], [13.8, 170.0], [13.9, 170.0], [14.0, 170.0], [14.1, 170.0], [14.2, 170.0], [14.3, 170.0], [14.4, 170.0], [14.5, 170.0], [14.6, 170.0], [14.7, 170.0], [14.8, 170.0], [14.9, 170.0], [15.0, 170.0], [15.1, 170.0], [15.2, 170.0], [15.3, 170.0], [15.4, 170.0], [15.5, 170.0], [15.6, 170.0], [15.7, 170.0], [15.8, 170.0], [15.9, 170.0], [16.0, 170.0], [16.1, 170.0], [16.2, 170.0], [16.3, 170.0], [16.4, 170.0], [16.5, 170.0], [16.6, 170.0], [16.7, 170.0], [16.8, 170.0], [16.9, 170.0], [17.0, 170.0], [17.1, 170.0], [17.2, 170.0], [17.3, 170.0], [17.4, 170.0], [17.5, 170.0], [17.6, 170.0], [17.7, 170.0], [17.8, 170.0], [17.9, 170.0], [18.0, 170.0], [18.1, 170.0], [18.2, 170.0], [18.3, 170.0], [18.4, 170.0], [18.5, 170.0], [18.6, 170.0], [18.7, 170.0], [18.8, 170.0], [18.9, 170.0], [19.0, 170.0], [19.1, 170.0], [19.2, 170.0], [19.3, 170.0], [19.4, 170.0], [19.5, 170.0], [19.6, 170.0], [19.7, 170.0], [19.8, 170.0], [19.9, 170.0], [20.0, 170.0], [20.1, 170.0], [20.2, 170.0], [20.3, 170.0], [20.4, 170.0], [20.5, 170.0], [20.6, 170.0], [20.7, 170.0], [20.8, 170.0], [20.9, 170.0], [21.0, 170.0], [21.1, 170.0], [21.2, 170.0], [21.3, 170.0], [21.4, 170.0], [21.5, 170.0], [21.6, 170.0], [21.7, 170.0], [21.8, 170.0], [21.9, 170.0], [22.0, 170.0], [22.1, 170.0], [22.2, 170.0], [22.3, 170.0], [22.4, 170.0], [22.5, 170.0], [22.6, 170.0], [22.7, 170.0], [22.8, 170.0], [22.9, 170.0], [23.0, 170.0], [23.1, 170.0], [23.2, 170.0], [23.3, 170.0], [23.4, 170.0], [23.5, 170.0], [23.6, 170.0], [23.7, 170.0], [23.8, 170.0], [23.9, 170.0], [24.0, 170.0], [24.1, 170.0], [24.2, 170.0], [24.3, 170.0], [24.4, 170.0], [24.5, 170.0], [24.6, 170.0], [24.7, 170.0], [24.8, 170.0], [24.9, 170.0], [25.0, 170.0], [25.1, 170.0], [25.2, 170.0], [25.3, 170.0], [25.4, 170.0], [25.5, 170.0], [25.6, 170.0], [25.7, 170.0], [25.8, 170.0], [25.9, 170.0], [26.0, 170.0], [26.1, 170.0], [26.2, 170.0], [26.3, 170.0], [26.4, 170.0], [26.5, 170.0], [26.6, 170.0], [26.7, 170.0], [26.8, 170.0], [26.9, 170.0], [27.0, 170.0], [27.1, 170.0], [27.2, 170.0], [27.3, 170.0], [27.4, 170.0], [27.5, 170.0], [27.6, 170.0], [27.7, 170.0], [27.8, 170.0], [27.9, 170.0], [28.0, 170.0], [28.1, 170.0], [28.2, 170.0], [28.3, 170.0], [28.4, 170.0], [28.5, 170.0], [28.6, 170.0], [28.7, 170.0], [28.8, 170.0], [28.9, 170.0], [29.0, 170.0], [29.1, 170.0], [29.2, 170.0], [29.3, 170.0], [29.4, 170.0], [29.5, 170.0], [29.6, 170.0], [29.7, 170.0], [29.8, 170.0], [29.9, 170.0], [30.0, 170.0], [30.1, 170.0], [30.2, 170.0], [30.3, 170.0], [30.4, 170.0], [30.5, 170.0], [30.6, 170.0], [30.7, 170.0], [30.8, 170.0], [30.9, 170.0], [31.0, 170.0], [31.1, 170.0], [31.2, 170.0], [31.3, 170.0], [31.4, 170.0], [31.5, 170.0], [31.6, 170.0], [31.7, 170.0], [31.8, 170.0], [31.9, 170.0], [32.0, 170.0], [32.1, 170.0], [32.2, 170.0], [32.3, 170.0], [32.4, 170.0], [32.5, 170.0], [32.6, 170.0], [32.7, 170.0], [32.8, 170.0], [32.9, 170.0], [33.0, 170.0], [33.1, 170.0], [33.2, 170.0], [33.3, 170.0], [33.4, 170.0], [33.5, 170.0], [33.6, 170.0], [33.7, 170.0], [33.8, 170.0], [33.9, 170.0], [34.0, 170.0], [34.1, 170.0], [34.2, 170.0], [34.3, 170.0], [34.4, 170.0], [34.5, 170.0], [34.6, 170.0], [34.7, 170.0], [34.8, 170.0], [34.9, 170.0], [35.0, 170.0], [35.1, 170.0], [35.2, 170.0], [35.3, 170.0], [35.4, 170.0], [35.5, 170.0], [35.6, 170.0], [35.7, 170.0], [35.8, 170.0], [35.9, 170.0], [36.0, 170.0], [36.1, 170.0], [36.2, 170.0], [36.3, 170.0], [36.4, 170.0], [36.5, 170.0], [36.6, 170.0], [36.7, 170.0], [36.8, 170.0], [36.9, 170.0], [37.0, 170.0], [37.1, 170.0], [37.2, 170.0], [37.3, 170.0], [37.4, 170.0], [37.5, 170.0], [37.6, 170.0], [37.7, 170.0], [37.8, 170.0], [37.9, 170.0], [38.0, 170.0], [38.1, 170.0], [38.2, 170.0], [38.3, 170.0], [38.4, 170.0], [38.5, 170.0], [38.6, 170.0], [38.7, 170.0], [38.8, 170.0], [38.9, 170.0], [39.0, 170.0], [39.1, 170.0], [39.2, 170.0], [39.3, 170.0], [39.4, 170.0], [39.5, 170.0], [39.6, 170.0], [39.7, 170.0], [39.8, 170.0], [39.9, 170.0], [40.0, 170.0], [40.1, 170.0], [40.2, 170.0], [40.3, 170.0], [40.4, 170.0], [40.5, 170.0], [40.6, 170.0], [40.7, 170.0], [40.8, 170.0], [40.9, 170.0], [41.0, 170.0], [41.1, 170.0], [41.2, 170.0], [41.3, 170.0], [41.4, 170.0], [41.5, 170.0], [41.6, 170.0], [41.7, 170.0], [41.8, 170.0], [41.9, 170.0], [42.0, 170.0], [42.1, 170.0], [42.2, 170.0], [42.3, 170.0], [42.4, 170.0], [42.5, 170.0], [42.6, 170.0], [42.7, 170.0], [42.8, 170.0], [42.9, 170.0], [43.0, 170.0], [43.1, 170.0], [43.2, 170.0], [43.3, 170.0], [43.4, 170.0], [43.5, 170.0], [43.6, 170.0], [43.7, 170.0], [43.8, 170.0], [43.9, 170.0], [44.0, 170.0], [44.1, 170.0], [44.2, 170.0], [44.3, 170.0], [44.4, 170.0], [44.5, 170.0], [44.6, 170.0], [44.7, 170.0], [44.8, 170.0], [44.9, 170.0], [45.0, 170.0], [45.1, 170.0], [45.2, 170.0], [45.3, 170.0], [45.4, 170.0], [45.5, 170.0], [45.6, 170.0], [45.7, 170.0], [45.8, 170.0], [45.9, 170.0], [46.0, 170.0], [46.1, 170.0], [46.2, 170.0], [46.3, 170.0], [46.4, 170.0], [46.5, 170.0], [46.6, 170.0], [46.7, 170.0], [46.8, 170.0], [46.9, 170.0], [47.0, 170.0], [47.1, 170.0], [47.2, 170.0], [47.3, 170.0], [47.4, 170.0], [47.5, 170.0], [47.6, 170.0], [47.7, 170.0], [47.8, 170.0], [47.9, 170.0], [48.0, 170.0], [48.1, 170.0], [48.2, 170.0], [48.3, 170.0], [48.4, 170.0], [48.5, 170.0], [48.6, 170.0], [48.7, 170.0], [48.8, 170.0], [48.9, 170.0], [49.0, 170.0], [49.1, 170.0], [49.2, 170.0], [49.3, 170.0], [49.4, 170.0], [49.5, 170.0], [49.6, 170.0], [49.7, 170.0], [49.8, 170.0], [49.9, 170.0], [50.0, 170.0], [50.1, 170.0], [50.2, 170.0], [50.3, 170.0], [50.4, 170.0], [50.5, 170.0], [50.6, 170.0], [50.7, 170.0], [50.8, 170.0], [50.9, 170.0], [51.0, 170.0], [51.1, 170.0], [51.2, 170.0], [51.3, 170.0], [51.4, 170.0], [51.5, 170.0], [51.6, 170.0], [51.7, 170.0], [51.8, 170.0], [51.9, 170.0], [52.0, 170.0], [52.1, 170.0], [52.2, 170.0], [52.3, 170.0], [52.4, 170.0], [52.5, 170.0], [52.6, 170.0], [52.7, 170.0], [52.8, 170.0], [52.9, 170.0], [53.0, 170.0], [53.1, 170.0], [53.2, 170.0], [53.3, 170.0], [53.4, 170.0], [53.5, 170.0], [53.6, 170.0], [53.7, 170.0], [53.8, 170.0], [53.9, 170.0], [54.0, 170.0], [54.1, 170.0], [54.2, 170.0], [54.3, 170.0], [54.4, 170.0], [54.5, 170.0], [54.6, 170.0], [54.7, 170.0], [54.8, 170.0], [54.9, 170.0], [55.0, 170.0], [55.1, 170.0], [55.2, 170.0], [55.3, 170.0], [55.4, 170.0], [55.5, 170.0], [55.6, 170.0], [55.7, 170.0], [55.8, 170.0], [55.9, 170.0], [56.0, 170.0], [56.1, 170.0], [56.2, 170.0], [56.3, 170.0], [56.4, 170.0], [56.5, 170.0], [56.6, 170.0], [56.7, 170.0], [56.8, 170.0], [56.9, 170.0], [57.0, 170.0], [57.1, 170.0], [57.2, 170.0], [57.3, 170.0], [57.4, 170.0], [57.5, 170.0], [57.6, 170.0], [57.7, 170.0], [57.8, 170.0], [57.9, 170.0], [58.0, 170.0], [58.1, 170.0], [58.2, 170.0], [58.3, 170.0], [58.4, 170.0], [58.5, 170.0], [58.6, 170.0], [58.7, 170.0], [58.8, 170.0], [58.9, 170.0], [59.0, 170.0], [59.1, 170.0], [59.2, 170.0], [59.3, 170.0], [59.4, 170.0], [59.5, 170.0], [59.6, 170.0], [59.7, 170.0], [59.8, 170.0], [59.9, 170.0], [60.0, 170.0], [60.1, 170.0], [60.2, 170.0], [60.3, 170.0], [60.4, 170.0], [60.5, 170.0], [60.6, 170.0], [60.7, 170.0], [60.8, 170.0], [60.9, 170.0], [61.0, 170.0], [61.1, 170.0], [61.2, 170.0], [61.3, 170.0], [61.4, 170.0], [61.5, 170.0], [61.6, 170.0], [61.7, 170.0], [61.8, 170.0], [61.9, 170.0], [62.0, 170.0], [62.1, 170.0], [62.2, 170.0], [62.3, 170.0], [62.4, 170.0], [62.5, 170.0], [62.6, 170.0], [62.7, 170.0], [62.8, 170.0], [62.9, 170.0], [63.0, 170.0], [63.1, 170.0], [63.2, 170.0], [63.3, 170.0], [63.4, 170.0], [63.5, 170.0], [63.6, 170.0], [63.7, 170.0], [63.8, 170.0], [63.9, 170.0], [64.0, 170.0], [64.1, 170.0], [64.2, 170.0], [64.3, 170.0], [64.4, 170.0], [64.5, 170.0], [64.6, 170.0], [64.7, 170.0], [64.8, 170.0], [64.9, 170.0], [65.0, 170.0], [65.1, 170.0], [65.2, 170.0], [65.3, 170.0], [65.4, 170.0], [65.5, 170.0], [65.6, 170.0], [65.7, 170.0], [65.8, 170.0], [65.9, 170.0], [66.0, 170.0], [66.1, 170.0], [66.2, 170.0], [66.3, 170.0], [66.4, 170.0], [66.5, 170.0], [66.6, 170.0], [66.7, 170.0], [66.8, 170.0], [66.9, 170.0], [67.0, 170.0], [67.1, 170.0], [67.2, 170.0], [67.3, 170.0], [67.4, 170.0], [67.5, 170.0], [67.6, 170.0], [67.7, 170.0], [67.8, 170.0], [67.9, 170.0], [68.0, 170.0], [68.1, 170.0], [68.2, 170.0], [68.3, 170.0], [68.4, 170.0], [68.5, 170.0], [68.6, 170.0], [68.7, 170.0], [68.8, 170.0], [68.9, 170.0], [69.0, 170.0], [69.1, 170.0], [69.2, 170.0], [69.3, 170.0], [69.4, 170.0], [69.5, 170.0], [69.6, 170.0], [69.7, 170.0], [69.8, 170.0], [69.9, 170.0], [70.0, 170.0], [70.1, 170.0], [70.2, 170.0], [70.3, 170.0], [70.4, 170.0], [70.5, 170.0], [70.6, 170.0], [70.7, 170.0], [70.8, 170.0], [70.9, 170.0], [71.0, 170.0], [71.1, 170.0], [71.2, 170.0], [71.3, 170.0], [71.4, 170.0], [71.5, 170.0], [71.6, 170.0], [71.7, 170.0], [71.8, 170.0], [71.9, 170.0], [72.0, 170.0], [72.1, 170.0], [72.2, 170.0], [72.3, 170.0], [72.4, 170.0], [72.5, 170.0], [72.6, 170.0], [72.7, 170.0], [72.8, 170.0], [72.9, 170.0], [73.0, 170.0], [73.1, 170.0], [73.2, 170.0], [73.3, 170.0], [73.4, 170.0], [73.5, 170.0], [73.6, 170.0], [73.7, 170.0], [73.8, 170.0], [73.9, 170.0], [74.0, 170.0], [74.1, 170.0], [74.2, 170.0], [74.3, 170.0], [74.4, 170.0], [74.5, 170.0], [74.6, 170.0], [74.7, 170.0], [74.8, 170.0], [74.9, 170.0], [75.0, 170.0], [75.1, 170.0], [75.2, 170.0], [75.3, 170.0], [75.4, 170.0], [75.5, 170.0], [75.6, 170.0], [75.7, 170.0], [75.8, 170.0], [75.9, 170.0], [76.0, 170.0], [76.1, 170.0], [76.2, 170.0], [76.3, 170.0], [76.4, 170.0], [76.5, 170.0], [76.6, 170.0], [76.7, 170.0], [76.8, 170.0], [76.9, 170.0], [77.0, 170.0], [77.1, 170.0], [77.2, 170.0], [77.3, 170.0], [77.4, 170.0], [77.5, 170.0], [77.6, 170.0], [77.7, 170.0], [77.8, 170.0], [77.9, 170.0], [78.0, 170.0], [78.1, 170.0], [78.2, 170.0], [78.3, 170.0], [78.4, 170.0], [78.5, 170.0], [78.6, 170.0], [78.7, 170.0], [78.8, 170.0], [78.9, 170.0], [79.0, 170.0], [79.1, 170.0], [79.2, 170.0], [79.3, 170.0], [79.4, 170.0], [79.5, 170.0], [79.6, 170.0], [79.7, 170.0], [79.8, 170.0], [79.9, 170.0], [80.0, 170.0], [80.1, 170.0], [80.2, 170.0], [80.3, 170.0], [80.4, 170.0], [80.5, 170.0], [80.6, 170.0], [80.7, 170.0], [80.8, 170.0], [80.9, 170.0], [81.0, 170.0], [81.1, 170.0], [81.2, 170.0], [81.3, 170.0], [81.4, 170.0], [81.5, 170.0], [81.6, 170.0], [81.7, 170.0], [81.8, 170.0], [81.9, 170.0], [82.0, 170.0], [82.1, 170.0], [82.2, 170.0], [82.3, 170.0], [82.4, 170.0], [82.5, 170.0], [82.6, 170.0], [82.7, 170.0], [82.8, 170.0], [82.9, 170.0], [83.0, 170.0], [83.1, 170.0], [83.2, 170.0], [83.3, 170.0], [83.4, 170.0], [83.5, 170.0], [83.6, 170.0], [83.7, 170.0], [83.8, 170.0], [83.9, 170.0], [84.0, 170.0], [84.1, 170.0], [84.2, 170.0], [84.3, 170.0], [84.4, 170.0], [84.5, 170.0], [84.6, 170.0], [84.7, 170.0], [84.8, 170.0], [84.9, 170.0], [85.0, 170.0], [85.1, 170.0], [85.2, 170.0], [85.3, 170.0], [85.4, 170.0], [85.5, 170.0], [85.6, 170.0], [85.7, 170.0], [85.8, 170.0], [85.9, 170.0], [86.0, 170.0], [86.1, 170.0], [86.2, 170.0], [86.3, 170.0], [86.4, 170.0], [86.5, 170.0], [86.6, 170.0], [86.7, 170.0], [86.8, 170.0], [86.9, 170.0], [87.0, 170.0], [87.1, 170.0], [87.2, 170.0], [87.3, 170.0], [87.4, 170.0], [87.5, 170.0], [87.6, 170.0], [87.7, 170.0], [87.8, 170.0], [87.9, 170.0], [88.0, 170.0], [88.1, 170.0], [88.2, 170.0], [88.3, 170.0], [88.4, 170.0], [88.5, 170.0], [88.6, 170.0], [88.7, 170.0], [88.8, 170.0], [88.9, 170.0], [89.0, 170.0], [89.1, 170.0], [89.2, 170.0], [89.3, 170.0], [89.4, 170.0], [89.5, 170.0], [89.6, 170.0], [89.7, 170.0], [89.8, 170.0], [89.9, 170.0], [90.0, 170.0], [90.1, 170.0], [90.2, 170.0], [90.3, 170.0], [90.4, 170.0], [90.5, 170.0], [90.6, 170.0], [90.7, 170.0], [90.8, 170.0], [90.9, 170.0], [91.0, 170.0], [91.1, 170.0], [91.2, 170.0], [91.3, 170.0], [91.4, 170.0], [91.5, 170.0], [91.6, 170.0], [91.7, 170.0], [91.8, 170.0], [91.9, 170.0], [92.0, 170.0], [92.1, 170.0], [92.2, 170.0], [92.3, 170.0], [92.4, 170.0], [92.5, 170.0], [92.6, 170.0], [92.7, 170.0], [92.8, 170.0], [92.9, 170.0], [93.0, 170.0], [93.1, 170.0], [93.2, 170.0], [93.3, 170.0], [93.4, 170.0], [93.5, 170.0], [93.6, 170.0], [93.7, 170.0], [93.8, 170.0], [93.9, 170.0], [94.0, 170.0], [94.1, 170.0], [94.2, 170.0], [94.3, 170.0], [94.4, 170.0], [94.5, 170.0], [94.6, 170.0], [94.7, 170.0], [94.8, 170.0], [94.9, 170.0], [95.0, 170.0], [95.1, 170.0], [95.2, 170.0], [95.3, 170.0], [95.4, 170.0], [95.5, 170.0], [95.6, 170.0], [95.7, 170.0], [95.8, 170.0], [95.9, 170.0], [96.0, 170.0], [96.1, 170.0], [96.2, 170.0], [96.3, 170.0], [96.4, 170.0], [96.5, 170.0], [96.6, 170.0], [96.7, 170.0], [96.8, 170.0], [96.9, 170.0], [97.0, 170.0], [97.1, 170.0], [97.2, 170.0], [97.3, 170.0], [97.4, 170.0], [97.5, 170.0], [97.6, 170.0], [97.7, 170.0], [97.8, 170.0], [97.9, 170.0], [98.0, 170.0], [98.1, 170.0], [98.2, 170.0], [98.3, 170.0], [98.4, 170.0], [98.5, 170.0], [98.6, 170.0], [98.7, 170.0], [98.8, 170.0], [98.9, 170.0], [99.0, 170.0], [99.1, 170.0], [99.2, 170.0], [99.3, 170.0], [99.4, 170.0], [99.5, 170.0], [99.6, 170.0], [99.7, 170.0], [99.8, 170.0], [99.9, 170.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 54.0], [0.1, 71.0], [0.2, 73.0], [0.3, 75.0], [0.4, 75.0], [0.5, 77.0], [0.6, 77.0], [0.7, 78.0], [0.8, 79.0], [0.9, 81.0], [1.0, 82.0], [1.1, 82.0], [1.2, 82.0], [1.3, 82.0], [1.4, 83.0], [1.5, 83.0], [1.6, 83.0], [1.7, 83.0], [1.8, 83.0], [1.9, 83.0], [2.0, 83.0], [2.1, 83.0], [2.2, 83.0], [2.3, 83.0], [2.4, 84.0], [2.5, 84.0], [2.6, 84.0], [2.7, 84.0], [2.8, 84.0], [2.9, 84.0], [3.0, 84.0], [3.1, 84.0], [3.2, 84.0], [3.3, 84.0], [3.4, 84.0], [3.5, 84.0], [3.6, 84.0], [3.7, 85.0], [3.8, 85.0], [3.9, 85.0], [4.0, 85.0], [4.1, 85.0], [4.2, 85.0], [4.3, 85.0], [4.4, 85.0], [4.5, 85.0], [4.6, 85.0], [4.7, 86.0], [4.8, 86.0], [4.9, 86.0], [5.0, 86.0], [5.1, 86.0], [5.2, 86.0], [5.3, 86.0], [5.4, 86.0], [5.5, 86.0], [5.6, 87.0], [5.7, 87.0], [5.8, 87.0], [5.9, 87.0], [6.0, 87.0], [6.1, 88.0], [6.2, 88.0], [6.3, 88.0], [6.4, 89.0], [6.5, 89.0], [6.6, 89.0], [6.7, 90.0], [6.8, 90.0], [6.9, 91.0], [7.0, 92.0], [7.1, 93.0], [7.2, 94.0], [7.3, 95.0], [7.4, 95.0], [7.5, 96.0], [7.6, 97.0], [7.7, 97.0], [7.8, 98.0], [7.9, 98.0], [8.0, 98.0], [8.1, 99.0], [8.2, 99.0], [8.3, 100.0], [8.4, 100.0], [8.5, 100.0], [8.6, 101.0], [8.7, 101.0], [8.8, 102.0], [8.9, 102.0], [9.0, 102.0], [9.1, 103.0], [9.2, 103.0], [9.3, 104.0], [9.4, 105.0], [9.5, 105.0], [9.6, 106.0], [9.7, 108.0], [9.8, 112.0], [9.9, 113.0], [10.0, 115.0], [10.1, 116.0], [10.2, 117.0], [10.3, 118.0], [10.4, 119.0], [10.5, 120.0], [10.6, 120.0], [10.7, 121.0], [10.8, 121.0], [10.9, 122.0], [11.0, 122.0], [11.1, 123.0], [11.2, 123.0], [11.3, 124.0], [11.4, 124.0], [11.5, 125.0], [11.6, 125.0], [11.7, 126.0], [11.8, 126.0], [11.9, 127.0], [12.0, 127.0], [12.1, 127.0], [12.2, 128.0], [12.3, 128.0], [12.4, 128.0], [12.5, 129.0], [12.6, 129.0], [12.7, 130.0], [12.8, 130.0], [12.9, 130.0], [13.0, 131.0], [13.1, 132.0], [13.2, 132.0], [13.3, 133.0], [13.4, 134.0], [13.5, 135.0], [13.6, 136.0], [13.7, 137.0], [13.8, 138.0], [13.9, 139.0], [14.0, 140.0], [14.1, 140.0], [14.2, 141.0], [14.3, 141.0], [14.4, 142.0], [14.5, 142.0], [14.6, 143.0], [14.7, 144.0], [14.8, 144.0], [14.9, 145.0], [15.0, 145.0], [15.1, 146.0], [15.2, 147.0], [15.3, 147.0], [15.4, 148.0], [15.5, 149.0], [15.6, 150.0], [15.7, 151.0], [15.8, 153.0], [15.9, 155.0], [16.0, 157.0], [16.1, 157.0], [16.2, 158.0], [16.3, 160.0], [16.4, 161.0], [16.5, 162.0], [16.6, 163.0], [16.7, 164.0], [16.8, 165.0], [16.9, 165.0], [17.0, 166.0], [17.1, 166.0], [17.2, 167.0], [17.3, 167.0], [17.4, 168.0], [17.5, 168.0], [17.6, 168.0], [17.7, 169.0], [17.8, 169.0], [17.9, 170.0], [18.0, 170.0], [18.1, 170.0], [18.2, 171.0], [18.3, 171.0], [18.4, 171.0], [18.5, 172.0], [18.6, 172.0], [18.7, 173.0], [18.8, 173.0], [18.9, 174.0], [19.0, 175.0], [19.1, 176.0], [19.2, 180.0], [19.3, 183.0], [19.4, 185.0], [19.5, 186.0], [19.6, 187.0], [19.7, 189.0], [19.8, 191.0], [19.9, 192.0], [20.0, 193.0], [20.1, 194.0], [20.2, 195.0], [20.3, 196.0], [20.4, 197.0], [20.5, 198.0], [20.6, 199.0], [20.7, 200.0], [20.8, 203.0], [20.9, 204.0], [21.0, 206.0], [21.1, 207.0], [21.2, 207.0], [21.3, 208.0], [21.4, 209.0], [21.5, 210.0], [21.6, 211.0], [21.7, 212.0], [21.8, 212.0], [21.9, 213.0], [22.0, 213.0], [22.1, 214.0], [22.2, 214.0], [22.3, 215.0], [22.4, 215.0], [22.5, 215.0], [22.6, 216.0], [22.7, 216.0], [22.8, 217.0], [22.9, 217.0], [23.0, 218.0], [23.1, 218.0], [23.2, 219.0], [23.3, 219.0], [23.4, 220.0], [23.5, 221.0], [23.6, 221.0], [23.7, 222.0], [23.8, 223.0], [23.9, 223.0], [24.0, 224.0], [24.1, 224.0], [24.2, 225.0], [24.3, 225.0], [24.4, 226.0], [24.5, 226.0], [24.6, 227.0], [24.7, 227.0], [24.8, 228.0], [24.9, 228.0], [25.0, 229.0], [25.1, 229.0], [25.2, 230.0], [25.3, 230.0], [25.4, 231.0], [25.5, 232.0], [25.6, 233.0], [25.7, 234.0], [25.8, 236.0], [25.9, 237.0], [26.0, 238.0], [26.1, 239.0], [26.2, 240.0], [26.3, 241.0], [26.4, 241.0], [26.5, 242.0], [26.6, 242.0], [26.7, 243.0], [26.8, 244.0], [26.9, 244.0], [27.0, 245.0], [27.1, 246.0], [27.2, 247.0], [27.3, 248.0], [27.4, 249.0], [27.5, 249.0], [27.6, 250.0], [27.7, 251.0], [27.8, 253.0], [27.9, 254.0], [28.0, 256.0], [28.1, 258.0], [28.2, 261.0], [28.3, 262.0], [28.4, 263.0], [28.5, 264.0], [28.6, 265.0], [28.7, 266.0], [28.8, 267.0], [28.9, 267.0], [29.0, 268.0], [29.1, 268.0], [29.2, 269.0], [29.3, 270.0], [29.4, 271.0], [29.5, 271.0], [29.6, 272.0], [29.7, 273.0], [29.8, 273.0], [29.9, 274.0], [30.0, 274.0], [30.1, 275.0], [30.2, 275.0], [30.3, 276.0], [30.4, 276.0], [30.5, 277.0], [30.6, 278.0], [30.7, 278.0], [30.8, 279.0], [30.9, 279.0], [31.0, 280.0], [31.1, 281.0], [31.2, 281.0], [31.3, 282.0], [31.4, 283.0], [31.5, 283.0], [31.6, 284.0], [31.7, 285.0], [31.8, 285.0], [31.9, 286.0], [32.0, 287.0], [32.1, 287.0], [32.2, 288.0], [32.3, 289.0], [32.4, 290.0], [32.5, 290.0], [32.6, 291.0], [32.7, 291.0], [32.8, 292.0], [32.9, 292.0], [33.0, 293.0], [33.1, 293.0], [33.2, 294.0], [33.3, 295.0], [33.4, 295.0], [33.5, 295.0], [33.6, 296.0], [33.7, 297.0], [33.8, 297.0], [33.9, 298.0], [34.0, 298.0], [34.1, 299.0], [34.2, 299.0], [34.3, 300.0], [34.4, 300.0], [34.5, 301.0], [34.6, 302.0], [34.7, 302.0], [34.8, 303.0], [34.9, 303.0], [35.0, 304.0], [35.1, 305.0], [35.2, 305.0], [35.3, 306.0], [35.4, 307.0], [35.5, 308.0], [35.6, 308.0], [35.7, 309.0], [35.8, 310.0], [35.9, 311.0], [36.0, 311.0], [36.1, 312.0], [36.2, 313.0], [36.3, 314.0], [36.4, 315.0], [36.5, 316.0], [36.6, 318.0], [36.7, 324.0], [36.8, 330.0], [36.9, 333.0], [37.0, 336.0], [37.1, 338.0], [37.2, 340.0], [37.3, 340.0], [37.4, 341.0], [37.5, 342.0], [37.6, 342.0], [37.7, 343.0], [37.8, 343.0], [37.9, 343.0], [38.0, 344.0], [38.1, 344.0], [38.2, 344.0], [38.3, 345.0], [38.4, 345.0], [38.5, 345.0], [38.6, 346.0], [38.7, 346.0], [38.8, 347.0], [38.9, 347.0], [39.0, 347.0], [39.1, 347.0], [39.2, 348.0], [39.3, 348.0], [39.4, 348.0], [39.5, 349.0], [39.6, 349.0], [39.7, 350.0], [39.8, 350.0], [39.9, 350.0], [40.0, 351.0], [40.1, 351.0], [40.2, 352.0], [40.3, 353.0], [40.4, 353.0], [40.5, 354.0], [40.6, 354.0], [40.7, 355.0], [40.8, 356.0], [40.9, 356.0], [41.0, 357.0], [41.1, 357.0], [41.2, 358.0], [41.3, 358.0], [41.4, 359.0], [41.5, 359.0], [41.6, 360.0], [41.7, 361.0], [41.8, 361.0], [41.9, 362.0], [42.0, 362.0], [42.1, 363.0], [42.2, 364.0], [42.3, 365.0], [42.4, 366.0], [42.5, 367.0], [42.6, 369.0], [42.7, 370.0], [42.8, 371.0], [42.9, 372.0], [43.0, 373.0], [43.1, 373.0], [43.2, 374.0], [43.3, 375.0], [43.4, 375.0], [43.5, 376.0], [43.6, 376.0], [43.7, 377.0], [43.8, 378.0], [43.9, 379.0], [44.0, 379.0], [44.1, 380.0], [44.2, 380.0], [44.3, 381.0], [44.4, 381.0], [44.5, 381.0], [44.6, 382.0], [44.7, 382.0], [44.8, 383.0], [44.9, 383.0], [45.0, 383.0], [45.1, 384.0], [45.2, 384.0], [45.3, 385.0], [45.4, 385.0], [45.5, 386.0], [45.6, 386.0], [45.7, 386.0], [45.8, 387.0], [45.9, 387.0], [46.0, 388.0], [46.1, 388.0], [46.2, 389.0], [46.3, 390.0], [46.4, 390.0], [46.5, 391.0], [46.6, 391.0], [46.7, 392.0], [46.8, 392.0], [46.9, 393.0], [47.0, 393.0], [47.1, 394.0], [47.2, 394.0], [47.3, 395.0], [47.4, 395.0], [47.5, 395.0], [47.6, 396.0], [47.7, 397.0], [47.8, 397.0], [47.9, 397.0], [48.0, 398.0], [48.1, 399.0], [48.2, 399.0], [48.3, 400.0], [48.4, 401.0], [48.5, 402.0], [48.6, 403.0], [48.7, 404.0], [48.8, 404.0], [48.9, 405.0], [49.0, 405.0], [49.1, 406.0], [49.2, 406.0], [49.3, 407.0], [49.4, 407.0], [49.5, 408.0], [49.6, 408.0], [49.7, 409.0], [49.8, 409.0], [49.9, 410.0], [50.0, 411.0], [50.1, 412.0], [50.2, 413.0], [50.3, 414.0], [50.4, 414.0], [50.5, 415.0], [50.6, 416.0], [50.7, 417.0], [50.8, 418.0], [50.9, 419.0], [51.0, 420.0], [51.1, 421.0], [51.2, 422.0], [51.3, 423.0], [51.4, 424.0], [51.5, 425.0], [51.6, 426.0], [51.7, 427.0], [51.8, 428.0], [51.9, 428.0], [52.0, 429.0], [52.1, 430.0], [52.2, 430.0], [52.3, 431.0], [52.4, 432.0], [52.5, 432.0], [52.6, 433.0], [52.7, 433.0], [52.8, 434.0], [52.9, 435.0], [53.0, 436.0], [53.1, 436.0], [53.2, 437.0], [53.3, 438.0], [53.4, 438.0], [53.5, 439.0], [53.6, 440.0], [53.7, 442.0], [53.8, 443.0], [53.9, 446.0], [54.0, 450.0], [54.1, 451.0], [54.2, 452.0], [54.3, 453.0], [54.4, 454.0], [54.5, 455.0], [54.6, 456.0], [54.7, 457.0], [54.8, 458.0], [54.9, 459.0], [55.0, 460.0], [55.1, 461.0], [55.2, 461.0], [55.3, 462.0], [55.4, 463.0], [55.5, 463.0], [55.6, 464.0], [55.7, 465.0], [55.8, 466.0], [55.9, 467.0], [56.0, 468.0], [56.1, 470.0], [56.2, 471.0], [56.3, 472.0], [56.4, 473.0], [56.5, 474.0], [56.6, 474.0], [56.7, 475.0], [56.8, 475.0], [56.9, 476.0], [57.0, 476.0], [57.1, 477.0], [57.2, 477.0], [57.3, 477.0], [57.4, 478.0], [57.5, 478.0], [57.6, 478.0], [57.7, 479.0], [57.8, 479.0], [57.9, 479.0], [58.0, 480.0], [58.1, 480.0], [58.2, 480.0], [58.3, 481.0], [58.4, 481.0], [58.5, 481.0], [58.6, 481.0], [58.7, 482.0], [58.8, 482.0], [58.9, 482.0], [59.0, 482.0], [59.1, 483.0], [59.2, 483.0], [59.3, 483.0], [59.4, 484.0], [59.5, 484.0], [59.6, 484.0], [59.7, 485.0], [59.8, 485.0], [59.9, 485.0], [60.0, 486.0], [60.1, 486.0], [60.2, 486.0], [60.3, 487.0], [60.4, 487.0], [60.5, 487.0], [60.6, 488.0], [60.7, 488.0], [60.8, 488.0], [60.9, 489.0], [61.0, 489.0], [61.1, 490.0], [61.2, 490.0], [61.3, 491.0], [61.4, 491.0], [61.5, 492.0], [61.6, 492.0], [61.7, 493.0], [61.8, 494.0], [61.9, 495.0], [62.0, 496.0], [62.1, 497.0], [62.2, 499.0], [62.3, 501.0], [62.4, 504.0], [62.5, 506.0], [62.6, 509.0], [62.7, 512.0], [62.8, 515.0], [62.9, 525.0], [63.0, 537.0], [63.1, 540.0], [63.2, 542.0], [63.3, 545.0], [63.4, 548.0], [63.5, 550.0], [63.6, 551.0], [63.7, 552.0], [63.8, 553.0], [63.9, 553.0], [64.0, 554.0], [64.1, 555.0], [64.2, 555.0], [64.3, 556.0], [64.4, 556.0], [64.5, 557.0], [64.6, 557.0], [64.7, 558.0], [64.8, 558.0], [64.9, 559.0], [65.0, 559.0], [65.1, 560.0], [65.2, 560.0], [65.3, 561.0], [65.4, 561.0], [65.5, 562.0], [65.6, 562.0], [65.7, 562.0], [65.8, 563.0], [65.9, 563.0], [66.0, 564.0], [66.1, 565.0], [66.2, 565.0], [66.3, 566.0], [66.4, 567.0], [66.5, 568.0], [66.6, 570.0], [66.7, 572.0], [66.8, 573.0], [66.9, 575.0], [67.0, 576.0], [67.1, 577.0], [67.2, 578.0], [67.3, 580.0], [67.4, 581.0], [67.5, 582.0], [67.6, 583.0], [67.7, 583.0], [67.8, 584.0], [67.9, 584.0], [68.0, 584.0], [68.1, 585.0], [68.2, 585.0], [68.3, 586.0], [68.4, 586.0], [68.5, 587.0], [68.6, 587.0], [68.7, 588.0], [68.8, 588.0], [68.9, 588.0], [69.0, 589.0], [69.1, 589.0], [69.2, 590.0], [69.3, 590.0], [69.4, 590.0], [69.5, 591.0], [69.6, 592.0], [69.7, 592.0], [69.8, 593.0], [69.9, 593.0], [70.0, 594.0], [70.1, 595.0], [70.2, 595.0], [70.3, 596.0], [70.4, 596.0], [70.5, 597.0], [70.6, 598.0], [70.7, 598.0], [70.8, 599.0], [70.9, 599.0], [71.0, 600.0], [71.1, 600.0], [71.2, 601.0], [71.3, 602.0], [71.4, 602.0], [71.5, 603.0], [71.6, 604.0], [71.7, 604.0], [71.8, 605.0], [71.9, 606.0], [72.0, 607.0], [72.1, 608.0], [72.2, 609.0], [72.3, 609.0], [72.4, 610.0], [72.5, 610.0], [72.6, 611.0], [72.7, 611.0], [72.8, 612.0], [72.9, 612.0], [73.0, 613.0], [73.1, 613.0], [73.2, 614.0], [73.3, 614.0], [73.4, 615.0], [73.5, 615.0], [73.6, 615.0], [73.7, 616.0], [73.8, 616.0], [73.9, 616.0], [74.0, 617.0], [74.1, 617.0], [74.2, 617.0], [74.3, 617.0], [74.4, 618.0], [74.5, 618.0], [74.6, 618.0], [74.7, 619.0], [74.8, 619.0], [74.9, 619.0], [75.0, 619.0], [75.1, 620.0], [75.2, 620.0], [75.3, 620.0], [75.4, 620.0], [75.5, 621.0], [75.6, 621.0], [75.7, 621.0], [75.8, 622.0], [75.9, 622.0], [76.0, 622.0], [76.1, 623.0], [76.2, 623.0], [76.3, 624.0], [76.4, 625.0], [76.5, 625.0], [76.6, 626.0], [76.7, 626.0], [76.8, 627.0], [76.9, 627.0], [77.0, 628.0], [77.1, 629.0], [77.2, 629.0], [77.3, 630.0], [77.4, 630.0], [77.5, 631.0], [77.6, 631.0], [77.7, 632.0], [77.8, 633.0], [77.9, 633.0], [78.0, 634.0], [78.1, 634.0], [78.2, 635.0], [78.3, 635.0], [78.4, 636.0], [78.5, 636.0], [78.6, 637.0], [78.7, 637.0], [78.8, 638.0], [78.9, 638.0], [79.0, 639.0], [79.1, 639.0], [79.2, 640.0], [79.3, 641.0], [79.4, 642.0], [79.5, 643.0], [79.6, 643.0], [79.7, 644.0], [79.8, 644.0], [79.9, 645.0], [80.0, 645.0], [80.1, 646.0], [80.2, 647.0], [80.3, 648.0], [80.4, 648.0], [80.5, 649.0], [80.6, 650.0], [80.7, 650.0], [80.8, 651.0], [80.9, 651.0], [81.0, 651.0], [81.1, 652.0], [81.2, 652.0], [81.3, 653.0], [81.4, 653.0], [81.5, 653.0], [81.6, 654.0], [81.7, 654.0], [81.8, 655.0], [81.9, 655.0], [82.0, 655.0], [82.1, 656.0], [82.2, 656.0], [82.3, 657.0], [82.4, 657.0], [82.5, 657.0], [82.6, 658.0], [82.7, 658.0], [82.8, 659.0], [82.9, 659.0], [83.0, 659.0], [83.1, 660.0], [83.2, 661.0], [83.3, 661.0], [83.4, 662.0], [83.5, 662.0], [83.6, 663.0], [83.7, 664.0], [83.8, 665.0], [83.9, 665.0], [84.0, 666.0], [84.1, 666.0], [84.2, 667.0], [84.3, 667.0], [84.4, 667.0], [84.5, 668.0], [84.6, 668.0], [84.7, 668.0], [84.8, 668.0], [84.9, 669.0], [85.0, 669.0], [85.1, 669.0], [85.2, 670.0], [85.3, 670.0], [85.4, 670.0], [85.5, 670.0], [85.6, 671.0], [85.7, 671.0], [85.8, 671.0], [85.9, 671.0], [86.0, 672.0], [86.1, 672.0], [86.2, 672.0], [86.3, 673.0], [86.4, 673.0], [86.5, 673.0], [86.6, 674.0], [86.7, 674.0], [86.8, 675.0], [86.9, 675.0], [87.0, 675.0], [87.1, 676.0], [87.2, 676.0], [87.3, 677.0], [87.4, 677.0], [87.5, 678.0], [87.6, 678.0], [87.7, 678.0], [87.8, 679.0], [87.9, 680.0], [88.0, 680.0], [88.1, 681.0], [88.2, 681.0], [88.3, 682.0], [88.4, 682.0], [88.5, 683.0], [88.6, 683.0], [88.7, 683.0], [88.8, 684.0], [88.9, 684.0], [89.0, 684.0], [89.1, 685.0], [89.2, 685.0], [89.3, 686.0], [89.4, 686.0], [89.5, 686.0], [89.6, 686.0], [89.7, 687.0], [89.8, 687.0], [89.9, 687.0], [90.0, 688.0], [90.1, 688.0], [90.2, 688.0], [90.3, 688.0], [90.4, 689.0], [90.5, 689.0], [90.6, 690.0], [90.7, 690.0], [90.8, 690.0], [90.9, 690.0], [91.0, 691.0], [91.1, 691.0], [91.2, 691.0], [91.3, 692.0], [91.4, 692.0], [91.5, 692.0], [91.6, 693.0], [91.7, 693.0], [91.8, 693.0], [91.9, 693.0], [92.0, 694.0], [92.1, 694.0], [92.2, 694.0], [92.3, 695.0], [92.4, 695.0], [92.5, 695.0], [92.6, 695.0], [92.7, 696.0], [92.8, 696.0], [92.9, 696.0], [93.0, 696.0], [93.1, 696.0], [93.2, 697.0], [93.3, 697.0], [93.4, 697.0], [93.5, 697.0], [93.6, 697.0], [93.7, 697.0], [93.8, 698.0], [93.9, 698.0], [94.0, 698.0], [94.1, 698.0], [94.2, 698.0], [94.3, 698.0], [94.4, 698.0], [94.5, 698.0], [94.6, 699.0], [94.7, 699.0], [94.8, 699.0], [94.9, 699.0], [95.0, 699.0], [95.1, 699.0], [95.2, 699.0], [95.3, 700.0], [95.4, 700.0], [95.5, 700.0], [95.6, 700.0], [95.7, 700.0], [95.8, 700.0], [95.9, 700.0], [96.0, 700.0], [96.1, 701.0], [96.2, 701.0], [96.3, 701.0], [96.4, 701.0], [96.5, 701.0], [96.6, 701.0], [96.7, 702.0], [96.8, 702.0], [96.9, 702.0], [97.0, 702.0], [97.1, 702.0], [97.2, 702.0], [97.3, 703.0], [97.4, 703.0], [97.5, 703.0], [97.6, 703.0], [97.7, 703.0], [97.8, 704.0], [97.9, 704.0], [98.0, 704.0], [98.1, 705.0], [98.2, 705.0], [98.3, 705.0], [98.4, 705.0], [98.5, 706.0], [98.6, 706.0], [98.7, 706.0], [98.8, 707.0], [98.9, 707.0], [99.0, 708.0], [99.1, 708.0], [99.2, 709.0], [99.3, 710.0], [99.4, 711.0], [99.5, 714.0], [99.6, 727.0], [99.7, 736.0], [99.8, 743.0], [99.9, 765.0], [100.0, 788.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11791.0, "series": [{"data": [[0.0, 1.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[200.0, 1.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[100.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 4009.0], [300.0, 6786.0], [600.0, 11791.0], [700.0, 2284.0], [100.0, 5990.0], [200.0, 6588.0], [400.0, 6765.0], [500.0, 4234.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 479.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 29685.0, "series": [{"data": [[0.0, 29685.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 18286.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 479.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68166362E12, "maxY": 541.4498614592992, "series": [{"data": [[1.68166362E12, 1.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166362E12, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166368E12, 541.4498614592992], [1.68166362E12, 262.3601189582148]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166368E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 677.8223326236144, "series": [{"data": [[1.0, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "Imprimir token_response-Aggregated", "isController": false}, {"data": [[1.0, 203.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.0, 203.0]], "isOverall": false, "label": "Signup-Aggregated", "isController": false}, {"data": [[1.0, 170.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.0, 170.0]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 467.6666666666667], [3.0, 297.66666666666663], [4.0, 246.5], [5.0, 213.2], [6.0, 212.4], [7.0, 166.0], [8.0, 168.5], [9.0, 179.14285714285714], [10.0, 139.08333333333334], [11.0, 170.57142857142856], [12.0, 144.23076923076923], [13.0, 132.57142857142858], [14.0, 138.0], [15.0, 139.14285714285717], [16.0, 133.29411764705884], [17.0, 126.18749999999999], [18.0, 119.26315789473685], [19.0, 90.33333333333333], [20.0, 138.08695652173913], [21.0, 115.52380952380953], [22.0, 114.54545454545455], [23.0, 116.86956521739131], [24.0, 114.88], [25.0, 107.89285714285717], [26.0, 126.49999999999999], [27.0, 109.0], [28.0, 110.0], [29.0, 107.41379310344828], [30.0, 105.15151515151516], [31.0, 106.67741935483872], [32.0, 105.25], [33.0, 87.06250000000001], [34.0, 118.35135135135137], [35.0, 84.78787878787877], [36.0, 118.74358974358974], [37.0, 87.66666666666666], [38.0, 116.87179487179486], [39.0, 101.15384615384616], [40.0, 101.09756097560977], [41.0, 101.17073170731709], [42.0, 99.60465116279072], [43.0, 99.76744186046514], [44.0, 99.27272727272725], [45.0, 98.40000000000003], [46.0, 99.56521739130433], [47.0, 98.48936170212764], [48.0, 96.61111111111114], [49.0, 97.9795918367347], [50.0, 96.51923076923079], [51.0, 96.29090909090912], [52.0, 97.24528301886797], [53.0, 96.75925925925928], [54.0, 96.36363636363637], [55.0, 86.44067796610169], [56.0, 107.14285714285715], [57.0, 86.43859649122808], [58.0, 105.62295081967211], [59.0, 95.89999999999999], [60.0, 95.44444444444441], [61.0, 96.7931034482759], [62.0, 95.86567164179105], [63.0, 86.32258064516131], [64.0, 105.20895522388057], [65.0, 85.8484848484848], [66.0, 102.3], [67.0, 93.82608695652172], [68.0, 94.82089552238806], [69.0, 87.22222222222221], [70.0, 103.09589041095889], [71.0, 85.82352941176468], [72.0, 102.42105263157895], [73.0, 98.05479452054796], [74.0, 95.1111111111111], [75.0, 96.63291139240509], [76.0, 94.91999999999997], [77.0, 99.24000000000001], [78.0, 99.36986301369865], [79.0, 102.97101449275358], [80.0, 101.12857142857143], [81.0, 112.61333333333333], [82.0, 104.9594594594595], [83.0, 98.52631578947368], [84.0, 116.94520547945206], [85.0, 107.11688311688309], [86.0, 106.20253164556965], [87.0, 106.44594594594598], [88.0, 110.97333333333333], [89.0, 111.45945945945945], [90.0, 104.02531645569621], [91.0, 118.46249999999999], [92.0, 109.07894736842105], [93.0, 108.30864197530863], [94.0, 111.89473684210527], [95.0, 114.07692307692308], [96.0, 120.22222222222224], [97.0, 126.28767123287669], [98.0, 126.62162162162163], [99.0, 129.5352112676056], [100.0, 129.76315789473685], [101.0, 123.24675324675327], [102.0, 126.42253521126761], [103.0, 137.89230769230764], [104.0, 141.01408450704227], [105.0, 137.8026315789473], [106.0, 132.76712328767124], [107.0, 125.60273972602738], [108.0, 142.9102564102564], [109.0, 132.33766233766232], [110.0, 133.94594594594597], [111.0, 136.14864864864862], [112.0, 136.9625], [113.0, 123.49397590361447], [114.0, 138.5822784810127], [115.0, 138.5972222222222], [116.0, 137.03529411764706], [117.0, 136.28571428571433], [118.0, 137.33333333333337], [119.0, 131.8192771084337], [120.0, 149.77333333333337], [121.0, 147.11111111111111], [122.0, 151.89473684210532], [123.0, 148.60493827160502], [124.0, 138.5205479452055], [125.0, 159.7027027027027], [126.0, 157.24000000000004], [127.0, 153.95121951219514], [128.0, 148.40789473684208], [129.0, 146.64285714285714], [130.0, 146.37333333333328], [131.0, 162.62500000000006], [132.0, 151.21518987341773], [133.0, 151.45783132530116], [134.0, 153.82051282051285], [135.0, 158.38961038961043], [136.0, 164.79729729729726], [137.0, 170.09859154929572], [138.0, 172.0799999999999], [139.0, 167.51898734177217], [140.0, 159.2432432432432], [141.0, 174.34210526315786], [142.0, 176.07999999999996], [143.0, 180.64383561643834], [144.0, 176.19736842105266], [145.0, 177.14473684210535], [146.0, 177.25641025641033], [147.0, 176.58108108108112], [148.0, 180.50000000000003], [149.0, 182.92105263157896], [150.0, 180.78947368421055], [151.0, 178.25], [152.0, 174.9512195121951], [153.0, 171.82500000000002], [154.0, 176.75], [155.0, 174.2625], [156.0, 188.1095890410959], [157.0, 189.6666666666667], [158.0, 193.79999999999998], [159.0, 202.88405797101456], [160.0, 206.30136986301366], [161.0, 192.25], [162.0, 201.038961038961], [163.0, 199.36486486486487], [164.0, 195.43243243243248], [165.0, 210.47297297297297], [166.0, 204.74647887323943], [167.0, 209.6571428571428], [168.0, 213.16666666666663], [169.0, 215.89552238805973], [170.0, 218.95652173913047], [171.0, 223.21126760563382], [172.0, 230.64615384615385], [173.0, 233.6388888888889], [174.0, 227.95890410958904], [175.0, 220.05555555555557], [176.0, 221.69014084507037], [177.0, 217.02816901408457], [178.0, 230.7397260273972], [179.0, 222.63513513513507], [180.0, 219.33750000000003], [181.0, 213.53424657534242], [182.0, 217.5342465753425], [183.0, 225.18309859154937], [184.0, 229.35135135135135], [185.0, 230.94594594594594], [186.0, 227.53333333333345], [187.0, 223.25316455696205], [188.0, 221.88311688311686], [189.0, 224.86842105263148], [190.0, 230.84285714285716], [191.0, 234.54054054054058], [192.0, 233.3846153846154], [193.0, 228.3943661971831], [194.0, 241.94444444444446], [195.0, 243.84285714285716], [196.0, 238.0361445783132], [197.0, 234.36842105263162], [198.0, 227.0666666666667], [199.0, 242.06849315068493], [200.0, 238.6363636363637], [201.0, 238.09859154929575], [202.0, 254.04054054054052], [203.0, 252.5], [204.0, 249.108108108108], [205.0, 249.21428571428578], [206.0, 254.57971014492753], [207.0, 258.6025641025641], [208.0, 252.66666666666674], [209.0, 246.09090909090907], [210.0, 245.71999999999994], [211.0, 249.45205479452056], [212.0, 252.84], [213.0, 256.4594594594595], [214.0, 258.1298701298702], [215.0, 262.77611940298493], [216.0, 265.6527777777779], [217.0, 270.29333333333335], [218.0, 275.38235294117646], [219.0, 275.0886075949369], [220.0, 272.0142857142857], [221.0, 272.18309859154937], [222.0, 272.8933333333333], [223.0, 273.7105263157895], [224.0, 268.8059701492537], [225.0, 282.3098591549297], [226.0, 280.935064935065], [227.0, 284.6571428571428], [228.0, 282.3424657534247], [229.0, 283.01351351351354], [230.0, 285.89999999999986], [231.0, 285.47368421052624], [232.0, 283.3055555555556], [233.0, 276.3076923076923], [234.0, 273.87499999999983], [235.0, 291.4025974025973], [236.0, 289.18181818181836], [237.0, 290.9367088607596], [238.0, 292.76056338028184], [239.0, 293.89873417721526], [240.0, 299.01639344262304], [241.0, 304.2142857142857], [242.0, 308.8714285714285], [243.0, 306.44871794871784], [244.0, 297.9714285714286], [245.0, 300.16883116883116], [246.0, 290.2658227848102], [247.0, 288.3116883116883], [248.0, 286.5375000000001], [249.0, 292.7972972972971], [250.0, 299.19444444444434], [251.0, 302.6712328767124], [252.0, 308.2027027027026], [253.0, 309.4246575342466], [254.0, 309.6575342465754], [255.0, 303.4197530864198], [257.0, 301.2207792207792], [256.0, 294.8815789473685], [258.0, 298.6666666666667], [259.0, 305.36000000000007], [260.0, 310.2533333333333], [261.0, 316.4999999999999], [262.0, 320.8], [263.0, 319.64935064935077], [264.0, 313.97468354430384], [270.0, 312.85714285714283], [271.0, 322.0897435897436], [268.0, 307.38157894736844], [269.0, 320.4605263157894], [265.0, 297.543209876543], [266.0, 305.5263157894737], [267.0, 305.1184210526316], [273.0, 330.7058823529412], [272.0, 319.6142857142857], [274.0, 341.63076923076915], [275.0, 354.62686567164184], [276.0, 366.59420289855075], [277.0, 365.94202898550714], [278.0, 362.6571428571429], [279.0, 353.3200000000001], [280.0, 352.9594594594594], [286.0, 362.3913043478261], [287.0, 367.9014084507041], [284.0, 346.95384615384614], [285.0, 363.39726027397256], [281.0, 346.6805555555556], [282.0, 342.21621621621625], [283.0, 344.42253521126764], [289.0, 364.94736842105266], [288.0, 360.9178082191781], [290.0, 358.5], [291.0, 349.94736842105254], [292.0, 354.98666666666674], [293.0, 349.24675324675314], [294.0, 347.857142857143], [295.0, 350.51470588235304], [296.0, 352.945945945946], [302.0, 348.175], [303.0, 352.20253164556965], [300.0, 352.5263157894736], [301.0, 353.99999999999994], [297.0, 353.4823529411765], [298.0, 355.38888888888874], [299.0, 356.5], [305.0, 354.3205128205129], [304.0, 351.7887323943661], [306.0, 361.41666666666674], [307.0, 368.08450704225345], [308.0, 378.34285714285716], [309.0, 382.49295774647896], [310.0, 387.4084507042255], [311.0, 387.72463768115944], [312.0, 397.26388888888886], [318.0, 381.01369863013684], [319.0, 382.14864864864865], [316.0, 387.7179487179488], [317.0, 382.5526315789474], [313.0, 395.1857142857143], [314.0, 389.2027027027027], [315.0, 395.16901408450707], [321.0, 378.0704225352114], [320.0, 378.0375000000001], [322.0, 374.0229885057471], [323.0, 366.07894736842104], [324.0, 369.375], [325.0, 363.6125], [326.0, 367.26666666666654], [327.0, 376.6428571428572], [328.0, 384.9078947368422], [334.0, 393.56164383561634], [335.0, 390.8375], [332.0, 398.1081081081081], [333.0, 398.8101265822785], [329.0, 393.77777777777777], [330.0, 396.33783783783787], [331.0, 406.27027027027026], [337.0, 387.01315789473676], [336.0, 388.3125], [338.0, 385.31249999999994], [339.0, 385.37179487179486], [340.0, 382.1410256410255], [341.0, 394.3287671232879], [342.0, 394.21333333333337], [343.0, 400.78082191780817], [344.0, 402.6533333333333], [350.0, 395.83116883116884], [351.0, 403.84146341463406], [348.0, 396.6329113924052], [349.0, 400.47435897435895], [345.0, 412.16666666666663], [346.0, 405.5696202531646], [347.0, 403.3076923076922], [353.0, 408.61842105263156], [352.0, 404.05797101449275], [354.0, 408.9459459459459], [355.0, 417.5875], [356.0, 416.448717948718], [357.0, 407.84415584415586], [358.0, 414.08860759493683], [359.0, 412.2894736842106], [360.0, 411.2307692307693], [366.0, 427.5714285714285], [367.0, 432.5810810810809], [364.0, 419.888888888889], [365.0, 423.9746835443039], [361.0, 414.2533333333333], [362.0, 418.0641025641025], [363.0, 418.86075949367086], [369.0, 440.16], [368.0, 438.9210526315788], [370.0, 442.5694444444444], [371.0, 437.2976190476191], [372.0, 433.44736842105266], [373.0, 423.02469135802477], [374.0, 427.67105263157896], [375.0, 421.88157894736844], [376.0, 433.52], [382.0, 434.8589743589743], [383.0, 427.6144578313254], [380.0, 444.84337349397595], [381.0, 437.0133333333335], [377.0, 437.1973684210526], [378.0, 438.55555555555554], [379.0, 449.9873417721518], [385.0, 441.2027027027027], [384.0, 437.30555555555554], [386.0, 451.6617647058823], [387.0, 463.98591549295764], [388.0, 474.8285714285715], [389.0, 483.34782608695656], [390.0, 484.4473684210526], [391.0, 485.7671232876712], [392.0, 477.4320987654321], [398.0, 476.32000000000005], [399.0, 479.6857142857144], [396.0, 456.78378378378386], [397.0, 457.51470588235287], [393.0, 465.9090909090909], [394.0, 460.81818181818187], [395.0, 457.17105263157913], [401.0, 495.39473684210543], [400.0, 481.7042253521127], [402.0, 494.445945945946], [403.0, 488.6582278481012], [404.0, 482.85333333333347], [405.0, 480.7246376811595], [406.0, 487.6666666666666], [407.0, 479.68918918918934], [408.0, 483.4074074074074], [414.0, 488.8588235294117], [415.0, 480.4487179487179], [412.0, 483.58333333333326], [413.0, 486.09459459459464], [409.0, 485.8591549295775], [410.0, 486.59999999999985], [411.0, 489.94871794871784], [417.0, 471.11249999999995], [416.0, 468.6666666666667], [418.0, 464.01219512195127], [419.0, 457.6233766233766], [420.0, 461.8461538461539], [421.0, 475.10958904109594], [422.0, 481.4266666666665], [423.0, 490.5333333333334], [424.0, 494.5949367088607], [430.0, 501.6666666666666], [431.0, 501.74666666666656], [428.0, 484.9726027397261], [429.0, 500.90625], [425.0, 496.94871794871784], [426.0, 491.5384615384615], [427.0, 490.8987341772152], [433.0, 513.3571428571429], [432.0, 515.236111111111], [434.0, 502.0705882352943], [435.0, 482.8860759493672], [436.0, 489.3246753246754], [437.0, 482.5125], [438.0, 482.17283950617303], [439.0, 484.3157894736843], [440.0, 494.7894736842104], [446.0, 565.4393939393941], [447.0, 580.3088235294117], [444.0, 530.1129032258068], [445.0, 551.0793650793653], [441.0, 493.4470588235295], [442.0, 495.94871794871796], [443.0, 512.0909090909092], [449.0, 598.7222222222223], [448.0, 596.6400000000002], [450.0, 584.44], [451.0, 569.7285714285714], [452.0, 564.9452054794519], [453.0, 550.5194805194808], [454.0, 542.8243243243246], [455.0, 550.7352941176472], [456.0, 559.6129032258066], [462.0, 616.234375], [463.0, 622.6615384615382], [460.0, 606.6428571428572], [461.0, 612.1014492753625], [457.0, 573.3666666666667], [458.0, 584.6666666666667], [459.0, 594.0597014925372], [465.0, 617.8124999999997], [464.0, 619.3692307692309], [466.0, 621.0333333333332], [467.0, 635.323076923077], [468.0, 639.2121212121212], [469.0, 593.8142857142858], [470.0, 640.0833333333335], [471.0, 589.8472222222225], [472.0, 627.3544303797471], [478.0, 546.5068493150685], [479.0, 605.7123287671233], [476.0, 590.9729729729728], [477.0, 550.7820512820514], [473.0, 615.8115942028984], [474.0, 555.4133333333334], [475.0, 549.2266666666667], [481.0, 593.3424657534247], [480.0, 548.0714285714287], [482.0, 537.3902439024391], [483.0, 580.0617283950617], [484.0, 524.843373493976], [485.0, 566.9078947368419], [486.0, 516.6296296296298], [487.0, 564.1756756756758], [488.0, 518.8352941176469], [494.0, 564.2179487179484], [495.0, 502.9670329670329], [492.0, 565.9358974358973], [493.0, 530.602409638554], [489.0, 530.5432098765433], [490.0, 561.2567567567568], [491.0, 532.329268292683], [497.0, 525.536585365854], [496.0, 561.230769230769], [498.0, 563.8181818181819], [499.0, 529.1666666666666], [500.0, 499.641975308642], [501.0, 523.1772151898736], [502.0, 591.6933333333336], [503.0, 576.2531645569619], [504.0, 608.3378378378379], [510.0, 591.8250000000004], [511.0, 551.5121951219512], [508.0, 591.3461538461537], [509.0, 529.4470588235297], [505.0, 574.1282051282052], [506.0, 613.6052631578947], [507.0, 558.5060240963858], [515.0, 579.227848101266], [512.0, 589.2608695652176], [526.0, 582.6547619047619], [527.0, 608.8780487804878], [524.0, 554.4597701149426], [525.0, 615.8219178082193], [522.0, 551.0731707317071], [523.0, 626.320512820513], [513.0, 566.6133333333331], [514.0, 606.2205882352943], [516.0, 578.7432432432433], [517.0, 634.873417721519], [518.0, 589.9473684210526], [519.0, 644.8115942028985], [528.0, 563.4698795180725], [542.0, 623.9871794871792], [543.0, 581.0641025641024], [540.0, 640.9466666666666], [541.0, 591.3595505617978], [538.0, 635.2000000000002], [539.0, 587.5679012345681], [536.0, 631.6233766233768], [537.0, 582.0361445783134], [529.0, 593.9746835443036], [530.0, 539.0786516853935], [531.0, 594.6052631578947], [532.0, 572.9012345679012], [533.0, 599.4054054054052], [534.0, 576.7564102564104], [535.0, 581.8000000000002], [520.0, 591.2911392405064], [521.0, 634.9367088607597], [547.0, 583.2738095238096], [544.0, 621.3249999999998], [558.0, 613.8717948717949], [559.0, 635.9529411764706], [556.0, 601.168674698795], [557.0, 617.2112676056337], [554.0, 634.2631578947369], [555.0, 610.2068965517241], [545.0, 582.0361445783129], [546.0, 621.4868421052631], [548.0, 620.6543209876543], [549.0, 584.0952380952381], [550.0, 620.3733333333334], [551.0, 543.5833333333333], [560.0, 653.4929577464789], [568.0, 677.8223326236144], [561.0, 671.4743589743589], [562.0, 624.1333333333336], [563.0, 669.8285714285716], [564.0, 615.8192771084338], [565.0, 666.703703703704], [566.0, 579.8478260869565], [567.0, 664.5194805194807], [552.0, 583.4567901234569], [553.0, 619.4625000000002]], "isOverall": false, "label": "Upload de archivo", "isController": false}, {"data": [[349.6811773690843, 415.5207133568622]], "isOverall": false, "label": "Upload de archivo-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 568.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 117572.06666666667, "minX": 1.68166362E12, "maxY": 278379.63333333336, "series": [{"data": [[1.68166368E12, 136339.06666666668], [1.68166362E12, 278379.63333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68166368E12, 117572.06666666667], [1.68166362E12, 264582.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166368E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68166362E12, "maxY": 642.1683599419408, "series": [{"data": [[1.68166362E12, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166362E12, 203.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166362E12, 170.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166368E12, 642.1683599419408], [1.68166362E12, 312.31770254438277]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166368E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68166362E12, "maxY": 640.1727800501369, "series": [{"data": [[1.68166362E12, 0.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166362E12, 199.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166362E12, 170.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166368E12, 640.1727800501369], [1.68166362E12, 312.1299828772267]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166368E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68166362E12, "maxY": 105.0, "series": [{"data": [[1.68166362E12, 0.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166362E12, 105.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166362E12, 82.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166368E12, 2.995118089457727], [1.68166362E12, 1.6486527081017646]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166368E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68166362E12, "maxY": 788.0, "series": [{"data": [[1.68166368E12, 788.0], [1.68166362E12, 722.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68166368E12, 549.0], [1.68166362E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68166368E12, 702.0], [1.68166362E12, 575.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68166368E12, 735.0], [1.68166362E12, 637.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68166368E12, 668.0], [1.68166362E12, 405.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68166368E12, 705.0], [1.68166362E12, 604.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166368E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 60.5, "minX": 3.0, "maxY": 700.0, "series": [{"data": [[594.0, 84.0], [595.0, 688.0], [729.0, 85.0], [727.0, 610.0], [3.0, 170.0], [786.0, 345.0], [788.0, 564.0], [831.0, 222.0], [815.0, 88.0], [813.0, 215.0], [814.0, 687.0], [821.0, 278.0], [818.0, 698.0], [817.0, 698.0], [830.0, 428.0], [824.0, 439.5], [825.0, 696.0], [811.0, 383.0], [809.0, 621.0], [822.0, 700.0], [837.0, 115.0], [849.0, 100.0], [850.0, 621.0], [846.0, 126.0], [842.0, 167.0], [854.0, 371.0], [855.0, 426.0], [834.0, 242.0], [847.0, 434.0], [832.0, 465.0], [836.0, 300.0], [853.0, 396.5], [845.0, 348.0], [844.0, 490.0], [859.0, 397.0], [838.0, 668.0], [862.0, 409.0], [867.0, 133.0], [874.0, 146.0], [864.0, 385.0], [878.0, 472.0], [868.0, 487.0], [887.0, 644.0], [882.0, 591.0], [889.0, 636.0], [900.0, 562.0], [903.0, 602.0], [898.0, 628.0], [56.0, 88.0], [194.0, 85.0], [320.0, 85.0], [464.0, 84.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[809.0, 77.0], [822.0, 77.5], [825.0, 75.5], [814.0, 79.0], [824.0, 75.5], [850.0, 76.0], [838.0, 74.0], [853.0, 74.5], [854.0, 60.5], [887.0, 77.0], [882.0, 77.0], [889.0, 76.0], [900.0, 77.0], [903.0, 76.0], [898.0, 77.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 903.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 3.0, "maxY": 700.0, "series": [{"data": [[594.0, 84.0], [595.0, 688.0], [729.0, 85.0], [727.0, 610.0], [3.0, 170.0], [786.0, 345.0], [788.0, 564.0], [831.0, 222.0], [815.0, 88.0], [813.0, 215.0], [814.0, 687.0], [821.0, 278.0], [818.0, 698.0], [817.0, 698.0], [830.0, 428.0], [824.0, 439.5], [825.0, 696.0], [811.0, 383.0], [809.0, 621.0], [822.0, 700.0], [837.0, 115.0], [849.0, 100.0], [850.0, 621.0], [846.0, 126.0], [842.0, 167.0], [854.0, 371.0], [855.0, 426.0], [834.0, 242.0], [847.0, 434.0], [832.0, 465.0], [836.0, 300.0], [853.0, 396.5], [845.0, 348.0], [844.0, 490.0], [859.0, 397.0], [838.0, 668.0], [862.0, 409.0], [867.0, 133.0], [874.0, 146.0], [864.0, 385.0], [878.0, 472.0], [868.0, 487.0], [887.0, 644.0], [882.0, 591.0], [889.0, 636.0], [900.0, 562.0], [903.0, 602.0], [898.0, 628.0], [56.0, 88.0], [194.0, 85.0], [320.0, 85.0], [464.0, 84.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[809.0, 0.0], [822.0, 0.0], [825.0, 0.0], [814.0, 0.0], [824.0, 0.0], [850.0, 0.0], [838.0, 0.0], [853.0, 0.0], [854.0, 0.0], [887.0, 0.0], [882.0, 0.0], [889.0, 0.0], [900.0, 0.0], [903.0, 0.0], [898.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 903.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 244.55, "minX": 1.68166362E12, "maxY": 562.95, "series": [{"data": [[1.68166368E12, 244.55], [1.68166362E12, 562.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166368E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.68166362E12, "maxY": 553.55, "series": [{"data": [[1.68166368E12, 245.96666666666667], [1.68166362E12, 553.55]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.68166368E12, 6.583333333333333], [1.68166362E12, 1.3166666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.68166368E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.68166368E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68166362E12, "maxY": 553.5, "series": [{"data": [[1.68166362E12, 0.016666666666666666]], "isOverall": false, "label": "Imprimir token_response-success", "isController": false}, {"data": [[1.68166362E12, 0.016666666666666666]], "isOverall": false, "label": "Signup-success", "isController": false}, {"data": [[1.68166368E12, 6.666666666666667], [1.68166362E12, 1.3166666666666667]], "isOverall": false, "label": "Upload de archivo-failure", "isController": false}, {"data": [[1.68166368E12, 245.96666666666667], [1.68166362E12, 553.5]], "isOverall": false, "label": "Upload de archivo-success", "isController": false}, {"data": [[1.68166362E12, 0.016666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166368E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.68166362E12, "maxY": 553.55, "series": [{"data": [[1.68166368E12, 245.96666666666667], [1.68166362E12, 553.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.68166368E12, 6.666666666666667], [1.68166362E12, 1.3166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.68166368E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

