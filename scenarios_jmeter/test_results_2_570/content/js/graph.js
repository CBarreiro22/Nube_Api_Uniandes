/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 839.0, "series": [{"data": [[0.0, 2.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 2.0], [83.1, 2.0], [83.2, 2.0], [83.3, 2.0], [83.4, 2.0], [83.5, 2.0], [83.6, 2.0], [83.7, 2.0], [83.8, 2.0], [83.9, 2.0], [84.0, 2.0], [84.1, 2.0], [84.2, 2.0], [84.3, 2.0], [84.4, 2.0], [84.5, 2.0], [84.6, 2.0], [84.7, 2.0], [84.8, 2.0], [84.9, 2.0], [85.0, 2.0], [85.1, 2.0], [85.2, 2.0], [85.3, 2.0], [85.4, 2.0], [85.5, 2.0], [85.6, 2.0], [85.7, 2.0], [85.8, 2.0], [85.9, 2.0], [86.0, 2.0], [86.1, 2.0], [86.2, 2.0], [86.3, 2.0], [86.4, 2.0], [86.5, 2.0], [86.6, 2.0], [86.7, 2.0], [86.8, 2.0], [86.9, 2.0], [87.0, 2.0], [87.1, 2.0], [87.2, 2.0], [87.3, 2.0], [87.4, 2.0], [87.5, 2.0], [87.6, 2.0], [87.7, 2.0], [87.8, 2.0], [87.9, 2.0], [88.0, 2.0], [88.1, 2.0], [88.2, 2.0], [88.3, 2.0], [88.4, 2.0], [88.5, 2.0], [88.6, 2.0], [88.7, 2.0], [88.8, 2.0], [88.9, 2.0], [89.0, 2.0], [89.1, 2.0], [89.2, 2.0], [89.3, 2.0], [89.4, 2.0], [89.5, 2.0], [89.6, 2.0], [89.7, 2.0], [89.8, 2.0], [89.9, 2.0], [90.0, 2.0], [90.1, 2.0], [90.2, 2.0], [90.3, 2.0], [90.4, 2.0], [90.5, 2.0], [90.6, 2.0], [90.7, 2.0], [90.8, 2.0], [90.9, 2.0], [91.0, 2.0], [91.1, 2.0], [91.2, 2.0], [91.3, 2.0], [91.4, 2.0], [91.5, 2.0], [91.6, 2.0], [91.7, 2.0], [91.8, 2.0], [91.9, 2.0], [92.0, 2.0], [92.1, 2.0], [92.2, 2.0], [92.3, 2.0], [92.4, 2.0], [92.5, 2.0], [92.6, 2.0], [92.7, 2.0], [92.8, 2.0], [92.9, 2.0], [93.0, 2.0], [93.1, 2.0], [93.2, 2.0], [93.3, 2.0], [93.4, 2.0], [93.5, 2.0], [93.6, 2.0], [93.7, 2.0], [93.8, 2.0], [93.9, 2.0], [94.0, 2.0], [94.1, 2.0], [94.2, 2.0], [94.3, 2.0], [94.4, 2.0], [94.5, 2.0], [94.6, 2.0], [94.7, 2.0], [94.8, 2.0], [94.9, 2.0], [95.0, 2.0], [95.1, 2.0], [95.2, 2.0], [95.3, 2.0], [95.4, 2.0], [95.5, 2.0], [95.6, 2.0], [95.7, 2.0], [95.8, 2.0], [95.9, 2.0], [96.0, 2.0], [96.1, 2.0], [96.2, 2.0], [96.3, 2.0], [96.4, 2.0], [96.5, 2.0], [96.6, 2.0], [96.7, 2.0], [96.8, 2.0], [96.9, 2.0], [97.0, 2.0], [97.1, 2.0], [97.2, 2.0], [97.3, 2.0], [97.4, 2.0], [97.5, 2.0], [97.6, 2.0], [97.7, 2.0], [97.8, 2.0], [97.9, 2.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 2.0], [98.6, 2.0], [98.7, 2.0], [98.8, 2.0], [98.9, 2.0], [99.0, 2.0], [99.1, 2.0], [99.2, 2.0], [99.3, 2.0], [99.4, 2.0], [99.5, 2.0], [99.6, 2.0], [99.7, 2.0], [99.8, 2.0], [99.9, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[0.0, 202.0], [0.1, 202.0], [0.2, 202.0], [0.3, 202.0], [0.4, 202.0], [0.5, 202.0], [0.6, 202.0], [0.7, 202.0], [0.8, 202.0], [0.9, 202.0], [1.0, 202.0], [1.1, 202.0], [1.2, 202.0], [1.3, 202.0], [1.4, 202.0], [1.5, 202.0], [1.6, 202.0], [1.7, 202.0], [1.8, 202.0], [1.9, 202.0], [2.0, 202.0], [2.1, 202.0], [2.2, 202.0], [2.3, 202.0], [2.4, 202.0], [2.5, 202.0], [2.6, 202.0], [2.7, 202.0], [2.8, 202.0], [2.9, 202.0], [3.0, 202.0], [3.1, 202.0], [3.2, 202.0], [3.3, 202.0], [3.4, 202.0], [3.5, 202.0], [3.6, 202.0], [3.7, 202.0], [3.8, 202.0], [3.9, 202.0], [4.0, 202.0], [4.1, 202.0], [4.2, 202.0], [4.3, 202.0], [4.4, 202.0], [4.5, 202.0], [4.6, 202.0], [4.7, 202.0], [4.8, 202.0], [4.9, 202.0], [5.0, 202.0], [5.1, 202.0], [5.2, 202.0], [5.3, 202.0], [5.4, 202.0], [5.5, 202.0], [5.6, 202.0], [5.7, 202.0], [5.8, 202.0], [5.9, 202.0], [6.0, 202.0], [6.1, 202.0], [6.2, 202.0], [6.3, 202.0], [6.4, 202.0], [6.5, 202.0], [6.6, 202.0], [6.7, 202.0], [6.8, 202.0], [6.9, 202.0], [7.0, 202.0], [7.1, 202.0], [7.2, 202.0], [7.3, 202.0], [7.4, 202.0], [7.5, 202.0], [7.6, 202.0], [7.7, 202.0], [7.8, 202.0], [7.9, 202.0], [8.0, 202.0], [8.1, 202.0], [8.2, 202.0], [8.3, 202.0], [8.4, 202.0], [8.5, 202.0], [8.6, 202.0], [8.7, 202.0], [8.8, 202.0], [8.9, 202.0], [9.0, 202.0], [9.1, 202.0], [9.2, 202.0], [9.3, 202.0], [9.4, 202.0], [9.5, 202.0], [9.6, 202.0], [9.7, 202.0], [9.8, 202.0], [9.9, 202.0], [10.0, 202.0], [10.1, 202.0], [10.2, 202.0], [10.3, 202.0], [10.4, 202.0], [10.5, 202.0], [10.6, 202.0], [10.7, 202.0], [10.8, 202.0], [10.9, 202.0], [11.0, 202.0], [11.1, 202.0], [11.2, 202.0], [11.3, 202.0], [11.4, 202.0], [11.5, 202.0], [11.6, 202.0], [11.7, 202.0], [11.8, 202.0], [11.9, 202.0], [12.0, 202.0], [12.1, 202.0], [12.2, 202.0], [12.3, 202.0], [12.4, 202.0], [12.5, 202.0], [12.6, 202.0], [12.7, 202.0], [12.8, 202.0], [12.9, 202.0], [13.0, 202.0], [13.1, 202.0], [13.2, 202.0], [13.3, 202.0], [13.4, 202.0], [13.5, 202.0], [13.6, 202.0], [13.7, 202.0], [13.8, 202.0], [13.9, 202.0], [14.0, 202.0], [14.1, 202.0], [14.2, 202.0], [14.3, 202.0], [14.4, 202.0], [14.5, 202.0], [14.6, 202.0], [14.7, 202.0], [14.8, 202.0], [14.9, 202.0], [15.0, 202.0], [15.1, 202.0], [15.2, 202.0], [15.3, 202.0], [15.4, 202.0], [15.5, 202.0], [15.6, 202.0], [15.7, 202.0], [15.8, 202.0], [15.9, 202.0], [16.0, 202.0], [16.1, 202.0], [16.2, 202.0], [16.3, 202.0], [16.4, 202.0], [16.5, 202.0], [16.6, 202.0], [16.7, 202.0], [16.8, 202.0], [16.9, 202.0], [17.0, 202.0], [17.1, 202.0], [17.2, 202.0], [17.3, 202.0], [17.4, 202.0], [17.5, 202.0], [17.6, 202.0], [17.7, 202.0], [17.8, 202.0], [17.9, 202.0], [18.0, 202.0], [18.1, 202.0], [18.2, 202.0], [18.3, 202.0], [18.4, 202.0], [18.5, 202.0], [18.6, 202.0], [18.7, 202.0], [18.8, 202.0], [18.9, 202.0], [19.0, 202.0], [19.1, 202.0], [19.2, 202.0], [19.3, 202.0], [19.4, 202.0], [19.5, 202.0], [19.6, 202.0], [19.7, 202.0], [19.8, 202.0], [19.9, 202.0], [20.0, 202.0], [20.1, 202.0], [20.2, 202.0], [20.3, 202.0], [20.4, 202.0], [20.5, 202.0], [20.6, 202.0], [20.7, 202.0], [20.8, 202.0], [20.9, 202.0], [21.0, 202.0], [21.1, 202.0], [21.2, 202.0], [21.3, 202.0], [21.4, 202.0], [21.5, 202.0], [21.6, 202.0], [21.7, 202.0], [21.8, 202.0], [21.9, 202.0], [22.0, 202.0], [22.1, 202.0], [22.2, 202.0], [22.3, 202.0], [22.4, 202.0], [22.5, 202.0], [22.6, 202.0], [22.7, 202.0], [22.8, 202.0], [22.9, 202.0], [23.0, 202.0], [23.1, 202.0], [23.2, 202.0], [23.3, 202.0], [23.4, 202.0], [23.5, 202.0], [23.6, 202.0], [23.7, 202.0], [23.8, 202.0], [23.9, 202.0], [24.0, 202.0], [24.1, 202.0], [24.2, 202.0], [24.3, 202.0], [24.4, 202.0], [24.5, 202.0], [24.6, 202.0], [24.7, 202.0], [24.8, 202.0], [24.9, 202.0], [25.0, 202.0], [25.1, 202.0], [25.2, 202.0], [25.3, 202.0], [25.4, 202.0], [25.5, 202.0], [25.6, 202.0], [25.7, 202.0], [25.8, 202.0], [25.9, 202.0], [26.0, 202.0], [26.1, 202.0], [26.2, 202.0], [26.3, 202.0], [26.4, 202.0], [26.5, 202.0], [26.6, 202.0], [26.7, 202.0], [26.8, 202.0], [26.9, 202.0], [27.0, 202.0], [27.1, 202.0], [27.2, 202.0], [27.3, 202.0], [27.4, 202.0], [27.5, 202.0], [27.6, 202.0], [27.7, 202.0], [27.8, 202.0], [27.9, 202.0], [28.0, 202.0], [28.1, 202.0], [28.2, 202.0], [28.3, 202.0], [28.4, 202.0], [28.5, 202.0], [28.6, 202.0], [28.7, 202.0], [28.8, 202.0], [28.9, 202.0], [29.0, 202.0], [29.1, 202.0], [29.2, 202.0], [29.3, 202.0], [29.4, 202.0], [29.5, 202.0], [29.6, 202.0], [29.7, 202.0], [29.8, 202.0], [29.9, 202.0], [30.0, 202.0], [30.1, 202.0], [30.2, 202.0], [30.3, 202.0], [30.4, 202.0], [30.5, 202.0], [30.6, 202.0], [30.7, 202.0], [30.8, 202.0], [30.9, 202.0], [31.0, 202.0], [31.1, 202.0], [31.2, 202.0], [31.3, 202.0], [31.4, 202.0], [31.5, 202.0], [31.6, 202.0], [31.7, 202.0], [31.8, 202.0], [31.9, 202.0], [32.0, 202.0], [32.1, 202.0], [32.2, 202.0], [32.3, 202.0], [32.4, 202.0], [32.5, 202.0], [32.6, 202.0], [32.7, 202.0], [32.8, 202.0], [32.9, 202.0], [33.0, 202.0], [33.1, 202.0], [33.2, 202.0], [33.3, 202.0], [33.4, 202.0], [33.5, 202.0], [33.6, 202.0], [33.7, 202.0], [33.8, 202.0], [33.9, 202.0], [34.0, 202.0], [34.1, 202.0], [34.2, 202.0], [34.3, 202.0], [34.4, 202.0], [34.5, 202.0], [34.6, 202.0], [34.7, 202.0], [34.8, 202.0], [34.9, 202.0], [35.0, 202.0], [35.1, 202.0], [35.2, 202.0], [35.3, 202.0], [35.4, 202.0], [35.5, 202.0], [35.6, 202.0], [35.7, 202.0], [35.8, 202.0], [35.9, 202.0], [36.0, 202.0], [36.1, 202.0], [36.2, 202.0], [36.3, 202.0], [36.4, 202.0], [36.5, 202.0], [36.6, 202.0], [36.7, 202.0], [36.8, 202.0], [36.9, 202.0], [37.0, 202.0], [37.1, 202.0], [37.2, 202.0], [37.3, 202.0], [37.4, 202.0], [37.5, 202.0], [37.6, 202.0], [37.7, 202.0], [37.8, 202.0], [37.9, 202.0], [38.0, 202.0], [38.1, 202.0], [38.2, 202.0], [38.3, 202.0], [38.4, 202.0], [38.5, 202.0], [38.6, 202.0], [38.7, 202.0], [38.8, 202.0], [38.9, 202.0], [39.0, 202.0], [39.1, 202.0], [39.2, 202.0], [39.3, 202.0], [39.4, 202.0], [39.5, 202.0], [39.6, 202.0], [39.7, 202.0], [39.8, 202.0], [39.9, 202.0], [40.0, 202.0], [40.1, 202.0], [40.2, 202.0], [40.3, 202.0], [40.4, 202.0], [40.5, 202.0], [40.6, 202.0], [40.7, 202.0], [40.8, 202.0], [40.9, 202.0], [41.0, 202.0], [41.1, 202.0], [41.2, 202.0], [41.3, 202.0], [41.4, 202.0], [41.5, 202.0], [41.6, 202.0], [41.7, 202.0], [41.8, 202.0], [41.9, 202.0], [42.0, 202.0], [42.1, 202.0], [42.2, 202.0], [42.3, 202.0], [42.4, 202.0], [42.5, 202.0], [42.6, 202.0], [42.7, 202.0], [42.8, 202.0], [42.9, 202.0], [43.0, 202.0], [43.1, 202.0], [43.2, 202.0], [43.3, 202.0], [43.4, 202.0], [43.5, 202.0], [43.6, 202.0], [43.7, 202.0], [43.8, 202.0], [43.9, 202.0], [44.0, 202.0], [44.1, 202.0], [44.2, 202.0], [44.3, 202.0], [44.4, 202.0], [44.5, 202.0], [44.6, 202.0], [44.7, 202.0], [44.8, 202.0], [44.9, 202.0], [45.0, 202.0], [45.1, 202.0], [45.2, 202.0], [45.3, 202.0], [45.4, 202.0], [45.5, 202.0], [45.6, 202.0], [45.7, 202.0], [45.8, 202.0], [45.9, 202.0], [46.0, 202.0], [46.1, 202.0], [46.2, 202.0], [46.3, 202.0], [46.4, 202.0], [46.5, 202.0], [46.6, 202.0], [46.7, 202.0], [46.8, 202.0], [46.9, 202.0], [47.0, 202.0], [47.1, 202.0], [47.2, 202.0], [47.3, 202.0], [47.4, 202.0], [47.5, 202.0], [47.6, 202.0], [47.7, 202.0], [47.8, 202.0], [47.9, 202.0], [48.0, 202.0], [48.1, 202.0], [48.2, 202.0], [48.3, 202.0], [48.4, 202.0], [48.5, 202.0], [48.6, 202.0], [48.7, 202.0], [48.8, 202.0], [48.9, 202.0], [49.0, 202.0], [49.1, 202.0], [49.2, 202.0], [49.3, 202.0], [49.4, 202.0], [49.5, 202.0], [49.6, 202.0], [49.7, 202.0], [49.8, 202.0], [49.9, 202.0], [50.0, 202.0], [50.1, 202.0], [50.2, 202.0], [50.3, 202.0], [50.4, 202.0], [50.5, 202.0], [50.6, 202.0], [50.7, 202.0], [50.8, 202.0], [50.9, 202.0], [51.0, 202.0], [51.1, 202.0], [51.2, 202.0], [51.3, 202.0], [51.4, 202.0], [51.5, 202.0], [51.6, 202.0], [51.7, 202.0], [51.8, 202.0], [51.9, 202.0], [52.0, 202.0], [52.1, 202.0], [52.2, 202.0], [52.3, 202.0], [52.4, 202.0], [52.5, 202.0], [52.6, 202.0], [52.7, 202.0], [52.8, 202.0], [52.9, 202.0], [53.0, 202.0], [53.1, 202.0], [53.2, 202.0], [53.3, 202.0], [53.4, 202.0], [53.5, 202.0], [53.6, 202.0], [53.7, 202.0], [53.8, 202.0], [53.9, 202.0], [54.0, 202.0], [54.1, 202.0], [54.2, 202.0], [54.3, 202.0], [54.4, 202.0], [54.5, 202.0], [54.6, 202.0], [54.7, 202.0], [54.8, 202.0], [54.9, 202.0], [55.0, 202.0], [55.1, 202.0], [55.2, 202.0], [55.3, 202.0], [55.4, 202.0], [55.5, 202.0], [55.6, 202.0], [55.7, 202.0], [55.8, 202.0], [55.9, 202.0], [56.0, 202.0], [56.1, 202.0], [56.2, 202.0], [56.3, 202.0], [56.4, 202.0], [56.5, 202.0], [56.6, 202.0], [56.7, 202.0], [56.8, 202.0], [56.9, 202.0], [57.0, 202.0], [57.1, 202.0], [57.2, 202.0], [57.3, 202.0], [57.4, 202.0], [57.5, 202.0], [57.6, 202.0], [57.7, 202.0], [57.8, 202.0], [57.9, 202.0], [58.0, 202.0], [58.1, 202.0], [58.2, 202.0], [58.3, 202.0], [58.4, 202.0], [58.5, 202.0], [58.6, 202.0], [58.7, 202.0], [58.8, 202.0], [58.9, 202.0], [59.0, 202.0], [59.1, 202.0], [59.2, 202.0], [59.3, 202.0], [59.4, 202.0], [59.5, 202.0], [59.6, 202.0], [59.7, 202.0], [59.8, 202.0], [59.9, 202.0], [60.0, 202.0], [60.1, 202.0], [60.2, 202.0], [60.3, 202.0], [60.4, 202.0], [60.5, 202.0], [60.6, 202.0], [60.7, 202.0], [60.8, 202.0], [60.9, 202.0], [61.0, 202.0], [61.1, 202.0], [61.2, 202.0], [61.3, 202.0], [61.4, 202.0], [61.5, 202.0], [61.6, 202.0], [61.7, 202.0], [61.8, 202.0], [61.9, 202.0], [62.0, 202.0], [62.1, 202.0], [62.2, 202.0], [62.3, 202.0], [62.4, 202.0], [62.5, 202.0], [62.6, 202.0], [62.7, 202.0], [62.8, 202.0], [62.9, 202.0], [63.0, 202.0], [63.1, 202.0], [63.2, 202.0], [63.3, 202.0], [63.4, 202.0], [63.5, 202.0], [63.6, 202.0], [63.7, 202.0], [63.8, 202.0], [63.9, 202.0], [64.0, 202.0], [64.1, 202.0], [64.2, 202.0], [64.3, 202.0], [64.4, 202.0], [64.5, 202.0], [64.6, 202.0], [64.7, 202.0], [64.8, 202.0], [64.9, 202.0], [65.0, 202.0], [65.1, 202.0], [65.2, 202.0], [65.3, 202.0], [65.4, 202.0], [65.5, 202.0], [65.6, 202.0], [65.7, 202.0], [65.8, 202.0], [65.9, 202.0], [66.0, 202.0], [66.1, 202.0], [66.2, 202.0], [66.3, 202.0], [66.4, 202.0], [66.5, 202.0], [66.6, 202.0], [66.7, 202.0], [66.8, 202.0], [66.9, 202.0], [67.0, 202.0], [67.1, 202.0], [67.2, 202.0], [67.3, 202.0], [67.4, 202.0], [67.5, 202.0], [67.6, 202.0], [67.7, 202.0], [67.8, 202.0], [67.9, 202.0], [68.0, 202.0], [68.1, 202.0], [68.2, 202.0], [68.3, 202.0], [68.4, 202.0], [68.5, 202.0], [68.6, 202.0], [68.7, 202.0], [68.8, 202.0], [68.9, 202.0], [69.0, 202.0], [69.1, 202.0], [69.2, 202.0], [69.3, 202.0], [69.4, 202.0], [69.5, 202.0], [69.6, 202.0], [69.7, 202.0], [69.8, 202.0], [69.9, 202.0], [70.0, 202.0], [70.1, 202.0], [70.2, 202.0], [70.3, 202.0], [70.4, 202.0], [70.5, 202.0], [70.6, 202.0], [70.7, 202.0], [70.8, 202.0], [70.9, 202.0], [71.0, 202.0], [71.1, 202.0], [71.2, 202.0], [71.3, 202.0], [71.4, 202.0], [71.5, 202.0], [71.6, 202.0], [71.7, 202.0], [71.8, 202.0], [71.9, 202.0], [72.0, 202.0], [72.1, 202.0], [72.2, 202.0], [72.3, 202.0], [72.4, 202.0], [72.5, 202.0], [72.6, 202.0], [72.7, 202.0], [72.8, 202.0], [72.9, 202.0], [73.0, 202.0], [73.1, 202.0], [73.2, 202.0], [73.3, 202.0], [73.4, 202.0], [73.5, 202.0], [73.6, 202.0], [73.7, 202.0], [73.8, 202.0], [73.9, 202.0], [74.0, 202.0], [74.1, 202.0], [74.2, 202.0], [74.3, 202.0], [74.4, 202.0], [74.5, 202.0], [74.6, 202.0], [74.7, 202.0], [74.8, 202.0], [74.9, 202.0], [75.0, 202.0], [75.1, 202.0], [75.2, 202.0], [75.3, 202.0], [75.4, 202.0], [75.5, 202.0], [75.6, 202.0], [75.7, 202.0], [75.8, 202.0], [75.9, 202.0], [76.0, 202.0], [76.1, 202.0], [76.2, 202.0], [76.3, 202.0], [76.4, 202.0], [76.5, 202.0], [76.6, 202.0], [76.7, 202.0], [76.8, 202.0], [76.9, 202.0], [77.0, 202.0], [77.1, 202.0], [77.2, 202.0], [77.3, 202.0], [77.4, 202.0], [77.5, 202.0], [77.6, 202.0], [77.7, 202.0], [77.8, 202.0], [77.9, 202.0], [78.0, 202.0], [78.1, 202.0], [78.2, 202.0], [78.3, 202.0], [78.4, 202.0], [78.5, 202.0], [78.6, 202.0], [78.7, 202.0], [78.8, 202.0], [78.9, 202.0], [79.0, 202.0], [79.1, 202.0], [79.2, 202.0], [79.3, 202.0], [79.4, 202.0], [79.5, 202.0], [79.6, 202.0], [79.7, 202.0], [79.8, 202.0], [79.9, 202.0], [80.0, 202.0], [80.1, 202.0], [80.2, 202.0], [80.3, 202.0], [80.4, 202.0], [80.5, 202.0], [80.6, 202.0], [80.7, 202.0], [80.8, 202.0], [80.9, 202.0], [81.0, 202.0], [81.1, 202.0], [81.2, 202.0], [81.3, 202.0], [81.4, 202.0], [81.5, 202.0], [81.6, 202.0], [81.7, 202.0], [81.8, 202.0], [81.9, 202.0], [82.0, 202.0], [82.1, 202.0], [82.2, 202.0], [82.3, 202.0], [82.4, 202.0], [82.5, 202.0], [82.6, 202.0], [82.7, 202.0], [82.8, 202.0], [82.9, 202.0], [83.0, 202.0], [83.1, 202.0], [83.2, 202.0], [83.3, 202.0], [83.4, 202.0], [83.5, 202.0], [83.6, 202.0], [83.7, 202.0], [83.8, 202.0], [83.9, 202.0], [84.0, 202.0], [84.1, 202.0], [84.2, 202.0], [84.3, 202.0], [84.4, 202.0], [84.5, 202.0], [84.6, 202.0], [84.7, 202.0], [84.8, 202.0], [84.9, 202.0], [85.0, 202.0], [85.1, 202.0], [85.2, 202.0], [85.3, 202.0], [85.4, 202.0], [85.5, 202.0], [85.6, 202.0], [85.7, 202.0], [85.8, 202.0], [85.9, 202.0], [86.0, 202.0], [86.1, 202.0], [86.2, 202.0], [86.3, 202.0], [86.4, 202.0], [86.5, 202.0], [86.6, 202.0], [86.7, 202.0], [86.8, 202.0], [86.9, 202.0], [87.0, 202.0], [87.1, 202.0], [87.2, 202.0], [87.3, 202.0], [87.4, 202.0], [87.5, 202.0], [87.6, 202.0], [87.7, 202.0], [87.8, 202.0], [87.9, 202.0], [88.0, 202.0], [88.1, 202.0], [88.2, 202.0], [88.3, 202.0], [88.4, 202.0], [88.5, 202.0], [88.6, 202.0], [88.7, 202.0], [88.8, 202.0], [88.9, 202.0], [89.0, 202.0], [89.1, 202.0], [89.2, 202.0], [89.3, 202.0], [89.4, 202.0], [89.5, 202.0], [89.6, 202.0], [89.7, 202.0], [89.8, 202.0], [89.9, 202.0], [90.0, 202.0], [90.1, 202.0], [90.2, 202.0], [90.3, 202.0], [90.4, 202.0], [90.5, 202.0], [90.6, 202.0], [90.7, 202.0], [90.8, 202.0], [90.9, 202.0], [91.0, 202.0], [91.1, 202.0], [91.2, 202.0], [91.3, 202.0], [91.4, 202.0], [91.5, 202.0], [91.6, 202.0], [91.7, 202.0], [91.8, 202.0], [91.9, 202.0], [92.0, 202.0], [92.1, 202.0], [92.2, 202.0], [92.3, 202.0], [92.4, 202.0], [92.5, 202.0], [92.6, 202.0], [92.7, 202.0], [92.8, 202.0], [92.9, 202.0], [93.0, 202.0], [93.1, 202.0], [93.2, 202.0], [93.3, 202.0], [93.4, 202.0], [93.5, 202.0], [93.6, 202.0], [93.7, 202.0], [93.8, 202.0], [93.9, 202.0], [94.0, 202.0], [94.1, 202.0], [94.2, 202.0], [94.3, 202.0], [94.4, 202.0], [94.5, 202.0], [94.6, 202.0], [94.7, 202.0], [94.8, 202.0], [94.9, 202.0], [95.0, 202.0], [95.1, 202.0], [95.2, 202.0], [95.3, 202.0], [95.4, 202.0], [95.5, 202.0], [95.6, 202.0], [95.7, 202.0], [95.8, 202.0], [95.9, 202.0], [96.0, 202.0], [96.1, 202.0], [96.2, 202.0], [96.3, 202.0], [96.4, 202.0], [96.5, 202.0], [96.6, 202.0], [96.7, 202.0], [96.8, 202.0], [96.9, 202.0], [97.0, 202.0], [97.1, 202.0], [97.2, 202.0], [97.3, 202.0], [97.4, 202.0], [97.5, 202.0], [97.6, 202.0], [97.7, 202.0], [97.8, 202.0], [97.9, 202.0], [98.0, 202.0], [98.1, 202.0], [98.2, 202.0], [98.3, 202.0], [98.4, 202.0], [98.5, 202.0], [98.6, 202.0], [98.7, 202.0], [98.8, 202.0], [98.9, 202.0], [99.0, 202.0], [99.1, 202.0], [99.2, 202.0], [99.3, 202.0], [99.4, 202.0], [99.5, 202.0], [99.6, 202.0], [99.7, 202.0], [99.8, 202.0], [99.9, 202.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[0.0, 167.0], [0.1, 167.0], [0.2, 167.0], [0.3, 167.0], [0.4, 167.0], [0.5, 167.0], [0.6, 167.0], [0.7, 167.0], [0.8, 167.0], [0.9, 167.0], [1.0, 167.0], [1.1, 167.0], [1.2, 167.0], [1.3, 167.0], [1.4, 167.0], [1.5, 167.0], [1.6, 167.0], [1.7, 167.0], [1.8, 167.0], [1.9, 167.0], [2.0, 167.0], [2.1, 167.0], [2.2, 167.0], [2.3, 167.0], [2.4, 167.0], [2.5, 167.0], [2.6, 167.0], [2.7, 167.0], [2.8, 167.0], [2.9, 167.0], [3.0, 167.0], [3.1, 167.0], [3.2, 167.0], [3.3, 167.0], [3.4, 167.0], [3.5, 167.0], [3.6, 167.0], [3.7, 167.0], [3.8, 167.0], [3.9, 167.0], [4.0, 167.0], [4.1, 167.0], [4.2, 167.0], [4.3, 167.0], [4.4, 167.0], [4.5, 167.0], [4.6, 167.0], [4.7, 167.0], [4.8, 167.0], [4.9, 167.0], [5.0, 167.0], [5.1, 167.0], [5.2, 167.0], [5.3, 167.0], [5.4, 167.0], [5.5, 167.0], [5.6, 167.0], [5.7, 167.0], [5.8, 167.0], [5.9, 167.0], [6.0, 167.0], [6.1, 167.0], [6.2, 167.0], [6.3, 167.0], [6.4, 167.0], [6.5, 167.0], [6.6, 167.0], [6.7, 167.0], [6.8, 167.0], [6.9, 167.0], [7.0, 167.0], [7.1, 167.0], [7.2, 167.0], [7.3, 167.0], [7.4, 167.0], [7.5, 167.0], [7.6, 167.0], [7.7, 167.0], [7.8, 167.0], [7.9, 167.0], [8.0, 167.0], [8.1, 167.0], [8.2, 167.0], [8.3, 167.0], [8.4, 167.0], [8.5, 167.0], [8.6, 167.0], [8.7, 167.0], [8.8, 167.0], [8.9, 167.0], [9.0, 167.0], [9.1, 167.0], [9.2, 167.0], [9.3, 167.0], [9.4, 167.0], [9.5, 167.0], [9.6, 167.0], [9.7, 167.0], [9.8, 167.0], [9.9, 167.0], [10.0, 167.0], [10.1, 167.0], [10.2, 167.0], [10.3, 167.0], [10.4, 167.0], [10.5, 167.0], [10.6, 167.0], [10.7, 167.0], [10.8, 167.0], [10.9, 167.0], [11.0, 167.0], [11.1, 167.0], [11.2, 167.0], [11.3, 167.0], [11.4, 167.0], [11.5, 167.0], [11.6, 167.0], [11.7, 167.0], [11.8, 167.0], [11.9, 167.0], [12.0, 167.0], [12.1, 167.0], [12.2, 167.0], [12.3, 167.0], [12.4, 167.0], [12.5, 167.0], [12.6, 167.0], [12.7, 167.0], [12.8, 167.0], [12.9, 167.0], [13.0, 167.0], [13.1, 167.0], [13.2, 167.0], [13.3, 167.0], [13.4, 167.0], [13.5, 167.0], [13.6, 167.0], [13.7, 167.0], [13.8, 167.0], [13.9, 167.0], [14.0, 167.0], [14.1, 167.0], [14.2, 167.0], [14.3, 167.0], [14.4, 167.0], [14.5, 167.0], [14.6, 167.0], [14.7, 167.0], [14.8, 167.0], [14.9, 167.0], [15.0, 167.0], [15.1, 167.0], [15.2, 167.0], [15.3, 167.0], [15.4, 167.0], [15.5, 167.0], [15.6, 167.0], [15.7, 167.0], [15.8, 167.0], [15.9, 167.0], [16.0, 167.0], [16.1, 167.0], [16.2, 167.0], [16.3, 167.0], [16.4, 167.0], [16.5, 167.0], [16.6, 167.0], [16.7, 167.0], [16.8, 167.0], [16.9, 167.0], [17.0, 167.0], [17.1, 167.0], [17.2, 167.0], [17.3, 167.0], [17.4, 167.0], [17.5, 167.0], [17.6, 167.0], [17.7, 167.0], [17.8, 167.0], [17.9, 167.0], [18.0, 167.0], [18.1, 167.0], [18.2, 167.0], [18.3, 167.0], [18.4, 167.0], [18.5, 167.0], [18.6, 167.0], [18.7, 167.0], [18.8, 167.0], [18.9, 167.0], [19.0, 167.0], [19.1, 167.0], [19.2, 167.0], [19.3, 167.0], [19.4, 167.0], [19.5, 167.0], [19.6, 167.0], [19.7, 167.0], [19.8, 167.0], [19.9, 167.0], [20.0, 167.0], [20.1, 167.0], [20.2, 167.0], [20.3, 167.0], [20.4, 167.0], [20.5, 167.0], [20.6, 167.0], [20.7, 167.0], [20.8, 167.0], [20.9, 167.0], [21.0, 167.0], [21.1, 167.0], [21.2, 167.0], [21.3, 167.0], [21.4, 167.0], [21.5, 167.0], [21.6, 167.0], [21.7, 167.0], [21.8, 167.0], [21.9, 167.0], [22.0, 167.0], [22.1, 167.0], [22.2, 167.0], [22.3, 167.0], [22.4, 167.0], [22.5, 167.0], [22.6, 167.0], [22.7, 167.0], [22.8, 167.0], [22.9, 167.0], [23.0, 167.0], [23.1, 167.0], [23.2, 167.0], [23.3, 167.0], [23.4, 167.0], [23.5, 167.0], [23.6, 167.0], [23.7, 167.0], [23.8, 167.0], [23.9, 167.0], [24.0, 167.0], [24.1, 167.0], [24.2, 167.0], [24.3, 167.0], [24.4, 167.0], [24.5, 167.0], [24.6, 167.0], [24.7, 167.0], [24.8, 167.0], [24.9, 167.0], [25.0, 167.0], [25.1, 167.0], [25.2, 167.0], [25.3, 167.0], [25.4, 167.0], [25.5, 167.0], [25.6, 167.0], [25.7, 167.0], [25.8, 167.0], [25.9, 167.0], [26.0, 167.0], [26.1, 167.0], [26.2, 167.0], [26.3, 167.0], [26.4, 167.0], [26.5, 167.0], [26.6, 167.0], [26.7, 167.0], [26.8, 167.0], [26.9, 167.0], [27.0, 167.0], [27.1, 167.0], [27.2, 167.0], [27.3, 167.0], [27.4, 167.0], [27.5, 167.0], [27.6, 167.0], [27.7, 167.0], [27.8, 167.0], [27.9, 167.0], [28.0, 167.0], [28.1, 167.0], [28.2, 167.0], [28.3, 167.0], [28.4, 167.0], [28.5, 167.0], [28.6, 167.0], [28.7, 167.0], [28.8, 167.0], [28.9, 167.0], [29.0, 167.0], [29.1, 167.0], [29.2, 167.0], [29.3, 167.0], [29.4, 167.0], [29.5, 167.0], [29.6, 167.0], [29.7, 167.0], [29.8, 167.0], [29.9, 167.0], [30.0, 167.0], [30.1, 167.0], [30.2, 167.0], [30.3, 167.0], [30.4, 167.0], [30.5, 167.0], [30.6, 167.0], [30.7, 167.0], [30.8, 167.0], [30.9, 167.0], [31.0, 167.0], [31.1, 167.0], [31.2, 167.0], [31.3, 167.0], [31.4, 167.0], [31.5, 167.0], [31.6, 167.0], [31.7, 167.0], [31.8, 167.0], [31.9, 167.0], [32.0, 167.0], [32.1, 167.0], [32.2, 167.0], [32.3, 167.0], [32.4, 167.0], [32.5, 167.0], [32.6, 167.0], [32.7, 167.0], [32.8, 167.0], [32.9, 167.0], [33.0, 167.0], [33.1, 167.0], [33.2, 167.0], [33.3, 167.0], [33.4, 167.0], [33.5, 167.0], [33.6, 167.0], [33.7, 167.0], [33.8, 167.0], [33.9, 167.0], [34.0, 167.0], [34.1, 167.0], [34.2, 167.0], [34.3, 167.0], [34.4, 167.0], [34.5, 167.0], [34.6, 167.0], [34.7, 167.0], [34.8, 167.0], [34.9, 167.0], [35.0, 167.0], [35.1, 167.0], [35.2, 167.0], [35.3, 167.0], [35.4, 167.0], [35.5, 167.0], [35.6, 167.0], [35.7, 167.0], [35.8, 167.0], [35.9, 167.0], [36.0, 167.0], [36.1, 167.0], [36.2, 167.0], [36.3, 167.0], [36.4, 167.0], [36.5, 167.0], [36.6, 167.0], [36.7, 167.0], [36.8, 167.0], [36.9, 167.0], [37.0, 167.0], [37.1, 167.0], [37.2, 167.0], [37.3, 167.0], [37.4, 167.0], [37.5, 167.0], [37.6, 167.0], [37.7, 167.0], [37.8, 167.0], [37.9, 167.0], [38.0, 167.0], [38.1, 167.0], [38.2, 167.0], [38.3, 167.0], [38.4, 167.0], [38.5, 167.0], [38.6, 167.0], [38.7, 167.0], [38.8, 167.0], [38.9, 167.0], [39.0, 167.0], [39.1, 167.0], [39.2, 167.0], [39.3, 167.0], [39.4, 167.0], [39.5, 167.0], [39.6, 167.0], [39.7, 167.0], [39.8, 167.0], [39.9, 167.0], [40.0, 167.0], [40.1, 167.0], [40.2, 167.0], [40.3, 167.0], [40.4, 167.0], [40.5, 167.0], [40.6, 167.0], [40.7, 167.0], [40.8, 167.0], [40.9, 167.0], [41.0, 167.0], [41.1, 167.0], [41.2, 167.0], [41.3, 167.0], [41.4, 167.0], [41.5, 167.0], [41.6, 167.0], [41.7, 167.0], [41.8, 167.0], [41.9, 167.0], [42.0, 167.0], [42.1, 167.0], [42.2, 167.0], [42.3, 167.0], [42.4, 167.0], [42.5, 167.0], [42.6, 167.0], [42.7, 167.0], [42.8, 167.0], [42.9, 167.0], [43.0, 167.0], [43.1, 167.0], [43.2, 167.0], [43.3, 167.0], [43.4, 167.0], [43.5, 167.0], [43.6, 167.0], [43.7, 167.0], [43.8, 167.0], [43.9, 167.0], [44.0, 167.0], [44.1, 167.0], [44.2, 167.0], [44.3, 167.0], [44.4, 167.0], [44.5, 167.0], [44.6, 167.0], [44.7, 167.0], [44.8, 167.0], [44.9, 167.0], [45.0, 167.0], [45.1, 167.0], [45.2, 167.0], [45.3, 167.0], [45.4, 167.0], [45.5, 167.0], [45.6, 167.0], [45.7, 167.0], [45.8, 167.0], [45.9, 167.0], [46.0, 167.0], [46.1, 167.0], [46.2, 167.0], [46.3, 167.0], [46.4, 167.0], [46.5, 167.0], [46.6, 167.0], [46.7, 167.0], [46.8, 167.0], [46.9, 167.0], [47.0, 167.0], [47.1, 167.0], [47.2, 167.0], [47.3, 167.0], [47.4, 167.0], [47.5, 167.0], [47.6, 167.0], [47.7, 167.0], [47.8, 167.0], [47.9, 167.0], [48.0, 167.0], [48.1, 167.0], [48.2, 167.0], [48.3, 167.0], [48.4, 167.0], [48.5, 167.0], [48.6, 167.0], [48.7, 167.0], [48.8, 167.0], [48.9, 167.0], [49.0, 167.0], [49.1, 167.0], [49.2, 167.0], [49.3, 167.0], [49.4, 167.0], [49.5, 167.0], [49.6, 167.0], [49.7, 167.0], [49.8, 167.0], [49.9, 167.0], [50.0, 167.0], [50.1, 167.0], [50.2, 167.0], [50.3, 167.0], [50.4, 167.0], [50.5, 167.0], [50.6, 167.0], [50.7, 167.0], [50.8, 167.0], [50.9, 167.0], [51.0, 167.0], [51.1, 167.0], [51.2, 167.0], [51.3, 167.0], [51.4, 167.0], [51.5, 167.0], [51.6, 167.0], [51.7, 167.0], [51.8, 167.0], [51.9, 167.0], [52.0, 167.0], [52.1, 167.0], [52.2, 167.0], [52.3, 167.0], [52.4, 167.0], [52.5, 167.0], [52.6, 167.0], [52.7, 167.0], [52.8, 167.0], [52.9, 167.0], [53.0, 167.0], [53.1, 167.0], [53.2, 167.0], [53.3, 167.0], [53.4, 167.0], [53.5, 167.0], [53.6, 167.0], [53.7, 167.0], [53.8, 167.0], [53.9, 167.0], [54.0, 167.0], [54.1, 167.0], [54.2, 167.0], [54.3, 167.0], [54.4, 167.0], [54.5, 167.0], [54.6, 167.0], [54.7, 167.0], [54.8, 167.0], [54.9, 167.0], [55.0, 167.0], [55.1, 167.0], [55.2, 167.0], [55.3, 167.0], [55.4, 167.0], [55.5, 167.0], [55.6, 167.0], [55.7, 167.0], [55.8, 167.0], [55.9, 167.0], [56.0, 167.0], [56.1, 167.0], [56.2, 167.0], [56.3, 167.0], [56.4, 167.0], [56.5, 167.0], [56.6, 167.0], [56.7, 167.0], [56.8, 167.0], [56.9, 167.0], [57.0, 167.0], [57.1, 167.0], [57.2, 167.0], [57.3, 167.0], [57.4, 167.0], [57.5, 167.0], [57.6, 167.0], [57.7, 167.0], [57.8, 167.0], [57.9, 167.0], [58.0, 167.0], [58.1, 167.0], [58.2, 167.0], [58.3, 167.0], [58.4, 167.0], [58.5, 167.0], [58.6, 167.0], [58.7, 167.0], [58.8, 167.0], [58.9, 167.0], [59.0, 167.0], [59.1, 167.0], [59.2, 167.0], [59.3, 167.0], [59.4, 167.0], [59.5, 167.0], [59.6, 167.0], [59.7, 167.0], [59.8, 167.0], [59.9, 167.0], [60.0, 167.0], [60.1, 167.0], [60.2, 167.0], [60.3, 167.0], [60.4, 167.0], [60.5, 167.0], [60.6, 167.0], [60.7, 167.0], [60.8, 167.0], [60.9, 167.0], [61.0, 167.0], [61.1, 167.0], [61.2, 167.0], [61.3, 167.0], [61.4, 167.0], [61.5, 167.0], [61.6, 167.0], [61.7, 167.0], [61.8, 167.0], [61.9, 167.0], [62.0, 167.0], [62.1, 167.0], [62.2, 167.0], [62.3, 167.0], [62.4, 167.0], [62.5, 167.0], [62.6, 167.0], [62.7, 167.0], [62.8, 167.0], [62.9, 167.0], [63.0, 167.0], [63.1, 167.0], [63.2, 167.0], [63.3, 167.0], [63.4, 167.0], [63.5, 167.0], [63.6, 167.0], [63.7, 167.0], [63.8, 167.0], [63.9, 167.0], [64.0, 167.0], [64.1, 167.0], [64.2, 167.0], [64.3, 167.0], [64.4, 167.0], [64.5, 167.0], [64.6, 167.0], [64.7, 167.0], [64.8, 167.0], [64.9, 167.0], [65.0, 167.0], [65.1, 167.0], [65.2, 167.0], [65.3, 167.0], [65.4, 167.0], [65.5, 167.0], [65.6, 167.0], [65.7, 167.0], [65.8, 167.0], [65.9, 167.0], [66.0, 167.0], [66.1, 167.0], [66.2, 167.0], [66.3, 167.0], [66.4, 167.0], [66.5, 167.0], [66.6, 167.0], [66.7, 167.0], [66.8, 167.0], [66.9, 167.0], [67.0, 167.0], [67.1, 167.0], [67.2, 167.0], [67.3, 167.0], [67.4, 167.0], [67.5, 167.0], [67.6, 167.0], [67.7, 167.0], [67.8, 167.0], [67.9, 167.0], [68.0, 167.0], [68.1, 167.0], [68.2, 167.0], [68.3, 167.0], [68.4, 167.0], [68.5, 167.0], [68.6, 167.0], [68.7, 167.0], [68.8, 167.0], [68.9, 167.0], [69.0, 167.0], [69.1, 167.0], [69.2, 167.0], [69.3, 167.0], [69.4, 167.0], [69.5, 167.0], [69.6, 167.0], [69.7, 167.0], [69.8, 167.0], [69.9, 167.0], [70.0, 167.0], [70.1, 167.0], [70.2, 167.0], [70.3, 167.0], [70.4, 167.0], [70.5, 167.0], [70.6, 167.0], [70.7, 167.0], [70.8, 167.0], [70.9, 167.0], [71.0, 167.0], [71.1, 167.0], [71.2, 167.0], [71.3, 167.0], [71.4, 167.0], [71.5, 167.0], [71.6, 167.0], [71.7, 167.0], [71.8, 167.0], [71.9, 167.0], [72.0, 167.0], [72.1, 167.0], [72.2, 167.0], [72.3, 167.0], [72.4, 167.0], [72.5, 167.0], [72.6, 167.0], [72.7, 167.0], [72.8, 167.0], [72.9, 167.0], [73.0, 167.0], [73.1, 167.0], [73.2, 167.0], [73.3, 167.0], [73.4, 167.0], [73.5, 167.0], [73.6, 167.0], [73.7, 167.0], [73.8, 167.0], [73.9, 167.0], [74.0, 167.0], [74.1, 167.0], [74.2, 167.0], [74.3, 167.0], [74.4, 167.0], [74.5, 167.0], [74.6, 167.0], [74.7, 167.0], [74.8, 167.0], [74.9, 167.0], [75.0, 167.0], [75.1, 167.0], [75.2, 167.0], [75.3, 167.0], [75.4, 167.0], [75.5, 167.0], [75.6, 167.0], [75.7, 167.0], [75.8, 167.0], [75.9, 167.0], [76.0, 167.0], [76.1, 167.0], [76.2, 167.0], [76.3, 167.0], [76.4, 167.0], [76.5, 167.0], [76.6, 167.0], [76.7, 167.0], [76.8, 167.0], [76.9, 167.0], [77.0, 167.0], [77.1, 167.0], [77.2, 167.0], [77.3, 167.0], [77.4, 167.0], [77.5, 167.0], [77.6, 167.0], [77.7, 167.0], [77.8, 167.0], [77.9, 167.0], [78.0, 167.0], [78.1, 167.0], [78.2, 167.0], [78.3, 167.0], [78.4, 167.0], [78.5, 167.0], [78.6, 167.0], [78.7, 167.0], [78.8, 167.0], [78.9, 167.0], [79.0, 167.0], [79.1, 167.0], [79.2, 167.0], [79.3, 167.0], [79.4, 167.0], [79.5, 167.0], [79.6, 167.0], [79.7, 167.0], [79.8, 167.0], [79.9, 167.0], [80.0, 167.0], [80.1, 167.0], [80.2, 167.0], [80.3, 167.0], [80.4, 167.0], [80.5, 167.0], [80.6, 167.0], [80.7, 167.0], [80.8, 167.0], [80.9, 167.0], [81.0, 167.0], [81.1, 167.0], [81.2, 167.0], [81.3, 167.0], [81.4, 167.0], [81.5, 167.0], [81.6, 167.0], [81.7, 167.0], [81.8, 167.0], [81.9, 167.0], [82.0, 167.0], [82.1, 167.0], [82.2, 167.0], [82.3, 167.0], [82.4, 167.0], [82.5, 167.0], [82.6, 167.0], [82.7, 167.0], [82.8, 167.0], [82.9, 167.0], [83.0, 167.0], [83.1, 167.0], [83.2, 167.0], [83.3, 167.0], [83.4, 167.0], [83.5, 167.0], [83.6, 167.0], [83.7, 167.0], [83.8, 167.0], [83.9, 167.0], [84.0, 167.0], [84.1, 167.0], [84.2, 167.0], [84.3, 167.0], [84.4, 167.0], [84.5, 167.0], [84.6, 167.0], [84.7, 167.0], [84.8, 167.0], [84.9, 167.0], [85.0, 167.0], [85.1, 167.0], [85.2, 167.0], [85.3, 167.0], [85.4, 167.0], [85.5, 167.0], [85.6, 167.0], [85.7, 167.0], [85.8, 167.0], [85.9, 167.0], [86.0, 167.0], [86.1, 167.0], [86.2, 167.0], [86.3, 167.0], [86.4, 167.0], [86.5, 167.0], [86.6, 167.0], [86.7, 167.0], [86.8, 167.0], [86.9, 167.0], [87.0, 167.0], [87.1, 167.0], [87.2, 167.0], [87.3, 167.0], [87.4, 167.0], [87.5, 167.0], [87.6, 167.0], [87.7, 167.0], [87.8, 167.0], [87.9, 167.0], [88.0, 167.0], [88.1, 167.0], [88.2, 167.0], [88.3, 167.0], [88.4, 167.0], [88.5, 167.0], [88.6, 167.0], [88.7, 167.0], [88.8, 167.0], [88.9, 167.0], [89.0, 167.0], [89.1, 167.0], [89.2, 167.0], [89.3, 167.0], [89.4, 167.0], [89.5, 167.0], [89.6, 167.0], [89.7, 167.0], [89.8, 167.0], [89.9, 167.0], [90.0, 167.0], [90.1, 167.0], [90.2, 167.0], [90.3, 167.0], [90.4, 167.0], [90.5, 167.0], [90.6, 167.0], [90.7, 167.0], [90.8, 167.0], [90.9, 167.0], [91.0, 167.0], [91.1, 167.0], [91.2, 167.0], [91.3, 167.0], [91.4, 167.0], [91.5, 167.0], [91.6, 167.0], [91.7, 167.0], [91.8, 167.0], [91.9, 167.0], [92.0, 167.0], [92.1, 167.0], [92.2, 167.0], [92.3, 167.0], [92.4, 167.0], [92.5, 167.0], [92.6, 167.0], [92.7, 167.0], [92.8, 167.0], [92.9, 167.0], [93.0, 167.0], [93.1, 167.0], [93.2, 167.0], [93.3, 167.0], [93.4, 167.0], [93.5, 167.0], [93.6, 167.0], [93.7, 167.0], [93.8, 167.0], [93.9, 167.0], [94.0, 167.0], [94.1, 167.0], [94.2, 167.0], [94.3, 167.0], [94.4, 167.0], [94.5, 167.0], [94.6, 167.0], [94.7, 167.0], [94.8, 167.0], [94.9, 167.0], [95.0, 167.0], [95.1, 167.0], [95.2, 167.0], [95.3, 167.0], [95.4, 167.0], [95.5, 167.0], [95.6, 167.0], [95.7, 167.0], [95.8, 167.0], [95.9, 167.0], [96.0, 167.0], [96.1, 167.0], [96.2, 167.0], [96.3, 167.0], [96.4, 167.0], [96.5, 167.0], [96.6, 167.0], [96.7, 167.0], [96.8, 167.0], [96.9, 167.0], [97.0, 167.0], [97.1, 167.0], [97.2, 167.0], [97.3, 167.0], [97.4, 167.0], [97.5, 167.0], [97.6, 167.0], [97.7, 167.0], [97.8, 167.0], [97.9, 167.0], [98.0, 167.0], [98.1, 167.0], [98.2, 167.0], [98.3, 167.0], [98.4, 167.0], [98.5, 167.0], [98.6, 167.0], [98.7, 167.0], [98.8, 167.0], [98.9, 167.0], [99.0, 167.0], [99.1, 167.0], [99.2, 167.0], [99.3, 167.0], [99.4, 167.0], [99.5, 167.0], [99.6, 167.0], [99.7, 167.0], [99.8, 167.0], [99.9, 167.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 49.0], [0.1, 67.0], [0.2, 70.0], [0.3, 72.0], [0.4, 73.0], [0.5, 74.0], [0.6, 75.0], [0.7, 76.0], [0.8, 77.0], [0.9, 78.0], [1.0, 78.0], [1.1, 79.0], [1.2, 80.0], [1.3, 82.0], [1.4, 82.0], [1.5, 82.0], [1.6, 83.0], [1.7, 83.0], [1.8, 83.0], [1.9, 83.0], [2.0, 83.0], [2.1, 83.0], [2.2, 83.0], [2.3, 83.0], [2.4, 83.0], [2.5, 84.0], [2.6, 84.0], [2.7, 84.0], [2.8, 84.0], [2.9, 84.0], [3.0, 84.0], [3.1, 84.0], [3.2, 84.0], [3.3, 84.0], [3.4, 84.0], [3.5, 84.0], [3.6, 84.0], [3.7, 85.0], [3.8, 85.0], [3.9, 85.0], [4.0, 85.0], [4.1, 85.0], [4.2, 85.0], [4.3, 85.0], [4.4, 85.0], [4.5, 85.0], [4.6, 85.0], [4.7, 85.0], [4.8, 85.0], [4.9, 86.0], [5.0, 86.0], [5.1, 86.0], [5.2, 86.0], [5.3, 86.0], [5.4, 86.0], [5.5, 86.0], [5.6, 87.0], [5.7, 87.0], [5.8, 87.0], [5.9, 87.0], [6.0, 87.0], [6.1, 87.0], [6.2, 88.0], [6.3, 88.0], [6.4, 88.0], [6.5, 88.0], [6.6, 89.0], [6.7, 89.0], [6.8, 89.0], [6.9, 90.0], [7.0, 90.0], [7.1, 90.0], [7.2, 91.0], [7.3, 91.0], [7.4, 91.0], [7.5, 92.0], [7.6, 92.0], [7.7, 93.0], [7.8, 93.0], [7.9, 94.0], [8.0, 94.0], [8.1, 95.0], [8.2, 95.0], [8.3, 96.0], [8.4, 96.0], [8.5, 96.0], [8.6, 97.0], [8.7, 98.0], [8.8, 98.0], [8.9, 99.0], [9.0, 100.0], [9.1, 101.0], [9.2, 102.0], [9.3, 104.0], [9.4, 106.0], [9.5, 107.0], [9.6, 108.0], [9.7, 109.0], [9.8, 110.0], [9.9, 110.0], [10.0, 111.0], [10.1, 111.0], [10.2, 112.0], [10.3, 113.0], [10.4, 113.0], [10.5, 114.0], [10.6, 115.0], [10.7, 116.0], [10.8, 116.0], [10.9, 118.0], [11.0, 118.0], [11.1, 120.0], [11.2, 121.0], [11.3, 122.0], [11.4, 122.0], [11.5, 123.0], [11.6, 123.0], [11.7, 123.0], [11.8, 124.0], [11.9, 124.0], [12.0, 125.0], [12.1, 125.0], [12.2, 126.0], [12.3, 126.0], [12.4, 127.0], [12.5, 127.0], [12.6, 128.0], [12.7, 129.0], [12.8, 129.0], [12.9, 130.0], [13.0, 130.0], [13.1, 131.0], [13.2, 131.0], [13.3, 132.0], [13.4, 132.0], [13.5, 133.0], [13.6, 133.0], [13.7, 134.0], [13.8, 134.0], [13.9, 135.0], [14.0, 135.0], [14.1, 136.0], [14.2, 138.0], [14.3, 140.0], [14.4, 146.0], [14.5, 154.0], [14.6, 155.0], [14.7, 157.0], [14.8, 158.0], [14.9, 159.0], [15.0, 160.0], [15.1, 161.0], [15.2, 162.0], [15.3, 163.0], [15.4, 164.0], [15.5, 165.0], [15.6, 166.0], [15.7, 166.0], [15.8, 167.0], [15.9, 168.0], [16.0, 168.0], [16.1, 169.0], [16.2, 169.0], [16.3, 170.0], [16.4, 170.0], [16.5, 170.0], [16.6, 171.0], [16.7, 171.0], [16.8, 172.0], [16.9, 172.0], [17.0, 173.0], [17.1, 173.0], [17.2, 174.0], [17.3, 175.0], [17.4, 176.0], [17.5, 176.0], [17.6, 177.0], [17.7, 178.0], [17.8, 178.0], [17.9, 179.0], [18.0, 179.0], [18.1, 180.0], [18.2, 180.0], [18.3, 181.0], [18.4, 181.0], [18.5, 181.0], [18.6, 182.0], [18.7, 182.0], [18.8, 183.0], [18.9, 183.0], [19.0, 183.0], [19.1, 184.0], [19.2, 184.0], [19.3, 185.0], [19.4, 185.0], [19.5, 185.0], [19.6, 186.0], [19.7, 186.0], [19.8, 187.0], [19.9, 187.0], [20.0, 187.0], [20.1, 188.0], [20.2, 188.0], [20.3, 188.0], [20.4, 189.0], [20.5, 189.0], [20.6, 190.0], [20.7, 190.0], [20.8, 191.0], [20.9, 192.0], [21.0, 193.0], [21.1, 194.0], [21.2, 196.0], [21.3, 200.0], [21.4, 203.0], [21.5, 205.0], [21.6, 206.0], [21.7, 207.0], [21.8, 208.0], [21.9, 209.0], [22.0, 210.0], [22.1, 211.0], [22.2, 212.0], [22.3, 213.0], [22.4, 213.0], [22.5, 214.0], [22.6, 215.0], [22.7, 216.0], [22.8, 217.0], [22.9, 218.0], [23.0, 218.0], [23.1, 219.0], [23.2, 219.0], [23.3, 220.0], [23.4, 220.0], [23.5, 221.0], [23.6, 221.0], [23.7, 221.0], [23.8, 222.0], [23.9, 222.0], [24.0, 223.0], [24.1, 223.0], [24.2, 224.0], [24.3, 224.0], [24.4, 225.0], [24.5, 225.0], [24.6, 225.0], [24.7, 226.0], [24.8, 227.0], [24.9, 227.0], [25.0, 228.0], [25.1, 228.0], [25.2, 229.0], [25.3, 230.0], [25.4, 231.0], [25.5, 232.0], [25.6, 233.0], [25.7, 233.0], [25.8, 234.0], [25.9, 234.0], [26.0, 235.0], [26.1, 235.0], [26.2, 236.0], [26.3, 236.0], [26.4, 236.0], [26.5, 237.0], [26.6, 237.0], [26.7, 237.0], [26.8, 238.0], [26.9, 238.0], [27.0, 239.0], [27.1, 239.0], [27.2, 240.0], [27.3, 240.0], [27.4, 241.0], [27.5, 242.0], [27.6, 242.0], [27.7, 243.0], [27.8, 243.0], [27.9, 244.0], [28.0, 245.0], [28.1, 245.0], [28.2, 245.0], [28.3, 246.0], [28.4, 246.0], [28.5, 247.0], [28.6, 247.0], [28.7, 247.0], [28.8, 248.0], [28.9, 248.0], [29.0, 249.0], [29.1, 249.0], [29.2, 249.0], [29.3, 250.0], [29.4, 250.0], [29.5, 251.0], [29.6, 251.0], [29.7, 252.0], [29.8, 252.0], [29.9, 253.0], [30.0, 254.0], [30.1, 254.0], [30.2, 255.0], [30.3, 255.0], [30.4, 256.0], [30.5, 257.0], [30.6, 258.0], [30.7, 259.0], [30.8, 260.0], [30.9, 262.0], [31.0, 263.0], [31.1, 263.0], [31.2, 264.0], [31.3, 264.0], [31.4, 265.0], [31.5, 266.0], [31.6, 266.0], [31.7, 267.0], [31.8, 269.0], [31.9, 273.0], [32.0, 275.0], [32.1, 276.0], [32.2, 278.0], [32.3, 279.0], [32.4, 281.0], [32.5, 282.0], [32.6, 283.0], [32.7, 284.0], [32.8, 286.0], [32.9, 288.0], [33.0, 290.0], [33.1, 291.0], [33.2, 293.0], [33.3, 294.0], [33.4, 295.0], [33.5, 295.0], [33.6, 295.0], [33.7, 296.0], [33.8, 297.0], [33.9, 297.0], [34.0, 298.0], [34.1, 298.0], [34.2, 299.0], [34.3, 299.0], [34.4, 299.0], [34.5, 300.0], [34.6, 300.0], [34.7, 300.0], [34.8, 300.0], [34.9, 301.0], [35.0, 301.0], [35.1, 302.0], [35.2, 302.0], [35.3, 302.0], [35.4, 303.0], [35.5, 303.0], [35.6, 303.0], [35.7, 304.0], [35.8, 304.0], [35.9, 305.0], [36.0, 305.0], [36.1, 305.0], [36.2, 306.0], [36.3, 307.0], [36.4, 307.0], [36.5, 308.0], [36.6, 308.0], [36.7, 309.0], [36.8, 309.0], [36.9, 310.0], [37.0, 311.0], [37.1, 312.0], [37.2, 313.0], [37.3, 314.0], [37.4, 318.0], [37.5, 319.0], [37.6, 321.0], [37.7, 322.0], [37.8, 323.0], [37.9, 324.0], [38.0, 325.0], [38.1, 326.0], [38.2, 326.0], [38.3, 327.0], [38.4, 327.0], [38.5, 328.0], [38.6, 328.0], [38.7, 329.0], [38.8, 329.0], [38.9, 330.0], [39.0, 330.0], [39.1, 331.0], [39.2, 332.0], [39.3, 332.0], [39.4, 333.0], [39.5, 333.0], [39.6, 334.0], [39.7, 335.0], [39.8, 335.0], [39.9, 336.0], [40.0, 337.0], [40.1, 338.0], [40.2, 339.0], [40.3, 340.0], [40.4, 341.0], [40.5, 343.0], [40.6, 345.0], [40.7, 351.0], [40.8, 353.0], [40.9, 355.0], [41.0, 355.0], [41.1, 356.0], [41.2, 357.0], [41.3, 358.0], [41.4, 358.0], [41.5, 359.0], [41.6, 359.0], [41.7, 360.0], [41.8, 360.0], [41.9, 361.0], [42.0, 362.0], [42.1, 362.0], [42.2, 363.0], [42.3, 363.0], [42.4, 363.0], [42.5, 364.0], [42.6, 365.0], [42.7, 366.0], [42.8, 366.0], [42.9, 367.0], [43.0, 367.0], [43.1, 368.0], [43.2, 368.0], [43.3, 369.0], [43.4, 369.0], [43.5, 370.0], [43.6, 370.0], [43.7, 370.0], [43.8, 371.0], [43.9, 371.0], [44.0, 372.0], [44.1, 372.0], [44.2, 373.0], [44.3, 373.0], [44.4, 374.0], [44.5, 374.0], [44.6, 375.0], [44.7, 375.0], [44.8, 376.0], [44.9, 377.0], [45.0, 377.0], [45.1, 378.0], [45.2, 379.0], [45.3, 379.0], [45.4, 380.0], [45.5, 380.0], [45.6, 381.0], [45.7, 382.0], [45.8, 383.0], [45.9, 384.0], [46.0, 385.0], [46.1, 388.0], [46.2, 389.0], [46.3, 390.0], [46.4, 391.0], [46.5, 392.0], [46.6, 393.0], [46.7, 393.0], [46.8, 394.0], [46.9, 395.0], [47.0, 395.0], [47.1, 396.0], [47.2, 396.0], [47.3, 396.0], [47.4, 397.0], [47.5, 397.0], [47.6, 398.0], [47.7, 398.0], [47.8, 399.0], [47.9, 399.0], [48.0, 400.0], [48.1, 400.0], [48.2, 401.0], [48.3, 401.0], [48.4, 402.0], [48.5, 403.0], [48.6, 404.0], [48.7, 405.0], [48.8, 406.0], [48.9, 407.0], [49.0, 408.0], [49.1, 409.0], [49.2, 410.0], [49.3, 412.0], [49.4, 413.0], [49.5, 414.0], [49.6, 418.0], [49.7, 421.0], [49.8, 422.0], [49.9, 422.0], [50.0, 423.0], [50.1, 423.0], [50.2, 424.0], [50.3, 424.0], [50.4, 424.0], [50.5, 425.0], [50.6, 425.0], [50.7, 425.0], [50.8, 426.0], [50.9, 426.0], [51.0, 426.0], [51.1, 427.0], [51.2, 427.0], [51.3, 428.0], [51.4, 428.0], [51.5, 429.0], [51.6, 429.0], [51.7, 430.0], [51.8, 430.0], [51.9, 431.0], [52.0, 431.0], [52.1, 432.0], [52.2, 432.0], [52.3, 433.0], [52.4, 433.0], [52.5, 434.0], [52.6, 435.0], [52.7, 435.0], [52.8, 436.0], [52.9, 437.0], [53.0, 440.0], [53.1, 441.0], [53.2, 442.0], [53.3, 443.0], [53.4, 444.0], [53.5, 444.0], [53.6, 445.0], [53.7, 445.0], [53.8, 446.0], [53.9, 447.0], [54.0, 447.0], [54.1, 448.0], [54.2, 449.0], [54.3, 449.0], [54.4, 450.0], [54.5, 451.0], [54.6, 451.0], [54.7, 452.0], [54.8, 452.0], [54.9, 453.0], [55.0, 453.0], [55.1, 453.0], [55.2, 454.0], [55.3, 454.0], [55.4, 455.0], [55.5, 455.0], [55.6, 456.0], [55.7, 456.0], [55.8, 457.0], [55.9, 458.0], [56.0, 459.0], [56.1, 460.0], [56.2, 462.0], [56.3, 466.0], [56.4, 467.0], [56.5, 468.0], [56.6, 469.0], [56.7, 470.0], [56.8, 471.0], [56.9, 471.0], [57.0, 472.0], [57.1, 473.0], [57.2, 473.0], [57.3, 474.0], [57.4, 474.0], [57.5, 475.0], [57.6, 476.0], [57.7, 476.0], [57.8, 477.0], [57.9, 478.0], [58.0, 479.0], [58.1, 480.0], [58.2, 487.0], [58.3, 497.0], [58.4, 500.0], [58.5, 502.0], [58.6, 505.0], [58.7, 507.0], [58.8, 508.0], [58.9, 510.0], [59.0, 512.0], [59.1, 516.0], [59.2, 519.0], [59.3, 521.0], [59.4, 523.0], [59.5, 525.0], [59.6, 528.0], [59.7, 530.0], [59.8, 531.0], [59.9, 532.0], [60.0, 533.0], [60.1, 534.0], [60.2, 534.0], [60.3, 535.0], [60.4, 535.0], [60.5, 536.0], [60.6, 536.0], [60.7, 537.0], [60.8, 538.0], [60.9, 538.0], [61.0, 539.0], [61.1, 540.0], [61.2, 541.0], [61.3, 543.0], [61.4, 545.0], [61.5, 546.0], [61.6, 547.0], [61.7, 548.0], [61.8, 549.0], [61.9, 549.0], [62.0, 550.0], [62.1, 551.0], [62.2, 552.0], [62.3, 553.0], [62.4, 554.0], [62.5, 554.0], [62.6, 555.0], [62.7, 556.0], [62.8, 557.0], [62.9, 558.0], [63.0, 559.0], [63.1, 559.0], [63.2, 561.0], [63.3, 562.0], [63.4, 565.0], [63.5, 567.0], [63.6, 570.0], [63.7, 571.0], [63.8, 573.0], [63.9, 574.0], [64.0, 576.0], [64.1, 579.0], [64.2, 581.0], [64.3, 584.0], [64.4, 586.0], [64.5, 588.0], [64.6, 589.0], [64.7, 590.0], [64.8, 592.0], [64.9, 592.0], [65.0, 593.0], [65.1, 594.0], [65.2, 595.0], [65.3, 595.0], [65.4, 596.0], [65.5, 597.0], [65.6, 597.0], [65.7, 598.0], [65.8, 599.0], [65.9, 600.0], [66.0, 600.0], [66.1, 601.0], [66.2, 601.0], [66.3, 602.0], [66.4, 603.0], [66.5, 603.0], [66.6, 604.0], [66.7, 604.0], [66.8, 605.0], [66.9, 605.0], [67.0, 605.0], [67.1, 606.0], [67.2, 606.0], [67.3, 607.0], [67.4, 607.0], [67.5, 607.0], [67.6, 608.0], [67.7, 608.0], [67.8, 609.0], [67.9, 610.0], [68.0, 610.0], [68.1, 610.0], [68.2, 611.0], [68.3, 611.0], [68.4, 612.0], [68.5, 612.0], [68.6, 612.0], [68.7, 613.0], [68.8, 613.0], [68.9, 613.0], [69.0, 614.0], [69.1, 614.0], [69.2, 614.0], [69.3, 615.0], [69.4, 615.0], [69.5, 616.0], [69.6, 616.0], [69.7, 617.0], [69.8, 618.0], [69.9, 618.0], [70.0, 619.0], [70.1, 620.0], [70.2, 620.0], [70.3, 621.0], [70.4, 621.0], [70.5, 622.0], [70.6, 622.0], [70.7, 622.0], [70.8, 623.0], [70.9, 623.0], [71.0, 624.0], [71.1, 624.0], [71.2, 624.0], [71.3, 625.0], [71.4, 625.0], [71.5, 625.0], [71.6, 626.0], [71.7, 626.0], [71.8, 626.0], [71.9, 626.0], [72.0, 627.0], [72.1, 627.0], [72.2, 627.0], [72.3, 628.0], [72.4, 628.0], [72.5, 628.0], [72.6, 628.0], [72.7, 629.0], [72.8, 629.0], [72.9, 629.0], [73.0, 629.0], [73.1, 630.0], [73.2, 630.0], [73.3, 630.0], [73.4, 630.0], [73.5, 630.0], [73.6, 631.0], [73.7, 631.0], [73.8, 631.0], [73.9, 631.0], [74.0, 632.0], [74.1, 632.0], [74.2, 632.0], [74.3, 632.0], [74.4, 633.0], [74.5, 633.0], [74.6, 633.0], [74.7, 634.0], [74.8, 634.0], [74.9, 634.0], [75.0, 635.0], [75.1, 635.0], [75.2, 635.0], [75.3, 636.0], [75.4, 636.0], [75.5, 637.0], [75.6, 637.0], [75.7, 638.0], [75.8, 638.0], [75.9, 639.0], [76.0, 639.0], [76.1, 640.0], [76.2, 641.0], [76.3, 641.0], [76.4, 642.0], [76.5, 643.0], [76.6, 644.0], [76.7, 645.0], [76.8, 646.0], [76.9, 648.0], [77.0, 649.0], [77.1, 650.0], [77.2, 651.0], [77.3, 652.0], [77.4, 653.0], [77.5, 653.0], [77.6, 654.0], [77.7, 655.0], [77.8, 656.0], [77.9, 658.0], [78.0, 659.0], [78.1, 661.0], [78.2, 662.0], [78.3, 663.0], [78.4, 664.0], [78.5, 665.0], [78.6, 665.0], [78.7, 666.0], [78.8, 666.0], [78.9, 667.0], [79.0, 668.0], [79.1, 668.0], [79.2, 668.0], [79.3, 669.0], [79.4, 670.0], [79.5, 670.0], [79.6, 670.0], [79.7, 671.0], [79.8, 671.0], [79.9, 672.0], [80.0, 672.0], [80.1, 673.0], [80.2, 673.0], [80.3, 674.0], [80.4, 674.0], [80.5, 675.0], [80.6, 675.0], [80.7, 675.0], [80.8, 676.0], [80.9, 676.0], [81.0, 676.0], [81.1, 677.0], [81.2, 677.0], [81.3, 678.0], [81.4, 678.0], [81.5, 678.0], [81.6, 679.0], [81.7, 679.0], [81.8, 680.0], [81.9, 680.0], [82.0, 680.0], [82.1, 681.0], [82.2, 681.0], [82.3, 681.0], [82.4, 682.0], [82.5, 682.0], [82.6, 682.0], [82.7, 683.0], [82.8, 683.0], [82.9, 683.0], [83.0, 684.0], [83.1, 684.0], [83.2, 685.0], [83.3, 685.0], [83.4, 685.0], [83.5, 685.0], [83.6, 686.0], [83.7, 686.0], [83.8, 686.0], [83.9, 686.0], [84.0, 686.0], [84.1, 687.0], [84.2, 687.0], [84.3, 687.0], [84.4, 687.0], [84.5, 687.0], [84.6, 688.0], [84.7, 688.0], [84.8, 688.0], [84.9, 688.0], [85.0, 688.0], [85.1, 688.0], [85.2, 689.0], [85.3, 689.0], [85.4, 689.0], [85.5, 689.0], [85.6, 689.0], [85.7, 690.0], [85.8, 690.0], [85.9, 690.0], [86.0, 690.0], [86.1, 690.0], [86.2, 691.0], [86.3, 691.0], [86.4, 691.0], [86.5, 691.0], [86.6, 691.0], [86.7, 691.0], [86.8, 692.0], [86.9, 692.0], [87.0, 692.0], [87.1, 692.0], [87.2, 692.0], [87.3, 692.0], [87.4, 692.0], [87.5, 693.0], [87.6, 693.0], [87.7, 693.0], [87.8, 693.0], [87.9, 693.0], [88.0, 693.0], [88.1, 694.0], [88.2, 694.0], [88.3, 694.0], [88.4, 694.0], [88.5, 694.0], [88.6, 694.0], [88.7, 695.0], [88.8, 695.0], [88.9, 695.0], [89.0, 695.0], [89.1, 695.0], [89.2, 696.0], [89.3, 696.0], [89.4, 696.0], [89.5, 696.0], [89.6, 697.0], [89.7, 697.0], [89.8, 697.0], [89.9, 697.0], [90.0, 698.0], [90.1, 698.0], [90.2, 698.0], [90.3, 698.0], [90.4, 699.0], [90.5, 699.0], [90.6, 699.0], [90.7, 700.0], [90.8, 700.0], [90.9, 700.0], [91.0, 701.0], [91.1, 701.0], [91.2, 701.0], [91.3, 701.0], [91.4, 702.0], [91.5, 702.0], [91.6, 702.0], [91.7, 702.0], [91.8, 702.0], [91.9, 703.0], [92.0, 703.0], [92.1, 703.0], [92.2, 703.0], [92.3, 704.0], [92.4, 704.0], [92.5, 704.0], [92.6, 704.0], [92.7, 704.0], [92.8, 704.0], [92.9, 705.0], [93.0, 705.0], [93.1, 705.0], [93.2, 705.0], [93.3, 705.0], [93.4, 705.0], [93.5, 706.0], [93.6, 706.0], [93.7, 706.0], [93.8, 706.0], [93.9, 706.0], [94.0, 707.0], [94.1, 707.0], [94.2, 707.0], [94.3, 707.0], [94.4, 707.0], [94.5, 707.0], [94.6, 708.0], [94.7, 708.0], [94.8, 708.0], [94.9, 708.0], [95.0, 709.0], [95.1, 709.0], [95.2, 709.0], [95.3, 710.0], [95.4, 710.0], [95.5, 710.0], [95.6, 711.0], [95.7, 711.0], [95.8, 711.0], [95.9, 712.0], [96.0, 712.0], [96.1, 713.0], [96.2, 713.0], [96.3, 714.0], [96.4, 714.0], [96.5, 715.0], [96.6, 716.0], [96.7, 717.0], [96.8, 718.0], [96.9, 719.0], [97.0, 719.0], [97.1, 720.0], [97.2, 721.0], [97.3, 722.0], [97.4, 722.0], [97.5, 723.0], [97.6, 723.0], [97.7, 724.0], [97.8, 725.0], [97.9, 725.0], [98.0, 726.0], [98.1, 727.0], [98.2, 729.0], [98.3, 734.0], [98.4, 737.0], [98.5, 739.0], [98.6, 742.0], [98.7, 744.0], [98.8, 748.0], [98.9, 760.0], [99.0, 762.0], [99.1, 764.0], [99.2, 766.0], [99.3, 767.0], [99.4, 768.0], [99.5, 769.0], [99.6, 775.0], [99.7, 781.0], [99.8, 787.0], [99.9, 798.0], [100.0, 839.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 11819.0, "series": [{"data": [[0.0, 1.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[200.0, 1.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[100.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[0.0, 4255.0], [300.0, 6446.0], [600.0, 11819.0], [700.0, 4402.0], [100.0, 5893.0], [200.0, 6277.0], [400.0, 4953.0], [800.0, 44.0], [500.0, 3571.0]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 630.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 27211.0, "series": [{"data": [[0.0, 27211.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 19822.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 630.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.68166374E12, "maxY": 532.3428457507417, "series": [{"data": [[1.68166374E12, 1.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166374E12, 1.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166374E12, 242.31005846399205], [1.6816638E12, 532.3428457507417]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6816638E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 723.3650793650795, "series": [{"data": [[1.0, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.0, 2.0]], "isOverall": false, "label": "Imprimir token_response-Aggregated", "isController": false}, {"data": [[1.0, 202.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.0, 202.0]], "isOverall": false, "label": "Signup-Aggregated", "isController": false}, {"data": [[1.0, 167.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.0, 167.0]], "isOverall": false, "label": "Login-Aggregated", "isController": false}, {"data": [[2.0, 546.3333333333334], [3.0, 329.33333333333337], [4.0, 275.0], [5.0, 237.6], [6.0, 200.5], [7.0, 104.4], [8.0, 218.60000000000002], [9.0, 214.4], [10.0, 169.60000000000002], [11.0, 145.41666666666666], [12.0, 140.76923076923077], [13.0, 150.9090909090909], [14.0, 148.72727272727272], [15.0, 156.83333333333334], [16.0, 135.22222222222223], [17.0, 126.1764705882353], [18.0, 126.05555555555556], [19.0, 129.06666666666666], [20.0, 126.71428571428571], [21.0, 124.5263157894737], [22.0, 101.66666666666666], [23.0, 143.08333333333331], [24.0, 117.04166666666667], [25.0, 87.80000000000003], [26.0, 136.21428571428572], [27.0, 110.65517241379308], [28.0, 113.1851851851852], [29.0, 108.83870967741935], [30.0, 108.4193548387097], [31.0, 109.09677419354838], [32.0, 106.11764705882354], [33.0, 106.97058823529412], [34.0, 105.32432432432432], [35.0, 105.6857142857143], [36.0, 87.0], [37.0, 118.60975609756096], [38.0, 86.38461538461537], [39.0, 117.73809523809523], [40.0, 103.57894736842107], [41.0, 101.225], [42.0, 105.9767441860465], [43.0, 102.7906976744186], [44.0, 101.9772727272727], [45.0, 85.97777777777777], [46.0, 114.0212765957447], [47.0, 98.71739130434779], [48.0, 87.54], [49.0, 112.6470588235294], [50.0, 97.76363636363635], [51.0, 98.21818181818183], [52.0, 98.921568627451], [53.0, 97.79629629629629], [54.0, 98.30357142857143], [55.0, 99.94230769230771], [56.0, 86.12068965517241], [57.0, 108.03278688524588], [58.0, 97.64406779661013], [59.0, 96.83606557377048], [60.0, 97.40983606557377], [61.0, 96.92187500000001], [62.0, 96.29230769230767], [63.0, 96.56923076923076], [64.0, 86.08064516129033], [65.0, 105.92753623188406], [66.0, 96.7301587301587], [67.0, 94.99999999999999], [68.0, 113.96923076923076], [69.0, 101.530303030303], [70.0, 88.45205479452056], [71.0, 106.40540540540535], [72.0, 97.44117647058826], [73.0, 95.84415584415584], [74.0, 86.30666666666667], [75.0, 104.12162162162159], [76.0, 97.77333333333334], [77.0, 98.48717948717949], [78.0, 100.03999999999999], [79.0, 103.5945945945946], [80.0, 95.15068493150685], [81.0, 111.85714285714288], [82.0, 97.85], [83.0, 103.12162162162161], [84.0, 105.03797468354432], [85.0, 104.80769230769235], [86.0, 108.05194805194809], [87.0, 108.37333333333329], [88.0, 108.81481481481481], [89.0, 108.14285714285715], [90.0, 104.9041095890411], [91.0, 128.55555555555554], [92.0, 120.7638888888889], [93.0, 123.37499999999999], [94.0, 125.16901408450704], [95.0, 118.26760563380283], [96.0, 110.54545454545452], [97.0, 134.62820512820514], [98.0, 120.74683544303792], [99.0, 121.0909090909091], [100.0, 115.57746478873239], [101.0, 140.10958904109586], [102.0, 134.55555555555554], [103.0, 137.0], [104.0, 133.1625], [105.0, 127.52777777777781], [106.0, 132.6753246753247], [107.0, 134.96052631578948], [108.0, 134.6351351351351], [109.0, 132.99999999999997], [110.0, 125.50000000000003], [111.0, 144.05555555555557], [112.0, 143.14999999999998], [113.0, 138.93421052631578], [114.0, 131.97222222222217], [115.0, 150.64556962025313], [116.0, 141.51315789473682], [117.0, 143.16666666666663], [118.0, 141.85526315789474], [119.0, 136.67532467532465], [120.0, 150.03749999999988], [121.0, 143.68354430379753], [122.0, 145.60000000000005], [123.0, 152.92957746478876], [124.0, 165.6567164179105], [125.0, 161.67164179104472], [126.0, 177.28985507246375], [127.0, 160.39436619718313], [128.0, 175.09999999999997], [129.0, 178.38461538461536], [130.0, 175.9672131147541], [131.0, 190.0657894736842], [132.0, 168.93548387096774], [133.0, 190.11267605633802], [134.0, 174.43055555555554], [135.0, 178.24637681159422], [136.0, 184.86764705882348], [137.0, 187.014705882353], [138.0, 187.8028169014085], [139.0, 181.43478260869568], [140.0, 171.90277777777774], [141.0, 180.92405063291142], [142.0, 173.42465753424653], [143.0, 180.75], [144.0, 181.2933333333333], [145.0, 182.55714285714285], [146.0, 182.53030303030295], [147.0, 206.08219178082194], [148.0, 190.48000000000002], [149.0, 187.4264705882353], [150.0, 188.4931506849315], [151.0, 189.48529411764704], [152.0, 212.7246376811593], [153.0, 200.32432432432432], [154.0, 194.20833333333337], [155.0, 187.93243243243248], [156.0, 200.26582278481007], [157.0, 187.86301369863008], [158.0, 192.97368421052636], [159.0, 193.24657534246572], [160.0, 184.175], [161.0, 198.19999999999996], [162.0, 194.375], [163.0, 194.7333333333333], [164.0, 197.06172839506175], [165.0, 196.05194805194813], [166.0, 189.32000000000005], [167.0, 193.05405405405406], [168.0, 215.22368421052624], [169.0, 207.9264705882353], [170.0, 220.18181818181816], [171.0, 228.21428571428564], [172.0, 227.9861111111111], [173.0, 220.171052631579], [174.0, 216.25714285714287], [175.0, 212.12500000000003], [176.0, 219.089552238806], [177.0, 220.90410958904104], [178.0, 228.6197183098591], [179.0, 222.26250000000005], [180.0, 222.20588235294113], [181.0, 222.41891891891896], [182.0, 220.65277777777777], [183.0, 237.71830985915497], [184.0, 225.0547945205479], [185.0, 237.61333333333334], [186.0, 232.25714285714292], [187.0, 226.0], [188.0, 241.02631578947367], [189.0, 236.02739726027406], [190.0, 232.8918918918919], [191.0, 223.96103896103898], [192.0, 236.74999999999994], [193.0, 235.05555555555554], [194.0, 240.87323943661977], [195.0, 242.20588235294113], [196.0, 253.43421052631578], [197.0, 238.0405405405406], [198.0, 229.61538461538464], [199.0, 252.50649350649348], [200.0, 237.58904109589042], [201.0, 245.73239436619718], [202.0, 245.51851851851853], [203.0, 244.35211267605635], [204.0, 247.6301369863014], [205.0, 254.64285714285717], [206.0, 256.7733333333333], [207.0, 251.7125], [208.0, 246.16455696202527], [209.0, 244.31081081081084], [210.0, 237.13924050632912], [211.0, 247.84999999999997], [212.0, 237.3026315789473], [213.0, 257.25925925925924], [214.0, 245.34666666666664], [215.0, 257.3376623376624], [216.0, 253.70512820512812], [217.0, 259.91666666666674], [218.0, 261.87341772151893], [219.0, 255.9259259259259], [220.0, 254.36986301369868], [221.0, 256.22784810126575], [222.0, 253.72368421052636], [223.0, 267.8205128205128], [224.0, 252.85365853658533], [225.0, 263.94805194805184], [226.0, 256.71604938271605], [227.0, 262.3866666666667], [228.0, 256.68831168831156], [229.0, 269.8289473684211], [230.0, 259.60493827160514], [231.0, 276.4342105263158], [232.0, 272.2077922077923], [233.0, 272.0129870129871], [234.0, 273.2098765432099], [235.0, 272.2533333333333], [236.0, 273.6315789473685], [237.0, 278.88405797101456], [238.0, 294.37142857142857], [239.0, 306.77611940298516], [240.0, 317.4000000000001], [241.0, 315.43421052631567], [242.0, 308.5], [243.0, 299.78378378378375], [244.0, 289.01234567901236], [245.0, 283.52500000000003], [246.0, 283.68493150684935], [247.0, 288.8421052631579], [248.0, 291.0000000000001], [249.0, 299.3972602739727], [250.0, 305.8857142857143], [251.0, 312.04225352112684], [252.0, 313.0399999999999], [253.0, 309.64864864864865], [254.0, 304.8421052631578], [255.0, 306.08], [257.0, 311.6891891891892], [256.0, 309.109589041096], [258.0, 309.5189873417722], [259.0, 306.11842105263156], [260.0, 301.4124999999997], [261.0, 301.6538461538462], [262.0, 299.24999999999994], [263.0, 315.6176470588235], [264.0, 310.96202531645565], [270.0, 302.5194805194806], [271.0, 308.9], [268.0, 308.3249999999999], [269.0, 307.746835443038], [265.0, 322.59999999999997], [266.0, 317.1604938271603], [267.0, 310.0666666666668], [273.0, 331.695652173913], [272.0, 331.21794871794873], [274.0, 337.8441558441559], [275.0, 335.4166666666667], [276.0, 337.6712328767122], [277.0, 334.9729729729729], [278.0, 335.2432432432432], [279.0, 338.4166666666668], [280.0, 341.32], [286.0, 343.4358974358974], [287.0, 327.93506493506493], [284.0, 342.89610389610385], [285.0, 336.8904109589041], [281.0, 338.6666666666667], [282.0, 354.5211267605635], [283.0, 347.3636363636363], [289.0, 327.7105263157895], [288.0, 337.3690476190476], [290.0, 329.02564102564116], [291.0, 327.32894736842115], [292.0, 347.3972602739725], [293.0, 350.057142857143], [294.0, 361.35820895522403], [295.0, 371.9577464788733], [296.0, 371.5217391304347], [302.0, 367.3333333333334], [303.0, 372.9459459459459], [300.0, 383.8591549295774], [301.0, 379.9722222222224], [297.0, 388.31884057971], [298.0, 382.40298507462677], [299.0, 391.7808219178082], [305.0, 360.7222222222222], [304.0, 364.03797468354423], [306.0, 359.4594594594594], [307.0, 372.4657534246576], [308.0, 371.1999999999999], [309.0, 371.50000000000017], [310.0, 370.56756756756766], [311.0, 365.3108108108109], [312.0, 364.4375], [318.0, 398.91304347826093], [319.0, 401.4027777777777], [316.0, 383.027027027027], [317.0, 391.4571428571428], [313.0, 360.69736842105254], [314.0, 372.9428571428571], [315.0, 377.2463768115943], [321.0, 392.49382716049377], [320.0, 400.52631578947364], [322.0, 387.1052631578947], [323.0, 380.4133333333334], [324.0, 378.59210526315786], [325.0, 378.71052631578954], [326.0, 379.0740740740741], [327.0, 376.48717948717945], [328.0, 371.05194805194805], [334.0, 397.736111111111], [335.0, 408.4545454545455], [332.0, 388.49315068493144], [333.0, 395.12499999999994], [329.0, 380.01250000000005], [330.0, 371.16438356164383], [331.0, 387.32000000000005], [337.0, 398.75324675324674], [336.0, 406.9729729729729], [338.0, 408.49999999999994], [339.0, 403.1891891891893], [340.0, 407.5285714285716], [341.0, 408.1333333333334], [342.0, 422.0000000000001], [343.0, 413.1973684210528], [344.0, 417.56249999999983], [350.0, 409.33783783783787], [351.0, 417.5588235294117], [348.0, 400.4935064935065], [349.0, 406.5555555555555], [345.0, 408.13698630137003], [346.0, 404.98684210526335], [347.0, 400.2469135802468], [353.0, 439.61428571428587], [352.0, 429.0563380281691], [354.0, 439.53246753246765], [355.0, 440.1971830985917], [356.0, 433.02597402597405], [357.0, 433.3815789473684], [358.0, 428.29999999999995], [359.0, 425.4545454545454], [360.0, 433.68421052631584], [366.0, 431.09722222222206], [367.0, 429.6], [364.0, 429.70512820512806], [365.0, 433.7702702702704], [361.0, 431.3380281690141], [362.0, 436.58333333333314], [363.0, 432.92500000000007], [369.0, 433.090909090909], [368.0, 431.1466666666667], [370.0, 435.3194444444444], [371.0, 436.17948717948735], [372.0, 438.5540540540541], [373.0, 434.4383561643835], [374.0, 449.89041095890406], [375.0, 443.9166666666666], [376.0, 456.78666666666663], [382.0, 454.6447368421053], [383.0, 458.32926829268285], [380.0, 460.80281690140845], [381.0, 460.6891891891893], [377.0, 450.6301369863013], [378.0, 463.0845070422535], [379.0, 460.62337662337654], [385.0, 451.1641791044775], [384.0, 449.72368421052636], [386.0, 458.109589041096], [387.0, 459.59459459459475], [388.0, 462.79268292682906], [389.0, 459.43902439024384], [390.0, 454.10526315789457], [391.0, 447.68], [392.0, 450.3783783783784], [398.0, 476.49315068493144], [399.0, 485.55405405405406], [396.0, 475.09722222222223], [397.0, 478.29333333333324], [393.0, 453.8648648648648], [394.0, 462.8783783783784], [395.0, 471.9315068493151], [401.0, 482.67499999999995], [400.0, 482.6323529411766], [402.0, 479.2374999999999], [403.0, 477.9428571428571], [404.0, 478.3076923076924], [405.0, 474.423076923077], [406.0, 471.9090909090908], [407.0, 476.74576271186436], [408.0, 498.37931034482773], [414.0, 511.54929577464776], [415.0, 505.3283582089553], [412.0, 537.6301369863011], [413.0, 534.7875], [409.0, 526.5294117647057], [410.0, 526.8695652173914], [411.0, 532.202702702703], [417.0, 516.0277777777777], [416.0, 505.3432835820896], [418.0, 521.2142857142856], [419.0, 528.211267605634], [420.0, 538.0862068965517], [421.0, 557.8524590163933], [422.0, 567.9000000000001], [423.0, 578.6333333333333], [424.0, 591.790322580645], [430.0, 624.3448275862066], [431.0, 632.8199999999999], [428.0, 624.0169491525425], [429.0, 626.6825396825398], [425.0, 603.6949152542372], [426.0, 617.9833333333332], [427.0, 623.9193548387099], [433.0, 685.2631578947368], [432.0, 653.4038461538463], [434.0, 701.4074074074073], [435.0, 708.6538461538462], [436.0, 719.5357142857143], [437.0, 722.3125000000002], [438.0, 723.3650793650795], [439.0, 720.85], [440.0, 697.7499999999995], [446.0, 637.0142857142858], [447.0, 619.8571428571428], [444.0, 650.6527777777779], [445.0, 641.3225806451615], [441.0, 698.1607142857143], [442.0, 678.9365079365078], [443.0, 664.1818181818182], [449.0, 560.8055555555554], [448.0, 582.0250000000001], [450.0, 553.3658536585365], [451.0, 542.9577464788734], [452.0, 540.661971830986], [453.0, 537.6351351351349], [454.0, 538.8571428571428], [455.0, 550.9701492537315], [456.0, 560.8846153846152], [462.0, 542.88], [463.0, 541.5641025641025], [460.0, 552.3333333333333], [461.0, 541.6], [457.0, 560.5945945945947], [458.0, 557.0416666666666], [459.0, 555.0999999999997], [465.0, 552.4], [464.0, 543.0281690140846], [466.0, 557.4794520547945], [467.0, 560.959459459459], [468.0, 564.0694444444446], [469.0, 571.0281690140841], [470.0, 576.4931506849314], [471.0, 578.1857142857142], [472.0, 580.1935483870967], [478.0, 617.8529411764707], [479.0, 616.2285714285713], [476.0, 566.0129870129871], [477.0, 573.5142857142857], [473.0, 591.0277777777775], [474.0, 556.9178082191781], [475.0, 601.9718309859155], [481.0, 597.1506849315069], [480.0, 565.8374999999997], [482.0, 529.0952380952383], [483.0, 601.1549295774646], [484.0, 524.3375], [485.0, 601.544117647059], [486.0, 550.5394736842104], [487.0, 601.9857142857143], [488.0, 563.4430379746835], [494.0, 578.1973684210526], [495.0, 588.7101449275367], [492.0, 573.5641025641025], [493.0, 610.4520547945206], [489.0, 604.5882352941177], [490.0, 549.3037974683548], [491.0, 612.8378378378378], [497.0, 548.1333333333332], [496.0, 600.6944444444445], [498.0, 635.3731343283579], [499.0, 587.256756756757], [500.0, 643.109589041096], [501.0, 586.6363636363635], [502.0, 640.9857142857144], [503.0, 588.7674418604652], [504.0, 626.2285714285715], [510.0, 617.4461538461537], [511.0, 531.065789473684], [508.0, 610.6081081081084], [509.0, 539.158536585366], [505.0, 585.5714285714289], [506.0, 613.8399999999999], [507.0, 564.3766233766236], [515.0, 607.3636363636366], [512.0, 640.4459459459462], [526.0, 538.3764705882352], [527.0, 667.5540540540541], [524.0, 497.87777777777785], [525.0, 651.735294117647], [522.0, 540.1750000000001], [523.0, 634.3055555555555], [513.0, 569.7586206896552], [514.0, 644.7000000000002], [516.0, 593.2749999999999], [517.0, 603.0975609756101], [518.0, 517.6555555555557], [519.0, 625.6315789473684], [528.0, 600.9375000000001], [542.0, 639.3947368421051], [543.0, 526.3777777777777], [540.0, 646.9999999999999], [541.0, 557.3563218390806], [538.0, 585.2000000000002], [539.0, 531.78125], [536.0, 593.0617283950618], [537.0, 611.9333333333334], [529.0, 656.8266666666667], [530.0, 609.7215189873419], [531.0, 587.7804878048779], [532.0, 572.7272727272731], [533.0, 615.0579710144925], [534.0, 609.5844155844156], [535.0, 631.9594594594596], [520.0, 522.4444444444443], [521.0, 636.5507246376814], [547.0, 596.8024691358025], [544.0, 640.3378378378378], [558.0, 646.7162162162161], [559.0, 647.6999999999999], [556.0, 659.7611940298507], [557.0, 614.8450704225351], [554.0, 633.8333333333331], [555.0, 612.8800000000001], [545.0, 556.5952380952381], [546.0, 606.4871794871799], [548.0, 654.3246753246751], [549.0, 639.6799999999998], [550.0, 593.770114942529], [551.0, 602.6585365853657], [560.0, 655.3249999999999], [570.0, 685.6484819160512], [568.0, 651.5641025641028], [569.0, 596.896551724138], [561.0, 614.7500000000001], [562.0, 657.0617283950618], [563.0, 655.3461538461538], [564.0, 707.5217391304345], [565.0, 612.6704545454545], [566.0, 694.6805555555555], [567.0, 595.2560975609753], [552.0, 588.3544303797469], [553.0, 559.8222222222224]], "isOverall": false, "label": "Upload de archivo", "isController": false}, {"data": [[349.1463491397426, 423.40740663029925]], "isOverall": false, "label": "Upload de archivo-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 570.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 134843.8, "minX": 1.68166374E12, "maxY": 249874.51666666666, "series": [{"data": [[1.68166374E12, 249874.51666666666], [1.6816638E12, 162263.3]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.68166374E12, 239838.33333333334], [1.6816638E12, 134843.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6816638E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68166374E12, "maxY": 640.4926520847617, "series": [{"data": [[1.68166374E12, 2.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166374E12, 202.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166374E12, 167.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166374E12, 296.80799893701766], [1.6816638E12, 640.4926520847617]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6816638E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68166374E12, "maxY": 637.8026885395288, "series": [{"data": [[1.68166374E12, 0.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166374E12, 199.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166374E12, 167.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166374E12, 296.8036805740119], [1.6816638E12, 637.8026885395288]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6816638E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.68166374E12, "maxY": 103.0, "series": [{"data": [[1.68166374E12, 0.0]], "isOverall": false, "label": "Imprimir token_response", "isController": false}, {"data": [[1.68166374E12, 103.0]], "isOverall": false, "label": "Signup", "isController": false}, {"data": [[1.68166374E12, 81.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[1.68166374E12, 1.536606431039071], [1.6816638E12, 3.710241512873107]], "isOverall": false, "label": "Upload de archivo", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6816638E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.68166374E12, "maxY": 839.0, "series": [{"data": [[1.68166374E12, 807.0], [1.6816638E12, 839.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.68166374E12, 2.0], [1.6816638E12, 532.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.68166374E12, 536.0], [1.6816638E12, 712.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.68166374E12, 716.0], [1.6816638E12, 776.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.68166374E12, 370.0], [1.6816638E12, 677.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.68166374E12, 624.0], [1.6816638E12, 729.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6816638E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 74.0, "minX": 1.0, "maxY": 744.0, "series": [{"data": [[581.0, 84.0], [607.0, 704.0], [699.0, 85.0], [673.0, 605.0], [694.0, 744.0], [46.0, 87.5], [768.0, 166.0], [798.0, 172.0], [789.0, 519.0], [828.0, 210.5], [816.0, 88.0], [815.0, 474.0], [812.0, 212.0], [826.0, 363.0], [827.0, 547.0], [805.0, 572.0], [800.0, 574.0], [829.0, 355.0], [822.0, 403.0], [817.0, 695.0], [811.0, 370.0], [831.0, 532.5], [832.0, 482.0], [860.0, 96.0], [842.0, 135.0], [848.0, 180.0], [862.0, 240.0], [856.0, 263.0], [839.0, 404.0], [835.0, 597.0], [841.0, 672.0], [855.0, 366.0], [851.0, 686.0], [849.0, 702.0], [846.0, 331.0], [843.0, 428.0], [845.0, 454.0], [869.0, 249.0], [878.0, 631.0], [885.0, 637.0], [893.0, 629.0], [868.0, 668.0], [901.0, 631.0], [165.0, 87.0], [1.0, 202.0], [307.0, 85.0], [439.0, 85.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[694.0, 80.0], [800.0, 75.5], [817.0, 76.5], [822.0, 77.0], [831.0, 76.5], [815.0, 74.5], [835.0, 76.5], [842.0, 77.0], [851.0, 76.0], [849.0, 76.0], [832.0, 74.0], [841.0, 76.5], [878.0, 75.0], [885.0, 74.0], [893.0, 76.0], [868.0, 77.0], [901.0, 74.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 901.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 744.0, "series": [{"data": [[581.0, 84.0], [607.0, 704.0], [699.0, 85.0], [673.0, 605.0], [694.0, 744.0], [46.0, 87.5], [768.0, 166.0], [798.0, 172.0], [789.0, 519.0], [828.0, 210.5], [816.0, 88.0], [815.0, 474.0], [812.0, 212.0], [826.0, 363.0], [827.0, 547.0], [805.0, 572.0], [800.0, 574.0], [829.0, 355.0], [822.0, 403.0], [817.0, 695.0], [811.0, 370.0], [831.0, 532.5], [832.0, 482.0], [860.0, 96.0], [842.0, 135.0], [848.0, 180.0], [862.0, 240.0], [856.0, 263.0], [839.0, 404.0], [835.0, 597.0], [841.0, 672.0], [855.0, 366.0], [851.0, 686.0], [849.0, 702.0], [846.0, 331.0], [843.0, 428.0], [845.0, 454.0], [869.0, 249.0], [878.0, 631.0], [885.0, 637.0], [893.0, 629.0], [868.0, 668.0], [901.0, 631.0], [165.0, 87.0], [1.0, 199.0], [307.0, 85.0], [439.0, 85.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[694.0, 0.0], [800.0, 0.0], [817.0, 0.0], [822.0, 0.0], [831.0, 0.0], [815.0, 0.0], [835.0, 0.0], [842.0, 0.0], [851.0, 0.0], [849.0, 0.0], [832.0, 0.0], [841.0, 0.0], [878.0, 0.0], [885.0, 0.0], [893.0, 0.0], [868.0, 0.0], [901.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 901.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 285.03333333333336, "minX": 1.68166374E12, "maxY": 509.35, "series": [{"data": [[1.68166374E12, 509.35], [1.6816638E12, 285.03333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6816638E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.68166374E12, "maxY": 501.78333333333336, "series": [{"data": [[1.68166374E12, 501.78333333333336], [1.6816638E12, 282.1]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6816638E12, 10.433333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.6816638E12, 0.06666666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6816638E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.68166374E12, "maxY": 501.73333333333335, "series": [{"data": [[1.68166374E12, 0.016666666666666666]], "isOverall": false, "label": "Imprimir token_response-success", "isController": false}, {"data": [[1.68166374E12, 0.016666666666666666]], "isOverall": false, "label": "Signup-success", "isController": false}, {"data": [[1.6816638E12, 10.5]], "isOverall": false, "label": "Upload de archivo-failure", "isController": false}, {"data": [[1.68166374E12, 501.73333333333335], [1.6816638E12, 282.1]], "isOverall": false, "label": "Upload de archivo-success", "isController": false}, {"data": [[1.68166374E12, 0.016666666666666666]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6816638E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.5, "minX": 1.68166374E12, "maxY": 501.78333333333336, "series": [{"data": [[1.68166374E12, 501.78333333333336], [1.6816638E12, 282.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6816638E12, 10.5]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6816638E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

